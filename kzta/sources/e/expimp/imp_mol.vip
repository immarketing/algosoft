#component "KZTA"
interface imp_mol;
table struct tmol (
  podrcode: string[3],
  sklcode: string[1],
  molname: string,
  moltopodr: boolean,
  cpodr: comp,
  cskl: comp,
  cperson: comp
);
const
  sxlspath = 'D:\gal\kzta\данные\mol.xls';
end;
var
  tr: translate;
create view as select * from tmol,katpodr,podrier,persons,katmol;
function xlrowcount: longint; {
  var l,y: longint;
  var s1,s2: string;
  l := 32000;
  y := l;
  startnewvisual(vtRotateVisual, vftimer+vfbreak, 'Определение количества строк в xls-файле', 0);
  while true do {
    if not nextvisual {
      message('Расчет количества строк в xls-файле прерван.'#13'Количество строк определено как 0');
      result := 0;
      break;
    }
    xlgetcellvalue(y,1,s1);
    xlgetcellvalue(y+1,1,s2);
    //log_('l='+l+'; y='+y+'; s1='+s1+'; s2='+s2);
    if s1<>'' and s2='' {
      result := y;
      break;
    } else {
      l := l div 2;
      if l=0 then l := 1;
      y := y + l * if(s1='',-1,1);
    }
    if y=0 then {
      result := 0;
      break;
    }
  }
  stopvisual('',0);
}
  browse brinfo;
    table tmol;
    fields
      tmol.podrcode 'podrcode':[3], protect;
      tmol.sklcode 'sklcode':[3], protect;
      tmol.molname 'molname':[30], protect;
      if(GetAnyKau(0, 2, tmol.cpodr), GivenAnName(1), '') 'cpodr': [20],protect;
      if(GetAnyKau(0, 2, tmol.cskl), GivenAnName(1), '') 'cskl': [20],protect;
      if(GetAnyKau(0, 3, tmol.cperson), GivenAnName(1), '') 'cperson': [20],protect;
  end;
  function addpodr(pname_, pcode_: string; cprnt_: comp; sklad_:word):comp; {
        clearbuffer(#katpodr);
        katpodr.ISLEAF := 1     ; // признак листа                            │
        katpodr.NAME   := pname_; // наименование подразделения               │
        katpodr.KOD    := pcode_; // код подразделения                        │
        katpodr.SMEN   := 1     ; // Количество смен                          │
        katpodr.sklad  := sklad_;
        katpodr.cpodr  := cprnt_;
        insert current katpodr;
        clearbuffer(#podrier);
        podrier.CGROUP := katpodr.NREC ; // Некоторое вышестоящее подразделение      │
        podrier.CRECDS := katpodr.NREC ; // ссылка на KatPodr                        │
        podrier.NAME   := katpodr.NAME ; // наименование подразделения               │
        podrier.ISLEAF := 1            ; // признак нижнего уровня                   │
        insert current podrier;
        clearbuffer(#podrier);
        podrier.CGROUP := 0            ; // Некоторое вышестоящее подразделение      │
        podrier.CRECDS := katpodr.NREC ; // ссылка на KatPodr                        │
        podrier.NAME   := katpodr.NAME ; // наименование подразделения               │
        podrier.ISLEAF := 1            ; // признак нижнего уровня                   │
        insert current podrier;
        clearbuffer(#podrier);
        podrier.CGROUP := cprnt_       ; // Некоторое вышестоящее подразделение      │
        podrier.CRECDS := katpodr.NREC ; // ссылка на KatPodr                        │
        podrier.NAME   := katpodr.NAME ; // наименование подразделения               │
        podrier.ISLEAF := 1            ; // признак нижнего уровня                   │
        insert current podrier;
        result := katpodr.nrec;
  }
handleevent
  cminit: {
      if not xlOpenNewExcel(false) {
      Message('Ошибка запуска excel');
      exit;
    }
    if not xlOpenWorkBook(sxlspath) {
      Message('Ошибка открытия xls-файла');
      xlkillexcel;
      exit;
    }
    var cnt: longint;
    cnt := xlrowcount;
    xlReadMatrixFromExcel(1,1,cnt,4);
    cnt := cnt - 1;
    delete all tmol;
    var y: longint; y := 1;
    var s: string;
    for (y:=1;y<=cnt;y:=y+1) {
      clearbuffer (tntmol);
      xlReadFromMatrix(y,1,s); 
      tmol.podrcode := substr(s,1,length(s)-1);
      if length(tmol.podrcode)=1 then tmol.podrcode := '0'+tmol.podrcode;
      tmol.sklcode := substr(s,length(s),1);
      if (getfirst katpodr where ((tmol.podrcode == katpodr.kod)) and (katpodr.sklad=0)) = tsOk then tmol.cpodr := katpodr.nrec;
      xlReadFromMatrix(y,3,s); 
      tmol.molname := tr.lat2ru(trim(s));
      if pos(' ',tmol.molname) > 0 then tmol.molname := substr(tmol.molname,1,pos(' ',tmol.molname)-1);
      xlReadFromMatrix(y,4,s);
      if s <> '' then {
        tmol.moltopodr := true;
        tmol.cskl := tmol.cpodr;
      } else {
        tmol.moltopodr := false;
        if (getfirst katpodr where ((tmol.podrcode+tmol.sklcode == katpodr.kod)) and (katpodr.sklad=1) and (katpodr.cpodr=tmol.cpodr)) <> tsOk {
          tmol.cskl := addpodr(if(GetAnyKau(0,2,tmol.cpodr),GivenAnName(1),'')+'. Кладовая '+ tmol.sklcode,tmol.podrcode+tmol.sklcode,tmol.cpodr,1);
        } else {
          tmol.cskl := katpodr.nrec;
        }
      }
      if (getfirst persons where (('С' == persons.isemployee and tmol.cpodr==persons.galdep)) and (pos(locase(tmol.molname),locase(persons.fio))>0)) = tsOk then
        tmol.cperson := persons.nrec;
      insert katmol set katmol.kod := tmol.podrcode+tmol.sklcode,
                        katmol.name := if(tmol.cperson>0,if(GetAnyKau(0, 3, tmol.cperson), GivenAnName(1), ''),tmol.molname),
                        katmol.cpersons := tmol.cperson,
                        katmol.cskl := tmol.cskl;
      insert current tmol;
    }
    xlkillexcel;
    rereadrecord;
  }
end;
end.