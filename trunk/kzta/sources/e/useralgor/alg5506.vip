#component "M_MNPLAN"
VipInterface alg5506 Implements oAlgoritm_Sys;
Interface alg5506 '' (,hcNoContext,) EscClose, Cyan;

var
  cFormPl_: comp;
  stFormPlSetup: TFormPl;

table struct talg (
  cMC: comp,
  val: double
) with index (
  i01 = cMC (unique)
);

create view
as select *
from formpl, talg, spmnplan, spmnpl, valspmnp
where ((
  cFormPl_ == formpl.nrec
))
;

Function GetNum : word;
{
 GetNum := 5506;
}

function GetName : string;
{
 GetName := 'КЗТА.Расчет количества по позициям ПЗ с начала года (комплект)';
}

#define S st.push('
#define E ');

Function GetMemo ( st:oSteckCommonString ) : Boolean;
{
  GetMemo := True;
  #s     Расчет количества по позициям ПЗ с начала года (комплект) #e
  #s     Работает только с плоским представлением #e
}

Function GetNameInter : String;
{
  GetNameInter := 'alg5506' ;
}

Function GetNameInterPr : String;
{
  GetNameInterPr := 'alg5506_Setup' ;
}

Function InitInter( Var pt:TRecAcc ) : Boolean;
{
  InitInter := true;
}

Function DoneInter( Var pt:TRecAcc ) : Boolean;
{
  DoneInter := True;
}

function GetPlanFldVal(stValSpMnP: TValSpMnP; numfld:word):double; {
  GetPlanFldVal:=0;
  case numfld of
    1 : GetPlanFldVal := stValSpMnP.kol;
    2 : GetPlanFldVal := stValSpMnP.price;
    3 : GetPlanFldVal := stValSpMnP.vprice;
    4 : GetPlanFldVal := stValSpMnP.summa;
    5 : GetPlanFldVal := stValSpMnP.kolfield5;
    6 : GetPlanFldVal := stValSpMnP.kolfact;
    7 : GetPlanFldVal := stValSpMnP.pricefact;
    8 : GetPlanFldVal := stValSpMnP.kolfield6;
    9 : GetPlanFldVal := stValSpMnP.summafact;
    10: GetPlanFldVal := stValSpMnP.kolfield7;
    11: GetPlanFldVal := stValSpMnP.kolfield1;
    12: GetPlanFldVal := stValSpMnP.kolfield2;
    13: GetPlanFldVal := stValSpMnP.kolfield3;
    14: GetPlanFldVal := stValSpMnP.kolfield4;
  end;
}

window winfo;
 browse br1
  table talg;
  fields
    talg.cmc:protect;
    talg.val:protect;
 end;
end;

Function RunInter( wflag:Word; Var pt:TRecAcc ) : Boolean;
{
  cFormPl_ := pt.cFormPl;
  if getfirst formpl <> tsOk {message('Не определены настройки алгоритма');exit;}
  stFormPlSetup := TFormPl(FormPl.buffer);
  startnewvisual(vtRotateVisual, vftimer+vfbreak, 'Расчет количеств с начала года', 0);
  delete all talg;
  insert talg(cMC, Val)
  select curspmnplan.cizd, sums.sumkol
  from mnplan curplan, spmnplan curspmnplan,
       (select sum(GetPlanFldVal(TValSpMnP(vals.buffer),stFormPlSetup.resword[1]))(fieldname=sumkol)
          from mnplan mp, spmnplan spm, spmnpl spmp, valspmnp vals
         where (( stFormPlSetup.rescomp[1] == mp.cwayaccou
              and curplan.wkodgr1 == mp.wkodgr1
              and curplan.canval1 == mp.canval1
              and ( date(1,1,year(curplan.startdate))<=mp.startdate and
                    date(last_day(curplan.startdate),month(curplan.startdate),year(curplan.startdate))>=mp.startdate
                  )
              and 1 /== spm.typeizd
              and curspmnplan.cizd /== spm.cizd
              and mp.nrec /== spm.cmnplan
              and spm.nrec /== spmp.cspmnplan
              and spmp.nrec /== vals.cspmnpl
         ))
       ) sums
  where ((
    pt.cmnplan == curplan.nrec and
    curplan.nrec == curspmnplan.cmnplan and
    (curspmnplan.typeizd = 1)
  )) ignore_errors(tsDuplicateKey);

  var v_: double;
  _loop spmnplan where ((pt.cmnplan == spmnplan.cmnplan and (spmnplan.typeizd=1) )) {
    if getfirst talg where ((spmnplan.cizd == talg.cmc)) = tsOk then v_ := talg.val else v_ := 0;
    _loop spmnpl where ((spmnplan.nrec == spmnpl.cspmnplan)) {
      _loop valspmnp where ((spmnpl.nrec == valspmnp.cspmnpl)) {
        case stFormPlSetup.resword[2] of
          1 : ValSpMnP.kol := v_;
          2 : ValSpMnP.price := v_;
          3 : ValSpMnP.vprice := v_;
          4 : ValSpMnP.summa := v_;
          5 : ValSpMnP.kolfield5 := v_;
          6 : ValSpMnP.kolfact := v_;
          7 : ValSpMnP.pricefact := v_;
          8 : ValSpMnP.kolfield6 := v_;
          9 : ValSpMnP.summafact := v_;
          10: ValSpMnP.kolfield7 := v_;
          11: ValSpMnP.kolfield1 := v_;
          12: ValSpMnP.kolfield2 := v_;
          13: ValSpMnP.kolfield3 := v_;
          14: ValSpMnP.kolfield4 := v_;
        end;
        update current valspmnp;
      }
    }
  }
  StopVisual('',0);
  RunInter := true;
}
End.  // interface