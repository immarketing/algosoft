#component "M_MnPlan"
VipInterface iAlgFldSys_502 Implements oAlgFld_Sys;
interface iAlgFldSys_502;
var
  cFormPl_: comp;
  stFormPlSetup: TFormPl;

function GetPlanFldVal(stValSpMnP: TValSpMnP; numfld:word):double; {
  GetPlanFldVal:=0;
  case numfld of
    1 : GetPlanFldVal := stValSpMnP.kol;
    2 : GetPlanFldVal := stValSpMnP.price;
    3 : GetPlanFldVal := stValSpMnP.vprice;
    4 : GetPlanFldVal := stValSpMnP.summa;
    5 : GetPlanFldVal := stValSpMnP.kolfield5;
    6 : GetPlanFldVal := stValSpMnP.kolfact;
    7 : GetPlanFldVal := stValSpMnP.pricefact;
    8 : GetPlanFldVal := stValSpMnP.kolfield6;
    9 : GetPlanFldVal := stValSpMnP.summafact;
    10: GetPlanFldVal := stValSpMnP.kolfield7;
    11: GetPlanFldVal := stValSpMnP.kolfield1;
    12: GetPlanFldVal := stValSpMnP.kolfield2;
    13: GetPlanFldVal := stValSpMnP.kolfield3;
    14: GetPlanFldVal := stValSpMnP.kolfield4;
  end;
}

create view
as select *
from formpl
where ((
  cFormPl_ == formpl.nrec
))
;

create view v
var
  cplan: comp;
  cmc_: comp;
as select *
from mnplan curplan,
     (select sum(GetPlanFldVal(TValSpMnP(vals.buffer),stFormPlSetup.resword[1]))(fieldname=sumkol)
        from mnplan mp, spmnplan spm, spmnpl spmp, valspmnp vals
       where (( stFormPlSetup.rescomp[1] == mp.cwayaccou
            and curplan.wkodgr1 == mp.wkodgr1
            and curplan.canval1 == mp.canval1
            and ( date(1,1,year(curplan.startdate))<=mp.startdate and
                  date(last_day(curplan.startdate),month(curplan.startdate),year(curplan.startdate))>=mp.startdate
                )
            and 1 /== spm.typeizd
            and cmc_ /== spm.cizd
            and mp.nrec /== spm.cmnplan
            and spm.nrec /== spmp.cspmnplan
            and spmp.nrec /== vals.cspmnpl
       ))
     ) sums
where ((
  cplan == curplan.nrec
));

Function GetNameInter : string; {
  GetNameInter := 'iAlgFldSys_502' ;
}

Function GetNameInterPr : string; {
  GetNameInterPr := 'iAlgFldSetup_502' ;
}

Function GetNum : word;{
  GetNum := 7502 ;
}

Function GetName : string; {
  GetName := 'КЗТА.Расчет количества по позициям плана с начала года (комплект)' ;
}

Procedure DeleteCache; {
}

Function CheckEnableUseAlgFld ( Var FlagParam : LongInt; NameInterFace : string ) : boolean; {
  CheckEnableUseAlgFld := True;
}

Function GetNameColumn ( Var FlagParam : LongInt ) : string; {
  GetNameColumn :='Комплект';
}

Function GetNameFld ( stSpMnPlan : TSpMnPlan; stSpMnPl : TSpMnPl ) : string; {
  GetNameFld := 'test';
  v.cPlan := stSpMnPlan.cmnplan;
  v.cmc_ := stSpMnPlan.cizd;
  if v.getfirst curplan = tsOk {
    GetNameFld := v.sums.sumkol;
  }
}

Function CheckSpMnPlan_SpMnPl (  FlagMode : word; stSpMnPlan : TSpMnPlan; stSpMnPl : TSpMnPl ) : boolean; {
  CheckSpMnPlan_SpMnPl := True;
}

Function GetPropFld ( stSpMnPlan : TSpMnPlan; stSpMnPl : TSpMnPl;  FlagProp : LongInt ) : comp; {
  GetPropFld := comp(0);
}

Function GetPickInterface ( Var  FlagParam : LongInt; stSpMnPlan : TSpMnPlan; stSpMnPl : TSpMnPl ) : comp; {
  GetPickInterface := comp(0);
}

#define S st.push('
#define E ');

Function GetMemo ( st:oSteckCommonString ) : Boolean;{
  #s     Расчет количества по позициям плана с начала года (комплект) #e
  #s     Работает только с плоским представлением #e
  GetMemo := True;
}

    // Получить установить параметр
Function SetGetParam ( Var  FlagParam : LongInt;
                       Var  Direction : word;
                       Var  cValue    : Comp  ;
                       Var  dValue    : Double;
                       Var  lValue    : LongInt;
                       Var  wValue    : Word  ;
                       Var  dtValue   : Date  ;
                       Var  dttValue  : _DateTime;
                       Var  sValue    : s250  ) : Boolean; {
  SetGetParam := True;
  if ( ( Direction and 1 ) > 0)
    case FlagParam of
      1: {
        if ( GetFirst Formpl where (( cValue == FormPl.NRec )) = tsOk ) {
          cFormPl_ := cValue;
          stFormPlSetup := TFormPl(FormPl.buffer);
        } else SetGetParam := False;
      }
    end;
  }

Function InitInter ( ccFormPl : comp; FlagParam : LongInt ) : Boolean; {
  InitInter := True;
  if ( GetFirst FormPl where (( ccFormPl == FormPl.NRec )) = tsOk ) {
    cFormPl_ := ccFormPl;
    stFormPlSetup := TFormPl(FormPl.buffer);
  }
}
Function DoneInter : Boolean; {
  DoneInter := True;
}
End.

VipInterface iAlgFldSetup_502 Implements oAlgFldSetup;
Interface iAlgFldSetup_502 'Настройка' EscClose,doAccept;
  Show at (,,54,5);

Create View
Var
 cFormPl : Comp;
 fldnum: word;
As Select *
From FormPl, wayaccou
Where (( cFormPl == FormPl.NRec and
         FormPl.rescomp[1] == wayaccou.nrec
      ));

Parameters cFormPl;

screen sctune;
  fields
    wayaccou.name ('Шаблон производственного заказа',,): protect, pickbutton;
    formpl.resword[1] ('Номер поля представления, по которому происходит суммирование',,): [list 1 '1','2','3','4','5','6','7','8','9','10','11','12','13','14'];
<<

 `Шаблон плана` .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `Номер поля представления для суммирования` .@@@@@@
>>
end;

Function asInitInter( p_cFormPl:Comp ) : Boolean; {
  asInitInter := True;
  cFormPl := p_cFormPl;
}
Function asDoneInter : Boolean; {
  asDoneInter := True;
}
Procedure asOnCmSetDefault; {
}
Procedure asOnSetWayAccou( p_cWayAccou:Comp ); {
}
handleevent
  cmPick: {
    case curfield of
      #wayaccou.name: runinterface(M_MNPLAN::NastrPl,4,FormPl.rescomp[1],1);
    end;
  }
  cmDone: {
    update current formpl;
  }
end;
End.  //'interface
