#include iForm791_extClass.vip
#include iForm791_DSKWork.vip

  // 0FFFFFFFFFFFFFFFFh

  function trimFirst0 (st : String):string;
  begin
    result := st;
    exit;

    if st = '' then {
      result := '';
      exit
    };
    if substr (st,1,1) = '0' then
      result := trimFirst0 (substr (st,2,255))
    else
      result := st;
  end;

  function repGetPrintRow: word;
  begin
    xlRunMacro('getRowToFill(1,1)');
    xlGetCellValue(1, 1, result);
  end;

  procedure ExcelPrint2(CopyBud:comp; FP:word; Nstr:word; Nstol:word; var vl : double);
  begin
    xlSetCellNumberValue(0 , Nstr, Nstol , Nstr, Nstol );
    vl      := 0;

    Set cCopyBud:=CopyBud;
    Set cFP := FP;

    _LOOP  fpV {
      if (getFirst fpP <> tsOK) {exit};
      if ( fpPeriod.dBeg = fpP.dBeg ) and (fpPeriod.dEnd = fpP.dEnd)
      //if ( fpV.cPeriod = cPeriod )
      //if((month(fpP.dbeg)=month(fpP.dEnd)) and (month(fpP.dbeg)=month(fpperiod.dbeg)) and (year(fpP.dbeg)=year(fpperiod.dbeg)))// and (fpvalues.chashan = 0))) //chek year
      {
        if(Check=0)
        {
          xlSetCellNumberValue(fpv.summa     , Nstr, Nstol , Nstr, Nstol );
          vl := fpv.summa;
        }
        else
        {
          xlSetCellNumberValue(fpv.summa/1000, Nstr, Nstol , Nstr, Nstol );
          vl := fpv.summa/1000;
        }
      }
      else{}
    }
  end;

#include iForm791_kauGroup.vip

  procedure ExcelPrint3( wTbl : word;
                         CopyBud:comp;
                         FP:word;
                         Nstr:word;
                         Nstol:word;
                         var vl : double
                         );
  begin
    if (wTbl = 22217){ // статья бюджета
      ExcelPrint2 (CopyBud,FP,Nstr,Nstol,vl);
      exit;
    }
    // аналитика
    xlSetCellNumberValue(0 , Nstr, Nstol , Nstr, Nstol );
    vl      := 0;

    Set cCopyBud:=CopyBud;
    Set cFP := FP;

    if (getFirst superfpSpAxtf = tsOK) {
      if (getFirst HashAn = tsOK) {
        if (getFirst fpV2 = tsOK) {
          if(Check=0) {
            xlSetCellNumberValue(fpv2.summa     , Nstr, Nstol , Nstr, Nstol );
            vl := fpv2.summa;
          } else {
            xlSetCellNumberValue(fpv2.summa/1000, Nstr, Nstol , Nstr, Nstol );
            vl := fpv2.summa/1000;
          }
        }
      }
    }
  end;


  /*
  create view forGrouping
  as
  select *
    from  f791_stack f791_stack_grp(f714_stk_nrec_desc),
          f791_printed f791_printed_ord (f714_ptd_nrec),
          //(select min (printedAtRow), max(printedAtRow) from f791_printed pt where ((f791_printed_ord.cRec == pt.cnode ))   ) subrowmm,
          f791_printed subprntd (f791_ptd_node_prrow),
          f791_printed f791_printed_ord2 (f791_ptd_rowsToGroup),
          f791_printed subp2 (f791_ptd_node_prrow),
          f791_printed subp3
   where ((
   f791_printed_ord.cRec == subprntd.cNode and
   0 << f791_printed_ord2.groupFrom (noindex) and
   f791_printed_ord.cRec == subp2.cNode and
   (f791_printed_ord.groupTo < subp2.groupTo) and
   f791_printed_ord2.cRec == subp3.cNode
   ))
        ;
  */

#include iForm791_razn.vip

  create view forGrouping
  as
  select *
    from  f791_stack f791_stack_grp(f714_stk_nrec_desc),
          f791_printed f791_printed_ord (f714_ptd_nrec),
          //(select min (printedAtRow), max(printedAtRow) from f791_printed pt where ((f791_printed_ord.cRec == pt.cnode ))   ) subrowmm,
          f791_printed subprntd (f791_ptd_node_prrow),
          f791_printed f791_printed_ord2 (f791_ptd_rowsToGroup),
          f791_printed subp2 (f791_ptd_node_prrow),
          f791_printed subp3 ,
          f791_printed prntd_mkgroup
   where ((
   f791_printed_ord.cRec == subprntd.cNode and
   0 << f791_printed_ord2.groupFrom (noindex) and
   f791_printed_ord.cRec == subp2.cNode and
   (f791_printed_ord.groupTo < subp2.groupTo) and
   f791_printed_ord2.cRec == subp3.cNode and

   0                      == prntd_mkgroup.coTable and
   1                      == prntd_mkgroup.isKAUGroup
   ))
        ;


  function isCurGroupHasLeafsOnly: boolean;
  begin
    set result := not (getFirst subpleafs = tsOK);
  end;

  procedure doGroupData2 (datSheet, repSheet, repSheet79 : String);
  begin
    // Коммерческие расходы
    xlSetActiveSheetByName(repSheet);
    //без учета группировки по уровням
    /*
    forGrouping._loop f791_printed_ord {
      if (forGrouping.getfirst subprntd = tsOK){
        //var b : boolean
        //b := false;
        //if (forGrouping.f791_printed_ord.name = 'Коммерческие расходы') {
        //  b := true;
        //}
        var fr,lr : word;
        fr := forGrouping.subprntd.printedAtRow;
        lr := fr;
        if (forGrouping.getlast subprntd = tsOK){
          lr := forGrouping.subprntd.printedAtRow;
        }
        //if (b) {
          //Message ('b == ' + fr +''#13+'lr=='+ lr);
        //}
        forGrouping.update current f791_printed_ord set f791_printed_ord.groupFrom := fr,
                                                        f791_printed_ord.groupTo := lr,
                                                        f791_printed_ord.rowsToGroup := lr - fr + 1
                                                        ;



      }
    }

    var wasEdit : boolean;
    do {
      wasEdit := false;
      forGrouping._loop f791_printed_ord {
        if forGrouping.getLast subp2 = tsOK {
          forGrouping.update current f791_printed_ord set f791_printed_ord.groupTo := subp2.groupTo;
          wasEdit := true;
        }
      }
    } while wasEdit;

    update f791_printed set f791_printed.rowsToGroup := f791_printed.groupTo - f791_printed.groupFrom + 1;
    */
    forGrouping._loop f791_printed_ord {
      if (forGrouping.getfirst subprntd = tsOK){
        //var b : boolean
        //b := false;
        //if (forGrouping.f791_printed_ord.name = 'Коммерческие расходы') {
        //  b := true;
        //}
        var fr,lr : word;
        var fr79,lr79 : word;

        fr := forGrouping.subprntd.printedAtRow;
        lr := fr;

        fr79 := forGrouping.subprntd.printedAtRow79;
        lr79 := fr79;

        if (forGrouping.getlast subprntd = tsOK){
          lr := forGrouping.subprntd.printedAtRow;
          lr79 := forGrouping.subprntd.printedAtRow79;
        }
        //if (b) {
          //Message ('b == ' + fr +''#13+'lr=='+ lr);
        //}
        forGrouping.update current f791_printed_ord set f791_printed_ord.groupFrom := fr,
                                                        f791_printed_ord.groupTo := lr,
                                                        f791_printed_ord.rowsToGroup := lr - fr + 1,
                                                        f791_printed_ord.groupFrom79 := fr79,
                                                        f791_printed_ord.groupTo79 := lr79,
                                                        f791_printed_ord.rowsToGroup79 := lr79 - fr79 + 1
                                                        ;



      }
    }

    var wasEdit : boolean;
    do {
      wasEdit := false;
      forGrouping._loop f791_printed_ord {
        if forGrouping.getLast subp2 = tsOK {
          forGrouping.update current f791_printed_ord
                             set f791_printed_ord.groupTo := subp2.groupTo,
                                 f791_printed_ord.groupTo79 := subp2.groupTo79
                             ;
          wasEdit := true;
        }
      }
    } while wasEdit;

    update f791_printed set f791_printed.rowsToGroup := f791_printed.groupTo - f791_printed.groupFrom + 1,
                            f791_printed.rowsToGroup79 := f791_printed.groupTo79 - f791_printed.groupFrom79 + 1
                            ;
    update f791_printed where (( 1 == f791_printed.isKAUGroup))
           set f791_printed.isMakeGroup := 1
           ;
    /*
    forGrouping._loop prntd_mkgroup {
      update f791_printed where (( forGrouping.prntd_mkgroup.cnode == f791_printed.crec))
             set f791_printed.isMakeGroup := 1;
    }
    */

    var extraSm : word;
    extraSm := 0;

    var extraFrm : String;
    extraFrm := '';

    _loop f791_printed {
      /* без учета группировки по уровням
      xlRunMacro('ActiveSheetGroupData('+String ( forGrouping.f791_printed_ord2.groupFrom)+','+ String ( forGrouping.f791_printed_ord2.groupTo) +')');
      */
      if (f791_printed.isMakeGroup = 1) and (f791_printed.groupFrom > 0) and (f791_printed.groupTo > 0) then {
        xlSetActiveSheetByName(repSheet);
        xlRunMacro('ActiveSheetGroupData('+String ( f791_printed.groupFrom)+','+ String ( f791_printed.groupTo) +')');

        xlSetActiveSheetByName(repSheet79);
        xlRunMacro('ActiveSheetGroupData('+String ( f791_printed.groupFrom79)+','+ String ( f791_printed.groupTo79) +')');

        xlSetActiveSheetByName(repSheet);
      };

      /*
      if (f791_printed.isKAUGroup = 1)then {
        xlSetCellFormula    ( '=0',
                              f791_printed.printedAtRow,
                              3 ,
                              f791_printed.printedAtRow,
                              3 );
      }
      */

      var vSums : array [1..3] of double;

      vSums[1] := 0;
      vSums[2] := 0;
      vSums[3] := 0;

      var fSum : string;
      fSum := '';


      _loop subp3{
        vSums[1] := vSums[1] + subp3.sum[1];
        vSums[2] := vSums[2] + subp3.sum[2];
        vSums[3] := vSums[3] + subp3.sum[3];

        if (subp3.coTable <> coTableToSum) and ( f791_printed.isKAUGroup <> 1 ) then {
          continue;
        }
        var tsts : string;
        var raz : integer;

        raz  := subp3.printedAtRow - f791_printed.printedAtRow ;
        tsts := ''+ raz;

        fSum := fSum + ';R[' + tsts + ']C';

      }

      if (f791_printed.isKAUGroup = 1) {
        if isCurGroupHasLeafsOnly {
          var subFirstRow : word;
          subFirstRow := 0;

          var subLastRow : word;
          subLastRow := 0;

          if getFirst subp3 = tsOK then { subFirstRow := subp3.printedAtRow;};
          if getLast subp3 = tsOK then { subLastRow := subp3.printedAtRow;};

          // R[1]C:R[86]C

          if (subFirstRow <> 0 and subLastRow <> 0) then {
            var raz1 : integer;
            raz1  := subFirstRow - f791_printed.printedAtRow ;
            var raz2 : integer;
            raz2  := subLastRow - f791_printed.printedAtRow ;

            fSum := 'R['+(raz1)+']C:R['+(raz2)+']C';
          }
        }
      }

      if (fSum > '') {
        //xlSetCellFormula('=Сумм('+fSum+')',forGrouping.f791_printed_ord2.printedAtRow,3,forGrouping.f791_printed_ord2.printedAtRow,7);
        xlSetCellFormula( '=Сумм('+fSum+')',
                          f791_printed.printedAtRow,
                          5,
                          f791_printed.printedAtRow,
                          6
                          );
      }

      if (f791_printed.extPar1 = 5){
        // тут должна быть сумма
        extraSm := f791_printed.printedAtRow;
      }
      if (f791_printed.extPar1 = 6){
        // тут надо сложить
        extraFrm := extraFrm + ';R[' + (f791_printed.printedAtRow - extraSm) + ']C';
      }
      if ( f791_printed.extPar1 = 7){
        // тут надо отнять
        extraFrm := extraFrm + ';-R[' + (f791_printed.printedAtRow - extraSm) + ']C';
      }

      if (f791_printed.isKAUGroup = 1) {
        xlSetCellNumberValue( vSums[1] ,
                              f791_printed.printedAtRow,
                              3 ,
                              f791_printed.printedAtRow,
                              3 );
        xlSetCellNumberValue( vSums[2] ,
                              f791_printed.printedAtRow,
                              4 ,
                              f791_printed.printedAtRow,
                              4 );
                              /*
        xlSetCellNumberValue( vSums[3] ,
                              f791_printed.printedAtRow,
                              5 ,
                              f791_printed.printedAtRow,
                              5 );
        xlSetCellFormula('=Сумм('+fSum+')',f791_printed.printedAtRow,6,f791_printed.printedAtRow,6); */
        /*
        xlSetCellNumberValue( vSums[3] ,
                              f791_printed.printedAtRow,
                              6 ,
                              f791_printed.printedAtRow,
                              6 ); */
      }

      var rznFrmml : String;
      var psat     : word;

      if (hasRaznFrml(f791_printed.cRec , rznFrmml, psat)){
        xlSetCellFormula(rznFrmml,psat,5,psat,5);
        xlSetCellFormula(rznFrmml,psat,6,psat,6);
      }
    }

    /*
    _loop f791_printed {
    }
    */

    if (extraSm <> 0){
      xlSetCellFormula('=Сумм('+extraFrm+')',extraSm,5,extraSm,5);
      //exit;
    }

    xlSetActiveSheetByName(datSheet);
  end;

  procedure printSigners;
  begin
    if not podpisanty.isSelected then exit;

    _loop podpisanty {
      var ar : array [1..2] of string;
      ar[1] := podpisanty.dolj;
      ar[2] := podpisanty.fio;

      xlSetCellStringValue(ar[1] , 14, 2, 14, 2); // ??N? - ????
      xlSetCellStringValue(ar[2] , 14, 7, 14, 7); // ??N? - ????
      xlRunMacro('CopyRow(ROW3)');

    }
  end;

  procedure printSigners2;
  begin
    if not podpisanty2.isSelected then exit;

    _loop podpisanty2 {
      var ar : array [1..2] of string;
      ar[1] := podpisanty2.dolj;
      ar[2] := podpisanty2.fio;

      xlSetCellStringValue(ar[1] , 44, 1, 44, 1); // ??N? - ????
      xlSetCellStringValue(ar[2] , 44, 5, 44, 5); // ??N? - ????
      xlRunMacro('CopyRow(ROW14)');

    }
  end;

  procedure printExecutor;
  begin
    var sFIO :String ;
    sFIO := Trim (sGetTune ('USER.FIO'));
    var ps1 : byte;
    ps1 := pos (' ',sFIO);
    if (ps1 <> 0 ){
      var sfam : String;
      //sFAM := substr (sFIO,1,ps1-1);
      sFAM := substr (sFIO,1,ps1-1) + ' ' + Substr (trim (substr (sFIO,ps1+1,255)),1,1) + '.';

      sFIO := trim (substr (sFIO,ps1+1,255));
      ps1 := pos (' ',sFIO);

      if (ps1 <> 0) {
        sFAM := sFAM + ' ' + Substr (trim (substr (sFIO,ps1+1,255)),1,1) + '.';
      } else {
      }

      sFIO := sFAM;
    }


    //xlSetCellStringValue('/ '+ sFIO + ' /', 15, 9, 15, 9);

    var tel : string;

    if (getFirst persons where (( sGetTune ('USER.FIO') == persons.FIO (noindex) )) = tsOK) {
      if (getFirst COMMUNICATIONS where ((  persons.nrec == COMMUNICATIONS.person and
                                            comp('000000000000022Bh') == COMMUNICATIONS.comtype
                                            )) = tsOK){
        tel := COMMUNICATIONS.ADDR;
      }
    }
    xlSetCellStringValue(sFIO + ',' + tel , 26, 2, 29, 2);
    xlRunMacro('CopyRow(ROW7)');

  end;


  procedure printPodval(sn : String);
  begin
    xlSetActiveSheetByName(sn);

    if getfirst f791_podval = tsOK {
      xlRunMacro('CopyRow(ROW4)');
    }
    _loop f791_podval(f791_pdv_code) {
      //xlSetCellStringValue(f791_podval.code + '. ' + f791_podval.name, 20, 2, 20, 2); //
      xlSetCellStringValue(f791_podval.name, 20, 2, 20, 2); //
      xlSetCellNumberValue(f791_podval.summa , 20, 3, 20, 3); //
      xlRunMacro('CopyRow(ROW5)');
    }

    if getLast f791_podval = tsOK {
      xlRunMacro('CopyRow(ROW6)');
    }
  end;

  procedure printReport79 (dataSheetName, report791Sheet, report79Sheet : String);
  begin
    xlSetActiveSheetByName(dataSheetName);
    xlRunMacro('setReportSheetName('+report79Sheet+')');
    xlRunMacro('setRowToFill('+String (13)+')');

    var extraSm : word;
    extraSm := 0;

    var extraFrm : String;
    extraFrm := '';


    _loop f791_printed {
      NextVisual;
      xlSetActiveSheetByName(dataSheetName);
      if (f791_printed.extPar = 1){
        xlRunMacro('CopyRow(ROW10)'); // Разделитель
      } else if (f791_printed.extPar = 3){
        // итоги
        xlRunMacro('CopyRow(ROW13)');
      } else if ( f791_printed.extPar = 4/* f791_printed.isLeaf = 0 */) {
        // агрегат
        xlRunMacro('CopyRow(ROW12)');
      } else {
        // простая строка
        xlRunMacro('CopyRow(ROW11)');
      }
      update current f791_printed set f791_printed.printedatrow79 := repGetPrintRow - 1;

      xlSetActiveSheetByName(report79Sheet);

      xlSetCellFormula('=' + report791Sheet + '!R[-2]C', f791_printed.printedatrow79,1,f791_printed.printedatrow79,2);
      if ( f791_printed.extPar <> 1 ){
        xlSetCellFormula('=' + report791Sheet + '!R[-2]C[2]', f791_printed.printedatrow79,3,f791_printed.printedatrow79,4);
        xlSetCellFormula('=СУММ(RC[-2]:RC[-1])', f791_printed.printedatrow79,5,f791_printed.printedatrow79,5);
      }

      if (f791_printed.extPar1 = 5){
        // тут должна быть сумма
        extraSm := f791_printed.printedatrow79;
      }
      if (f791_printed.extPar1 = 6){
        // тут надо сложить
        extraFrm := extraFrm + ';R[' + (f791_printed.printedatrow79 - extraSm) + ']C';
      }
      if (f791_printed.extPar1 = 7){
        // тут надо отнять
        extraFrm := extraFrm + ';-R[' + (f791_printed.printedatrow79 - extraSm) + ']C';
      }
    }
    xlSetActiveSheetByName(dataSheetName);
    printSigners2;
    xlSetActiveSheetByName(report79Sheet);

    if (extraSm <> 0){
      xlSetCellFormula('=Сумм('+ extraFrm +')',extraSm,5,extraSm,5);
    }

    xlRunMacro('AfterPrint791');
  end;

  create view lvlnmb
  var
    cPos : comp
  as
  select *
    from fpSpAxtf spAx
   where ((
   cPos == spAx.nrec
   ))
   ;

  function getCurrentLevelNumber : word;
  begin

    result := 0;

    set lvlnmb.cPos := fpSpAxtf.nRec;
    do {
      if (lvlnmb.getfirst spAx = tsOK) {
        if (lvlnmb.spAx.cNode = 0) {
          exit;
        } else {
          inc (result);
          set lvlnmb.cPos := lvlnmb.spAx.cNode;
        }
      } else {
        exit;
      }
    } while true;
  end;

  create view forGetCode
  var
  cKAU : comp;
  as select * from spkau where ((
  cKAU == spkau.nRec
  ))
  ;

  procedure GetCurrentCodeName (var code : String ; var name : String);
  begin
    // Replace (,'_','-')
    // fpStBud
    // superKAUfpStBud

    var cd, nm : String;

    if(fpSpAxtf.coTable = word(22217) ) {
      cd := fpStBud.abbr;
      nm := fpSpAxtf.name;
      //
      if ( SubStr (cd, Length(cd),1 )= '_'  ) {
        cd := cd + '00'
      }

      code := Replace (cd, '_', '-');
      name := nm;
    } else {
      if (getFirst superKauSpAxtf = tsOK ) {};
      if (getFirst superKAUfpStBud = tsOK ) {};
      cd := superKAUfpStBud.abbr;
      nm := fpSpAxtf.name;

      set forGetCode.cKAU := fpSpAxtf.cMEAN;
      if (forGetCode.getfirst spkau = tsOK) {
        code := Replace (cd + forGetCode.spkau.levelcode,'_','-');
      } else {
        code := Replace (cd + fpSpAxtf.levelcode,'_','-');
      }
      //
      name := fpSpAxtf.name;
    }
  end;

#include iForm791_procint.vip
#include iForm791_procintptd.vip

  procedure doPrintReport791; forward;

  procedure doPrintReport;
  begin
    doPrintReport791;
  end;

  procedure doHandleTest;
  begin
    StoreDSK;
    doPrintReport;
  end;

  procedure doPrintReport791;
  begin
    StartNewVisual (vtRotateVisual, vfScreenBottom + vfThread + vfTimer, 'Формирование отчета' , 100);
    SetVisualHeader ('Формирование отчета');

    var tms : array [1..7] of time;

    delete all f791_printed;
    delete all f791_stack;
    delete all f791_podval;
    delete all f791_2extcl;

    //var sPath : String;
    var sMacroses : String;

    //sPath := translatepath('%curpath%\tmpl_7_9_1.xls');
    //sPath := translatepath('%startpath%Xls\F_FPBUDGET\SZMN_Budjet\tmpl_7_4_1.xls');

    //sMacroses := translatepath('%curpath%\agmacroses.vba');

    tms[1] := Cur_Time;

    if IsCreateAndKillExcel then {
      xlCreateExcelWithTemplate(sPath,true);
    }

    if (xlIsExcelValid) {
       //xlOpenWorkBook(trim(sPath));
       //xlSetActiveWorkBookByName(trim(sPath));
       //xlSaveAsWorkBookByName(trim(sPath), NameExcel+'.xls');
    }

    var dataSheetName : string;
    dataSheetName  := 'datas791';

    var reportSheetName : string;
    reportSheetName  := 'rep791';

    var reportSheetName79 : string;
    reportSheetName79:= 'rep79';

    xlRunMacro('REP_BegoreReportPrint791');
    xlRunMacro('setDataSheetName('+dataSheetName+')');
    xlRunMacro('setReportSheetName('+reportSheetName+')');
    xlRunMacro('setRowToFill('+String (11)+')');

    xlSetActiveSheetByName(dataSheetName);

    //xlSetCellStringValue(month(fpperiod.dbeg), 1, 1, 1, 1); //
    //xlSetCellStringValue(year(fpperiod.dbeg), 1, 2, 1, 2); //

    xlSetCellStringValue(sPeriod, 4, 2, 4, 2); //
    xlSetCellStringValue(LoCase ( DateToStr (fpPeriod.DEND,'Month')), 4, 4, 4, 4); //
    xlSetCellStringValue(LoCase ( DateToStr (fpPeriod.DEND,'Mon') ), 4, 5, 4, 5); //

    if(Check=0) {
      xlSetCellStringValue('руб.', 4, 3, 4, 3); //
    } else {
      xlSetCellStringValue('тыс.руб.', 4, 3, 4, 3); //
    }

    //xlSetNumberFormat('@'        ,2 , 41, 65000, 46);


    var tt:word;
    tt:=0;

    var lastnRec, lastCNode : comp;
    var lastPrintedAt : word;

    //var oldCNode : comp;

    lastPrintedAt := repGetPrintRow - 1;
    lastnRec      := 0FFFFFFFFFFFFFFFFh;

    lastCNode     := 0FFFFFFFFFFFFFFFFh;

    _LOOP fpSpAxtf {
      NextVisual;
      inc(tt);

      if ( fpSpAxtf.cNode <> lastCNode ){
        // перескочили на другой уровень
        if (getfirst f791_stack where ((fpSpAxtf.cNode == f791_stack.cNode)) <> tsOK ){
          // уровень - новый. добавляем в стек
          insert f791_stack set f791_stack.cRec := lastnRec ,
                                f791_stack.cNode := lastCNode,
                                f791_stack.printedAt := lastPrintedAt;

        } else {
          // уровень - прежний. группируем данные до предыдущей записи того же уровня
          //doGroupData(dataSheetName, reportSheetName, lastnRec, lastCNode, fpSpAxtf.nRec, fpSpAxtf.cNode, lastPrintedAt);
        }
      } else {
        // на том же уровне - ничего не делаем
      }

      set cStBud  := 0;
      if(fpSpAxtf.coTable = word(22217) )       // (isValid(tnfpstbud))
      {
        set cStBud  := fpSpAxtf.cMean;//
        set cHashAn := comp(0);
        //xlSetCellStringValue('1', 1+tt, 40, 1+tt, 40);
      } else{
        if (getFirst superKauSpAxtf = tsOK) {
          /*
          if (getFirst superfpSpAxtf2 = tsOK) {
            set cStBud  := superfpSpAxtf2.cMEAN;
          }
          */
          set cStBud  := superKauSpAxtf.cMEAN;
        }
        set cHashAn := Hashan.nrec;
        //xlSetCellStringValue('2', 1+tt, 40, 1+tt, 40);
      }

      var code2010, name2010 : String;

      GetCurrentCodeName (code2010, name2010);

      var
        arValues : array [1..3] of double;

      var delit : double;

      if(Check=0)      {
        delit := 1;
      }      else      {
        delit := 1000;
      }

      var extCl : byte;
      extCl := 0;

      var extCl1 : byte;
      extCl1 := 0;

      var extraChar : string;

      extraChar := '''';

      var RaznStatus : byte;

      if ( fpSpAxtf.coTable = coFPSTBUD ) {
        extCl  := GetStBudExtraParameters( coFPSTBUD , fpSpAxtf.CMEAN, extClName );
        extCl1 := GetStBudExtraParameters( coFPSTBUD , fpSpAxtf.CMEAN, extClName1 );

        RaznStatus := GetStBudExtraParameters( coFPSTBUD , fpSpAxtf.CMEAN, extClName2 );
      } else {
        if (getfirst superfpSpAxtf = tsOK) {}
        extCl  := GetStBudExtraParameters( coFPSTBUD , superfpSpAxtf.CMEAN, extClName );
        extCl1 := GetStBudExtraParameters( coFPSTBUD , superfpSpAxtf.CMEAN, extClName1 );

        RaznStatus := GetStBudExtraParameters( coSPKAU , fpSpAxtf.CMEAN, extClName2 );
      }

      if ( extCl = 1 /* fpSpAxtf.cNode = 0h */)then {
        // самый верхний уровень группировки

        //xlSetCellStringValue(extraChar + trimFirst0(fpstbud.levelcode), 8, 1, 8, 1);
        //xlSetCellStringValue(extraChar + trimFirst0(fpstbud.abbr), 8, 1, 8, 1);
        xlSetCellStringValue(extraChar + trimFirst0(code2010), 8, 1, 8, 1);


        //xlSetCellStringValue(fpSpAxtf.levelcode, 8, 1, 8, 1); //
        xlSetCellStringValue(fpSpAxtf.name, 8, 2, 8, 2); //
        xlRunMacro('CopyRow(ROW0)');
      } else if (  (extCl = 3)  or (extCl = 4)  /* агрегат /* fpSpAxtf.isLeaf = 0 */ )then {
        var r2print : word;
        if (extCl = 4) {
          r2print := 10;
        } else {
          r2print := 48;
        }

        // Группа не верхнего уровня
        //xlSetCellStringValue(extraChar + trimFirst0(fpstbud.levelcode), r2print, 1, r2print, 1);
        //xlSetCellStringValue(extraChar + trimFirst0(fpstbud.abbr), r2print, 1, r2print, 1);
        xlSetCellStringValue(extraChar + trimFirst0(code2010), r2print, 1, r2print, 1);


        //xlSetCellStringValue(fpSpAxtf.levelcode, 10, 1, 10, 1); //
        xlSetCellStringValue(PadCh ('',' ', 2 * getCurrentLevelNumber) + fpSpAxtf.name, r2print, 2, r2print, 2); //
        ExcelPrint3(fpSpAxtf.coTable,cPlan1,150,r2print,3, arValues[1]); // План 1
        ExcelPrint3(fpSpAxtf.coTable,cPlan3,150,r2print,4, arValues[3]); // План 3
        ExcelPrint3(fpSpAxtf.coTable,cPlan2,150,r2print,4, arValues[2]); // План 2

        if ( abs (arValues[1]) < 0.0000001 and abs (arValues[2]) < 0.0000001 and abs (arValues[3]) < 0.0000001) then {
          if (not isShowZeros and fpSpAxtf.isLeaf = 1) {
            continue;
          }
        }

        if (extCl = 2) {
          // - в подвал
          insert f791_podval set  f791_podval.name := PadCh ('',' ', 2 * getCurrentLevelNumber) + fpSpAxtf.name,
                                  f791_podval.code := extraChar + trimFirst0(fpSpAxtf.levelcode),
                                  f791_podval.summa:= arValues[2]
                                  ;
        }

        arValues[3] := arValues[3] - if ( (arValues[1]- arValues[2]) < 0 ,arValues[1],arValues[2]) ;
        //xlSetCellNumberValue(if (arValues[3]<0,0,arValues[3]) , r2print, 6 , r2print, 6 );

        if (extCl <> 2) {
          if (extCl = 4) {
            xlRunMacro('CopyRow(ROW2)');
          } else {
            xlRunMacro('CopyRow(ROW791ITOGO)');
          }
        };
      } else {
        // Лист - простая строка
        //xlSetCellStringValue(extraChar + trimFirst0(fpstbud.levelcode), 9, 1, 9, 1);
        //xlSetCellStringValue(extraChar + trimFirst0(fpstbud.abbr), 9, 1, 9, 1);
        xlSetCellStringValue(extraChar + trimFirst0(code2010), 9, 1, 9, 1);


        //xlSetCellStringValue(fpSpAxtf.levelcode, 9, 1, 9, 1); //
        xlSetCellStringValue(PadCh ('',' ', 2 * getCurrentLevelNumber) + fpSpAxtf.name, 9, 2, 9, 2); //
        ExcelPrint3(fpSpAxtf.coTable,cPlan1,150,9,3, arValues[1]); // План 1
        ExcelPrint3(fpSpAxtf.coTable,cPlan3,150,9,4, arValues[3]); // План 3
        ExcelPrint3(fpSpAxtf.coTable,cPlan2,150,9,4, arValues[2]); // План 2

        if (extCl = 2) {
          // - в подвал
          insert f791_podval set  f791_podval.name := PadCh ('',' ', 2 * getCurrentLevelNumber) + fpSpAxtf.name,
                                  f791_podval.code := extraChar + trimFirst0(fpSpAxtf.levelcode),
                                  //f791_podval.code := fpstbud.levelcode,
                                  f791_podval.summa:= arValues[2];
        }

        arValues[3] := arValues[3] - if ( (arValues[1]- arValues[2]) < 0 ,arValues[1],arValues[2]) ;

        if ( abs (arValues[1]) < 0.0000001 and abs (arValues[2]) < 0.0000001 and abs (arValues[3]) < 0.0000001) then {
          if (not isShowZeros and fpSpAxtf.isLeaf = 1) {
            continue;
          }
        }

        //xlSetCellNumberValue( if (arValues[3]<0,0,arValues[3]) , 9, 6 , 9, 6 );

        if (extCl <> 2) {
          xlRunMacro('CopyRow(ROW1)');
        };
      }
      if (extCl <> 2) {
        insert f791_printed set f791_printed.cRec := fpSpAxtf.nRec ,
                                f791_printed.printedAtRow := repGetPrintRow - 1,
                                f791_printed.cNode  := fpSpAxtf.cNode,
                                //f791_printed.code   := extraChar + trimFirst0(fpstbud.levelcode),
                                f791_printed.code   := extraChar + trimFirst0(code2010),

                                f791_printed.name   := PadCh ('',' ', 2 * getCurrentLevelNumber) + fpSpAxtf.name,
                                f791_printed.extPar := extCl,
                                f791_printed.sum[1] := arValues[1],
                                f791_printed.sum[2] := arValues[2],
                                f791_printed.sum[3] := arValues[3],
                                f791_printed.extPar1:= extCl1,
                                f791_printed.isLeaf := fpSpAxtf.isLeaf,
                                f791_printed.coTable := fpSpAxtf.coTable,
                                f791_printed.isKAUGroup := isKauGroup (fpSpAxtf.nRec),
                                f791_printed.extraRazn791 := RaznStatus

                                ;
        lastPrintedAt := repGetPrintRow - 1;
        lastnRec := fpSpAxtf.nRec;
        lastCNode := fpSpAxtf.cNode;
      };
    }

    tms[2] := Cur_Time;  // 8 минут

    //doGroupData2(dataSheetName, reportSheetName);

    tms[3] := Cur_Time;

    xlRunMacro('CopyRow(ROW8)');

    printPodval (dataSheetName);

    printSigners;

    printExecutor;

    xlSetActiveSheetByName(reportSheetName); //?????_1

    xlRunMacro('AfterPrint791');

    tms[4] := Cur_Time;

    printReport79(dataSheetName, reportSheetName, reportSheetName79);
    tms[5] := Cur_Time; // 12 минут

    doGroupData2(dataSheetName, reportSheetName, reportSheetName79);

    xlRunMacro('AfterReportPrint791');

    if IsCreateAndKillExcel then {
      xlKillExcel;
    }
    tms[6] := Cur_Time;
    StopVisual ('',0);

    if (isShowTimeLabels) then {
      message ( tms[1] + ''#13'' +
                tms[2] + ''#13'' +
                tms[3] + ''#13'' +
                tms[4] + ''#13'' +
                tms[5] + ''#13'' +
                tms[6] + ''#13''
                )
                ;
    };

  end;

  procedure handleInit;
  begin
    set isShowZeros := true;

    set isShowTimeLabels := false;

    set coTableToSum := 22217;

    set isDebugDatas := false;

    podpisanty.setprefix('szmn_bud_Form791');
    podpisanty.reinit;

    podpisanty2.setprefix('szmn_bud_Form791_2');
    podpisanty2.reinit;

    ReadDsk;

    SetIsCreateAndKillExcel(true);

  end;
