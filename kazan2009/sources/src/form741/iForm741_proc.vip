  procedure repSetGroupStartRow(r : word);
  begin
    xlSetCellNumberValue(r    , 1, 3, 1, 3);
  end;

  procedure repSetGroupFinishRow(r : word);
  begin
    xlSetCellNumberValue(r    , 1, 4, 1, 4);
  end;
  
  procedure GroupData;
  begin
    xlRunMacro('GroupData');
  end;
  

  procedure repSetPrintRow(r : word);
  begin
    xlSetCellNumberValue(r    , 1, 1, 1, 1);
  end;
  
  function repGetPrintRow: word;
  begin
    xlGetCellValue(1, 1, result);
  end;
  
  function rebuildNPP(n: String) : String;
  begin
    var ps : byte;
    ps := pos ('.', n);
    if (ps = 0) then {
      result := lPad(n,4);
      exit;
    }
    var s1 : string;
    
    s1 := SubStr (n,1,ps-1);
    result := lpad(s1,4) + '.' + rebuildNPP( substr(n,ps+1,255)) ;
  end;
  
  
  procedure printSigners;
  begin
    _loop spKAUPodp {
      var lsname : string;
      
      lsname := spKAUPodp.name;
      var b : byte;
      
      b := pos ('|', lsname);
      
      var ar : array [1..2] of string;
      ar[1] := substr (lsname, 1, b-1);
      ar[2] := substr (lsname, b+1, 255);
      
      //Message (ar[1]+''#13''+ar[2]);
      
      xlSetCellStringValue(ar[1] , 10, 2, 10, 2); // узел - лист
      xlSetCellStringValue(ar[2] , 10, 10, 10, 10); // узел - лист
      xlRunMacro('CopyRow5');
      
    }  
  end;
    
  
  create view rep741_prn
  as 
  select *
    from  f714_stbud  rp_st (f714_sb_scode) , 
          f714_datas  rp_dt (f714_OrgName)
   where ((
     rp_st. nRec == rp_dt.cStBud
   ));
  
  
  
  procedure prepareHierData (curNode : comp; curLev : byte);
  begin
    if (getfirst f714_stbud where ((curNode == nRec)) = tsOK ){
      insert f714_sb_iter set crec := f714_stbud.nRec, level := curLev, prStart := 1, f714_sb_iter.cNode := f714_stbud.cnode;
    }
    
    _loop f714_stbud (f714_sb_scode) where (( curNode == f714_stbud.cNode (noindex) )) {
      //Message (f714_stbud.LevelCode);
      prepareHierData (f714_stbud.nRec , curLev + 1);
    }
    
    if (getfirst f714_stbud where ((curNode == nRec)) = tsOK ){
      insert f714_sb_iter set crec := f714_stbud.nRec, level := curLev, prStart := 2, f714_sb_iter.cNode := f714_stbud.cnode;
    }
  end;
  
  create view rep04
  var
    curNode : comp;
  as select *
       from f714_sb_iter f_s_i_2, f714_sb_iter f_s_i_3
      where ((
        curNode == f_s_i_2.cNode and
        2 == f_s_i_2.prStart and 
        
        curNode == f_s_i_3.cNode and
        1 == f_s_i_3.prStart
      ))
  ;
  
  procedure printCuHierReportData (curNode : comp; curLev : byte);
  begin
      
    if (getfirst f714_stbud where ((curNode == nRec)) <> tsOK )  {exit}; // статьи нет, делать нечего
    if (f714_sb_iter.prStart = 1  ){ // это начало этой статьи
      if (f714_stbud.isLeaf = 1) {
        xlSetCellStringValue('', 7, 1, 7, 6); // узел -  лист
        xlSetCellStringValue('', 7, 8, 7, 38); // узел -  лист
        xlSetCellStringValue(f714_stbud.LevelCode , 7, 1, 7, 1); // узел - лист
        xlSetCellStringValue(f714_stbud.Name , 7, 3, 7, 3); // узел - лист
        xlRunMacro('CopyRow4');
      } else {
        xlSetCellStringValue('' , 4, 1, 4, 6); // узел - не лист
        xlSetCellStringValue('' , 4, 8, 4, 38); // узел - не лист
        xlSetCellStringValue(f714_stbud.LevelCode + '   '+ f714_stbud.Name , 4, 1, 4, 1); // узел - не лист
        xlRunMacro('CopyRow1');
      };
      update current f714_sb_iter set printedAtRow := repGetPrintRow -1;
    };
    var rcnt : word;
    
    rcnt := 0;
    
    if (f714_sb_iter.prStart = 1  ){ // это начало этой статьи
      _loop f714_datas  (f714_OrgName) where (( curNode == f714_datas.cStBud )){ // печать строк данных отчета
        xlSetCellStringValue('', 5, 1, 5, 6 );
        xlSetCellStringValue(f714_datas.OrgINN, 5, 2, 5, 2);
        xlSetCellStringValue(f714_datas.OrgName, 5, 3, 5, 3);
        xlSetCellStringValue(f714_datas.DogName, 5, 4, 5, 4);
        xlSetCellStringValue(f714_datas.DogPred, 5, 5, 5, 5);
        xlSetCellStringValue(f714_datas.AppDogName, 5, 6, 5, 6);
        
        //xlSetCellStringValue(f714_datas.PlDay, 5, 40, 5, 40);

        xlSetCellNumberValue(0, 5, 8 , 5, 38);
        var i : byte;
        for (i := 1; i <=31; inc(i)){
          //xlSetCellNumberValue(f714_datas.sum / 1000 , 5, 8-1 + f714_datas.plDay , 5, 8-1 + f714_datas.plDay);
          xlSetCellNumberValue(f714_datas.sumar[i] / 1000 , 5, 8-1 + i  , 5, 8-1 + i);
        }

        
        xlRunMacro('CopyRow2');
        //xlRunMacro('aaa("test")');
        rcnt := rcnt + 1;
      }
      
      update current f714_sb_iter set SubRowsPrinted := rcnt; 
    }
    
    if (f714_sb_iter.prStart = 2  ){ // это финиш этой статьи
      var gStartedAt : word;
      
      if (getFirst f714_sb_iter r_s_i where (( curNode == r_s_i.cRec and 1 == r_s_i.prStart )) = tsOK  ){
        rcnt := r_s_i.SubRowsPrinted;
        gStartedAt := r_s_i.printedAtRow;
      }
      
      if (f714_stbud.isLeaf = 1) {
        xlSetCellStringValue('', 7, 1, 7, 3); // узел -  лист
        xlSetCellStringValue('', 7, 8, 7, 38); // узел -  лист
        xlSetCellStringValue(f714_stbud.LevelCode , 7, 1, 7, 1); // узел - лист
        xlSetCellStringValue('Итого: ['+ f714_stbud.Name + ']' , 7, 3, 7, 3); // узел - лист
        xlRunMacro('CopyRow4');
        
        update current f714_sb_iter set printedAtRow := repGetPrintRow -1;
        
        if (rcnt > 0) {
          repSetGroupStartRow(gStartedAt + 1);
          repSetGroupFinishRow(repGetPrintRow - 2 );
          GroupData;
        }
        

        var s : word;
        s := repGetPrintRow;
        xlSetActiveSheetByName('отчет'); //?????_1
        //xlSetCellFormula('=СУММ(RC[1]:RC[31])',s-1,7,s-1,7);
        if rcnt > 0 then {
          xlSetCellFormula('=СУММ(R[-'+rcnt+']C:R[-1]C)',s-1,8,s-1,38);
        } else {
          xlSetCellFormula('=СУММ(R[-'+1+']C:R[-1]C)',s-1,8,s-1,38);
        }
        //xlRunMacro('CopyRow3');
        xlSetActiveSheetByName('datas'); //?????_1
        

      } else {
        // R[-15]C;R[-17]C[-7]:R[-17]C
        xlSetCellStringValue('', 6, 1, 6, 6); // узел - не лист
        xlSetCellStringValue('', 6, 8, 6, 38); // узел - не лист
        
        xlSetCellStringValue('Итого ['+ f714_stbud.LevelCode + '   '+ f714_stbud.Name +']', 6, 1, 6, 1); // узел - не лист
        
        xlRunMacro('CopyRow3');
        
        update current f714_sb_iter set printedAtRow := repGetPrintRow -1;
        
        //message (repGetPrintRow);
        if (rcnt > 0 or true) {
          repSetGroupStartRow(gStartedAt + 1);
          repSetGroupFinishRow(repGetPrintRow - 2 );
          GroupData;
        }
        
        
        var s : word;
        s := repGetPrintRow-1;

        var fSum : string;
        fSum := '';
        
        rep04.curNode := f714_sb_iter.cRec;
        
        rep04._loop f_s_i_2 {
          var tsts : string;
          var raz : integer;
          raz  := rep04.f_s_i_2.printedAtRow - s ;
          tsts := ''+ raz;
          fSum := fSum + ';R[' + tsts + ']C';
        }
        
        xlSetActiveSheetByName('отчет'); //?????_1
        if rcnt > 0 then {
          xlSetCellFormula('=СУММ(R[-'+rcnt+']C:R[-1]C'+fSum+')',s,8,s,38);
        } else {
          xlSetCellFormula('=СУММ('+fSum+')',s,8,s,38);
        }
        //xlRunMacro('CopyRow3');
        xlSetActiveSheetByName('datas'); //?????_1
        
      };
    };
    
  end;

  procedure printReport;
  begin
    var sPath : String;
    //sPath := 'D:\tmpl_7_4_1.xls';
    
    //message (translatepath('%curpath%'));
    //sPath := translatepath('%curpath%\tmpl_7_4_1.xls');
    sPath := translatepath('%startpath%Xls\F_FPBUDGET\SZMN_Budjet\tmpl_7_4_1.xls');
    //message (sPath);
    
    xlCreateExcelWithTemplate(sPath,true); 
    
    if (xlIsExcelValid) {
       //xlOpenWorkBook(trim(sPath));
       //xlSetActiveWorkBookByName(trim(sPath));
       //xlSaveAsWorkBookByName(trim(sPath), NameExcel+'.xls');
    } 
    
    //xlRunMacro('GalFpUser_AfterReport');

    
    xlSetActiveSheetByName('datas'); //?????_1
    
    xlSetCellStringValue(sPeriod, 1, 6, 1, 6); // 
    
    xlSetCellStringValue(sFltrCO, 1, 8, 1, 8); // 
    
    repSetPrintRow(15);
    
    _loop f714_sb_iter (f714_sbi_nrec) {
      printCuHierReportData(f714_sb_iter.cRec,0);      
    }
    printSigners;
    
    // sGetTune ('USER.FIO') USER.REMARK
    
    var sFIO :String ;
    sFIO := Trim (sGetTune ('USER.FIO'));
    var ps1 : byte;
    ps1 := pos (' ',sFIO);
    if (ps1 <> 0 ){
      var sfam : String;
      //sFAM := substr (sFIO,1,ps1-1);
      sFAM := substr (sFIO,1,ps1-1) + ' ' + Substr (trim (substr (sFIO,ps1+1,255)),1,1) + '.';
      
      sFIO := trim (substr (sFIO,ps1+1,255));
      ps1 := pos (' ',sFIO);
      
      if (ps1 <> 0) {
        sFAM := sFAM + ' ' + Substr (trim (substr (sFIO,ps1+1,255)),1,1) + '.';
      } else {
      }
      
      sFIO := sFAM;
    }
    
    
    xlSetCellStringValue('/ '+ sFIO + ' /', 15, 10, 15, 10); 
    
    var tel : string;
    
    if (getFirst persons where (( sGetTune ('USER.FIO') == persons.FIO (noindex) )) = tsOK) {
      if (getFirst COMMUNICATIONS where ((persons.nrec == COMMUNICATIONS.person)) = tsOK){
        tel := COMMUNICATIONS.ADDR;
      }
    }
    xlSetCellStringValue(tel /* sGetTune ('USER.REMARK') */, 15, 12, 15, 12); 
    xlRunMacro('CopyRow6');

    xlSetActiveSheetByName('отчет'); //?????_1
    xlKillExcel;
  end;
  
  
  /*
  procedure printReport2;
  begin
    var sPath : String;
    sPath := 'D:\tmpl_7_4_1.xls';
    
    xlCreateExcelWithTemplate(sPath,true); 
    
    if (xlIsExcelValid) {
       //xlOpenWorkBook(trim(sPath));
       //xlSetActiveWorkBookByName(trim(sPath));
       //xlSaveAsWorkBookByName(trim(sPath), NameExcel+'.xls');
    } 
    
    //xlRunMacro('GalFpUser_AfterReport');

    
    xlSetActiveSheetByName('datas'); //?????_1
    
    repSetPrintRow(15);
    
    var rcnt : word;

    rep741_prn._loop rp_st {
      if (rep741_prn.rp_st.isLeaf = 1) {
        xlSetCellStringValue('' , 7, 1, 7, 38); // узел - лист
        xlSetCellStringValue(rep741_prn.rp_st.LevelCode , 7, 1, 7, 1); // узел - лист
        xlSetCellStringValue(rep741_prn.rp_st.Name , 7, 3, 7, 3); // узел - лист
        xlRunMacro('CopyRow4');
      } else {
        xlSetCellStringValue('' , 4, 1, 4, 38); // узел - лист
        xlSetCellStringValue(rep741_prn.rp_st.LevelCode + '   '+ rep741_prn.rp_st.Name , 4, 1, 4, 1); // узел - не лист
        xlRunMacro('CopyRow1');
      };
      
      rcnt := 0;
      
      rep741_prn._loop rp_dt {
        xlSetCellStringValue('', 5, 1, 5, 6 );
        xlSetCellStringValue(rep741_prn.rp_dt.OrgINN, 5, 2, 5, 2);
        xlSetCellStringValue(rep741_prn.rp_dt.OrgName, 5, 3, 5, 3);
        xlSetCellStringValue(rep741_prn.rp_dt.DogName, 5, 4, 5, 4);
        xlSetCellStringValue(rep741_prn.rp_dt.DogPred, 5, 5, 5, 5);
        xlSetCellNumberValue(0, 5, 8 , 5, 38);
        xlSetCellNumberValue(rep741_prn.rp_dt.sum / 1000 , 5, 8-1 +rep741_prn.rp_dt.plDay , 5, 8-1 +rep741_prn.rp_dt.plDay);
        xlRunMacro('CopyRow2');
        rcnt := rcnt + 1;
      }
      if (rep741_prn.rp_st.isLeaf = 1) {
        xlSetCellStringValue('', 7, 1, 7, 6); // узел - не лист
        xlSetCellStringValue('', 7, 8, 7, 38); // узел - не лист
        xlSetCellStringValue(rep741_prn.rp_st.LevelCode , 7, 1, 7, 1); // узел - лист
        xlSetCellStringValue('Итого: ['+ rep741_prn.rp_st.Name + ']' , 7, 3, 7, 3); // узел - лист
        xlRunMacro('CopyRow4');
        
        var s : word;
        s := repGetPrintRow;
        xlSetActiveSheetByName('отчет'); //?????_1
        if rcnt > 0 then {
          xlSetCellFormula('=СУММ(R[-'+rcnt+']C:R[-1]C)',s-1,8,s-1,38);
        } else {
          xlSetCellFormula('=СУММ(R[-'+1+']C:R[-1]C)',s-1,8,s-1,38);
        }
        //xlRunMacro('CopyRow3');
        xlSetActiveSheetByName('datas'); //?????_1

      } else {
        xlSetCellStringValue('', 6, 1, 6, 6); // узел - не лист
        xlSetCellStringValue('', 6, 8, 6, 38); // узел - не лист
        
        xlSetCellStringValue('Итого ['+ rep741_prn.rp_st.LevelCode + '   '+ rep741_prn.rp_st.Name +']', 6, 1, 6, 1); // узел - не лист
        
        xlRunMacro('CopyRow3');
        
        
        //message (repGetPrintRow);
        
        var s : word;
        s := repGetPrintRow;
        xlSetActiveSheetByName('отчет'); //?????_1
        if rcnt > 0 then {
          xlSetCellFormula('=СУММ(R[-'+rcnt+']C:R[-1]C)',s-1,8,s-1,38);
        } else {
          xlSetCellFormula('=СУММ(R[-'+1+']C:R[-1]C)',s-1,8,s-1,38);
        }
        //xlRunMacro('CopyRow3');
        xlSetActiveSheetByName('datas'); //?????_1
        
      };
      
    }
    
    xlSetActiveSheetByName('отчет'); //?????_1
    xlKillExcel;
  end;
  
  */
    
  create view rep741
  var 
    curL : byte; 
  as
  select *
    from  f714_stbud rst, 
          (select max(codeLen) (FieldName MaxLen01) from  f714_stbud rstLen where (( rst.lvl == rstLen.lvl )) ) tempt,
          f714_stbud rstUp,
          (select max(Length (rstLen.LevelCode) ) (FieldName MaxLen1) from  f714_stbud rstLen where (( curL == rstLen.lvl )) ) fsb1
   where ((
     curL == rst.lvl and
     rst.cNode == rstUp.nRec
   ))
          ;
    
  procedure BuildStHeir;
  begin
    var lr : longint;
    var cn : comp;
    
    _loop f714_datas (f714_NppSort) {
      cn := f714_datas.cStBud;
      
      while (getFirst FPSTBUD where ((cn == FPSTBUD.nrec)) = tsOK ){
        insert f714_stbud ( nRec,
                            name,
                            levelcode,
                            code,
                            cNode,
                            isLeaf,
                            codeLen
                             )
        select  FPSTBUD.nRec,
                FPSTBUD.name,
                FPSTBUD.levelcode,
                FPSTBUD.code,
                FPSTBUD.cNode,
                FPSTBUD.isLeaf,
                Length (FPSTBUD.levelcode)
          from FPSTBUD where (( cn == FPSTBUD.NRec )) ignore_errors  (tsDuplicateKey);
          cn := FPSTBUD.cNode;
        };
        
    }
    
    var b : byte;
    
    update f714_stbud where (( 0 == f714_stbud.cNode  )) set  f714_stbud.lvl := 1, 
                                                              //f714_stbud.SortCode := f714_stbud.LevelCode , 
                                                              f714_stbud.SortCode := rebuildNPP(f714_stbud.levelcode)
                                                              ; 
    
    for (b := 1; b <= 250; b := b+1){
      update f714_stbud
        from f714_stbud fsb 
       where ((f714_stbud.cnode /== fsb.nRec and b == fsb.lvl))
         set lvl := b + 1, SortCode :=  fsb.SortCode + '|' + rebuildNPP(f714_stbud.levelcode) /*f714_stbud.LevelCode */;
    }
    //update f714_stbud set SortCode := PAdCh(SortCode+'|','0',250);
    update f714_stbud set f714_stbud.SortCode := lPad('|'+ f714_stbud.SortCode,250);
    
    _loop f714_stbud {
      if ( getFirst f714_stbud sbraz where (( f714_stbud.nrec == sbraz.cnode)) <> tsOK ) {
        update current f714_stbud set isLeaf := 1;
      }
    }
    
    prepareHierData(0,0);
    
    /*     
    for (b := 1; b <= 250; b := b+1){
      update f714_stbud
        from (select max(codeLen ) (FieldName MaxLen1) from  f714_stbud rstLen where (( b == rstLen.lvl )) ) fsb1 
       where ((b == f714_stbud.lvl))
         set f714_stbud.maxLn := fsb1.MaxLen1 ;
    }
         
    for (b := 1; b <= 250; b := b+1){
      rep741.curL := b;
      
      rep741._loop rst {
        var st : string;
        st := '';
        
        var ml : byte;
        ml := 1;
        //if (rep741.getfirst tempt = tsOK) { ml := rep741.tempt.MaxLen01};
        ml := rep741.rst.maxLn;
        if (rep741.getfirst rstUp = tsOK) { st := rep741.rstUp.SortCode};
        
        update f714_stbud where (( rep741.rst.nRec == f714_stbud.nrec)) set f714_stbud.SortCode := st + lPad (rep741.rst.SortCode,ml) ; 
        
      }
    }
    */
  end;
  
  procedure GroupDatas;
  begin
    var subSymb : string ; // строка-заменитель пустых строк
    
    subSymb := 'aaaaaaaaaaaaaaaaaaaaaaa'#255;
    
    update f714_datas set f714_datas.groupLevel := 0;
    
    _loop f714_datas_empty {
      if (getfirst f714_datas where ((  
                                        1       == f714_datas.groupLevel and
                                        f714_datas_empty.cOrg == f714_datas.cOrg and 
                                        f714_datas_empty.cDog == f714_datas.cDog and 
                                        f714_datas_empty.cAppDog == f714_datas.cAppDog and 
                                        f714_datas_empty.cStBud == f714_datas.cStBud )) = tsOK ){
        //
        update current f714_datas set f714_datas.sum := f714_datas.sum + f714_datas_empty.sum, 
                                      f714_datas.sumar[f714_datas_empty.plDay] := f714_datas.sumar[f714_datas_empty.plDay] + 
                                                                                  f714_datas_empty.sumar[f714_datas_empty.plDay] ;
        
        /*
        var i : byte;
        
        for (i := 1; i<=31;inc (i)){
          update current f714_datas set f714_datas.sumar[i] := f714_datas.sumar[i] + f714_datas_empty.sumar[i];
        }
        */
        
      } else {
        var r1 : type$f714_datas;
        //var r2 : record as table f714_datas_empty;
        //f714_datas = f714_datas_empty;
        //GetTableBuffer  (r1);
        //r2 := r1;
        r1 := f714_datas_empty.buffer;
        r1.groupLevel := 1;
        r1.sumar[r1.plDay] := r1.sum;
        
        r1.nRec := 0;//mtGetNextNrec(tnf714_datas, true);
        
        f714_datas.buffer := r1;
        
        insert current f714_datas ;
        
        /*
        //Message ( 'f714_datas_empty.plDay == '+f714_datas_empty.plDay+''#13+                  'f714_datas_empty.sumar[] =='+ f714_datas_empty.sumar[f714_datas_empty.plDay] +''#13);
        insert f714_datas set f714_datas.OrgName := subSymb,  f714_datas.DogName := subSymb, f714_datas.AppDogName := subSymb,
                              f714_datas.cStBud := f714_datas_empty.cStBud,
                              f714_datas.sum := f714_datas_empty.sum, 
                              f714_datas.sumar[f714_datas_empty.plDay] := f714_datas_empty.sumar[f714_datas_empty.plDay],
                              f714_datas.plDay := f714_datas_empty.plDay
                               ;
        update current f714_datas set f714_datas.sum := f714_datas_empty.sum, 
                                      f714_datas.sumar[f714_datas_empty.plDay] := 
                                                                                  f714_datas_empty.sumar[f714_datas_empty.plDay] ;
        */
      }
    }
    
    delete f714_datas where ((
      0 == f714_datas.groupLevel
    ))
    ;
    
    /*
    delete f714_datas where ((
      '' == f714_datas.OrgName and
      '' == f714_datas.DogName and
      '' == f714_datas.AppDogName 
    ))
    ;
    
    update f714_datas where ((
      subSymb == f714_datas.OrgName and 
      subSymb == f714_datas.DogName and 
      subSymb == f714_datas.AppDogName
    )) set f714_datas.OrgName := '',  f714_datas.DogName := '', f714_datas.AppDogName := ''
    ;
    */
    
  end;
  
  
  procedure PrepareData;
  begin
    delete all f714_datas;
    delete all f714_stbud;
    delete all f714_sb_iter;
    
    var dstrt,dfin : date;
    
    var cRec : longint;
    
    var ccm : longint;
    set ccm := coMarker;
    
    if (getFirst fpPeriod = tsOK) {
      dstrt := fpPeriod.dbeg;
      dfin  := fpPeriod.DEND;
    }
    
    var cs : comp;
    
    cs := cStatus;
    
    insert f714_datas 
              ( Npp,
                NppSort,
                cOrg,
                cDog,
                DogName,
                DogPred,
                cAppDog,
                AppDogName,
                plDate,
                plDay,
                cStBud,
                sum,
                OrgINN,
                OrgName,
                StBudName,
                AKTOFPnRec
                )
    select  FPSTBUD.LevelCode,
            LPad (FPSTBUD.LevelCode, 20),
            AKTOFP.corg,
            AKTOFP.CDOGOVOR,
            Dogovor.NODOC + ' от ' + Dogovor.DDOC,
            '', //AttrDog.SUBJECT1,
            AKTOFP.CAPPDOGOVOR,
            SubDogovor.NODOC + ' от ' + SubDogovor.DDOC,
            AKTOFP.DDoc,
            Day(AKTOFP.DDoc),
            FPSPATTR.CMEAN,
            FPSPATTR.Summa,
            KatOrg.UNN,
            KatOrg.NAME,
            FPSTBUD.Name,
            AKTOFP.nRec
      from AKTOFP,FPSPATTR,FPSTBUD, Dogovor, Dogovor SubDogovor, KatOrg, Persons
           //, AttrDog
      where ((
      dstrt <<= AKTOFP.DDoc (noindex) and
      dfin  >>= AKTOFP.DDoc (noindex) and
      2 == AKTOFP.Direct (noindex) and
      cs == AKTOFP.cNote (noindex) and
      //comp('013100000001356Fh') == AKTOFP.nrec and
      AKTOFP.CDOGOVOR == Dogovor.nrec and
      // Dogovor.nRec == AttrDog.cDogovor and
      AKTOFP.CAPPDOGOVOR == SubDogovor.nRec and
      AKTOFP.cOrg == KatOrg.nrec and
      AKTOFP.CCURATOR == Persons.nrec and
      AKTOFP.nRec == FPSPATTR.crec (noindex) and
      FPSPATTR.CMEAN == FPSTBUD.nrec  
      )) and
      SearchMarker ( ccm ,AKTOFP.CPODR, cRec )
    ;
    
    update f714_datas set f714_datas.sumAr[f714_datas.plDay] := f714_datas.sum;
    
    _loop f714_datas {
      var s : string;
      s := '';
      _loop AttrDog where ((f714_datas.cDog == AttrDog.cDogovor)) {
        s := AttrDog.SUBJECT1 + AttrDog.SUBJECT2 + AttrDog.SUBJECT3;
        s := trim (s);
        if s <> '' then break;
      }
      
      update current f714_datas set f714_datas.DogPred := s, f714_datas.NppSort := rebuildNPP(f714_datas.npp);
    }
    
    // схлопываем пустые строки
    GroupDatas;

    BuildStHeir;
    
    //select * from f714_datas to dbf f714_datas.dbf;
    //select * from f714_datas to txt f714_datas.txt;
    
    //select * from f714_stbud to dbf f714_stbud.dbf;
    //select * from f714_stbud to txt f714_stbud.txt;
    
  end;
  
  procedure savedsk;
  begin
   
    SaveMyDsk (cPeriod,'iForm741_cPeriod' );
    SaveMyDsk (wKODGRKAU,'iForm741_wKODGRKAU' );
    SaveMyDsk (cFltrCO,'iForm741_cFltrCO' );
    
    SaveMyDsk (cPodpGrp,'iForm741_cPodpGrp' );
    SaveMyDsk (cStatus,'iForm741_cStatus' );
    
  end;
  
  procedure ReadDsk;
  begin
    var dc : boolean;
    
    dc := true;
    
    ReadMyDsk (cPeriod,'iForm741_cPeriod', dc)
    //ReadMyDsk (wKODGRKAU,'iForm741_wKODGRKAU', dc)
    ReadMyDsk (cFltrCO,'iForm741_cFltrCO', dc)
    
    ReadMyDsk (cPodpGrp,'iForm741_cPodpGrp', dc)
    ReadMyDsk (cStatus,'iForm741_cStatus', dc)
    
  end;
  
  