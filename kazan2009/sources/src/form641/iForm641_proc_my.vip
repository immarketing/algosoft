  Procedure StoreDSK();
  begin
    SaveMyDsk(sPath,  '6dsksPath1');
    SaveMyDsk(cTForm, '6dsksPath2');
    SaveMyDsk(cPeriod,'6dsksPath3');
    SaveMyDsk(cPlan1, '6dsksPath4');
    SaveMyDsk(cPlan2, '6dsksPath5');
    SaveMyDsk(cFact,  '6dsksPath6');
    SaveMyDsk(cPlan3, '6dsksPath7');

    SaveMyDsk(sPath,     'iForm641_sPath');

  end;

  procedure ReadDSK;
  begin
    var dc : boolean;

    dc := true;

    if (not ReadMyDsk(sPath  ,'6dsksPath1',isError))  sPath := '';
    if (not ReadMyDsk(cPlan1 ,'6dsksPath4',isError))  cPlan1:=0;
    if (not ReadMyDsk(cPlan2 ,'6dsksPath5',isError))  cPlan2:=0;
    if (not ReadMyDsk(cPlan3 ,'6dsksPath7',isError))  cPlan3:=0;
    if (not ReadMyDsk(cFact  ,'6dsksPath6',isError))  cFact:=0;
    if (not ReadMyDsk(cTForm ,'6dsksPath2',isError))  cTForm:=0;
    if (not ReadMyDsk(cPeriod,'6dsksPath3',isError))  cPeriod:=0;

    if (not ReadMyDsk(sPath  ,'iForm641_sPath',isError))  sPath := '';
    if (sPath='') set sPath := translatepath('%startpath%Xls\F_FPBUDGET\SZMN_Budjet\tmpl_6_4_1.xls');

  end;

  function repGetPrintRow: word;
  begin
    xlRunMacro('getRowToFill(1,1)');
    xlGetCellValue(1, 1, result);
  end;

  procedure printSigners;
  begin
    if not podpisanty.isSelected then exit;

    _loop podpisanty {
      var ar : array [1..2] of string;
      ar[1] := podpisanty.dolj;
      ar[2] := podpisanty.fio;

      xlSetCellStringValue(ar[1] , 14, 2, 14, 2); // ??N? - ????
      xlSetCellStringValue(ar[2] , 14, 7, 14, 7); // ??N? - ????
      xlRunMacro('CopyRow(ROW3)');

    }
  end;

  procedure printExecutor;
  begin
    var sFIO :String ;
    sFIO := Trim (sGetTune ('USER.FIO'));
    var ps1 : byte;
    ps1 := pos (' ',sFIO);
    if (ps1 <> 0 ){
      var sfam : String;
      //sFAM := substr (sFIO,1,ps1-1);
      sFAM := substr (sFIO,1,ps1-1) + ' ' + Substr (trim (substr (sFIO,ps1+1,255)),1,1) + '.';

      sFIO := trim (substr (sFIO,ps1+1,255));
      ps1 := pos (' ',sFIO);

      if (ps1 <> 0) {
        sFAM := sFAM + ' ' + Substr (trim (substr (sFIO,ps1+1,255)),1,1) + '.';
      } else {
      }

      sFIO := sFAM;
    }


    //xlSetCellStringValue('/ '+ sFIO + ' /', 15, 9, 15, 9);

    var tel : string;

    if (getFirst persons where (( sGetTune ('USER.FIO') == persons.FIO (noindex) )) = tsOK) {
      if (getFirst COMMUNICATIONS where ((  persons.nrec == COMMUNICATIONS.person and
                                            comp('000000000000022Bh') == COMMUNICATIONS.comtype
                                            )) = tsOK){
        tel := COMMUNICATIONS.ADDR;
      }
    }
    xlSetCellStringValue(sFIO + ',' + tel , 26, 2, 29, 2);
    xlRunMacro('CopyRow(ROW7)');

  end;


  procedure ExcelPrint2(CopyBud:comp; FP:word; Nstr:word; Nstol:word; varnt : byte);
  begin
    Set cCopyBud:=CopyBud;
    Set cFP:= FP;

    var sm : double;
    sm := 0;

    //      _LOOP  fpSpAxtf
    _LOOP  fpV {
      if((month(fpP.dbeg)=month(fpP.dEnd)) and (year(fpP.dbeg)=year(fpperiod.dbeg) and (fpvalues.chashan = 0))) { //chek year
        if(Check=0) {
          sm := fpv.summa;
          //xlSetCellNumberValue(     , Nstr, Nstol + month(fpP.dbeg), Nstr, Nstol + month(fpP.dbeg));
        }else{
          sm := fpv.summa/1000;
          //xlSetCellNumberValue(fpv.summa/1000, Nstr, Nstol + month(fpP.dbeg), Nstr, Nstol + month(fpP.dbeg));
        }
        //xlSetCellNumberValue(sm, Nstr, Nstol + month(fpP.dbeg), Nstr, Nstol + month(fpP.dbeg));

        case varnt of
          Plan : update current f641_printed set sumvar1[month(fpP.dbeg)] := sm ;
          DopPlan : update current f641_printed set sumvar2[month(fpP.dbeg)] := sm ;
          Fact : update current f641_printed set sumvar3[month(fpP.dbeg)] := sm ;
          OjidPlan : update current f641_printed set sumvar4[month(fpP.dbeg)] := sm ;
        end


      }
      else{}
    }
  end;

  function CalcCurrentSumBDSGod (pNum : byte) : double;
  begin
    var i : byte;
    for ( i := 1; i <=12; inc(i)){
      if (i <= pnum) {
        // здесь - из факта
        result += f641_printed.sumvar3[i];
      } else {
        // из доп. потребности
        result += f641_printed.sumvar2[i];
      }
    }
  end;

  function min (p1,p2 : double) : double;
  begin
    result := if (p1>p2,p2,p1);
  end;

  procedure doPrintReport;
  begin

    StoreDSK;
    var periodNum : byte;

    delete all f641_printed;

    //    message('Нажали на кнопку');
    pathUserOut := GetDefaultUserPath;
    NameExcel   := pathUserOut;
    wPeriod:=word(trim(NextNumStr(sPeriod)))-1;

    if (getFirst fpPeriod = tsOK){
      periodNum := month (fpPeriod.dBeg);

    } else {
      periodNum := 1;
    }

    xlCreateExcelWithTemplate(sPath,true);

    /*
    xlCreateExcel('',true);
    if (xlIsExcelValid)  {
      //         xlOpenWorkBook(translatepath('%startpath%')+'doc\Transport.xls');
      //         xlSetActiveWorkBookByName(translatepath('%startpath%')+'doc\Transport.xls');
      //         xlSaveAsWorkBookByName(translatepath('%startpath%')+'doc\Transport.xls', NameExcel+'.xls');

      xlOpenWorkBook(trim(sPath));
      xlSetActiveWorkBookByName(trim(sPath));
      xlSaveAsWorkBookByName(trim(sPath), NameExcel+'.xls');

    }
    */

    var dataSheetName : string;
    dataSheetName  := 'datas641';

    var reportSheetName : string;
    reportSheetName  := 'rep641';

    xlRunMacro('setDataSheetName('+dataSheetName+')');
    xlRunMacro('setReportSheetName('+reportSheetName+')');
    xlRunMacro('setRowToFill('+String (10)+')');

    xlSetActiveSheetByName(dataSheetName);
    //xlSetActiveSheet(1); //Титул_1

    xlSetCellStringValue(month(fpperiod.dbeg), 1, 1, 1, 1); //
    xlSetCellStringValue(year(fpperiod.dbeg), 1, 2, 1, 2); //
    var tt:word;
    tt:=0;
    //      SetOrder(tibyPrior);
    _LOOP  fpSpAxtf  {
      if(isValid(tnfpstbud)) { //chek year
        inc(tt);


        //xlSetCellStringValue(/*fpSpAxtf.levelCode*/fpSpAxtf.code, 1+tt, 1, 1+tt, 1); //
        /*
        xlSetCellStringValue(fpstbud.Name, 1+tt, 2, 1+tt, 2); //
        xlSetCellStringValue(kated.name, 1+tt, 51, 1+tt, 51);
        */

        insert f641_printed set f641_printed.cRec := fpSpAxtf.nRec ,
                                f641_printed.printedAtRow := repGetPrintRow - 1,
                                f641_printed.cNode  := fpSpAxtf.cNode,
                                f641_printed.code   := fpstbud.levelcode,
                                f641_printed.name   := fpSpAxtf.name,
                                f641_printed.prior  := fpstbud.prior,
                                //f641_printed.extPar := extCl,
                                f641_printed.isLeaf := fpSpAxtf.isLeaf

                                ;
        ExcelPrint2(cPlan1,150,1+tt,2,Plan);
        ExcelPrint2(cPlan2,150,1+tt,14,DopPlan);
        ExcelPrint2(cFact,151,1+tt,26,Fact);
        ExcelPrint2(cPlan3,150,1+tt,38,OjidPlan);

        //xlSetCellStringValue(fpstbud.prior, 1+tt, 52, 1+tt, 52);
        //xlSetCellStringValue(/*fpSpAxtf.levelCode*/fpSpAxtf.code, 1+tt, 1, 1+tt, 1);
        //xlSetCellStringValue(fpstbud.levelcode, 1+tt, 53, 1+tt, 53);

        var i : byte;
        var oj  : double;

        oj := 0;

        For (i := 1; i<=12; inc(i)) {
          oj += f641_printed.sumvar4[i];
        }
        update current f641_printed set f641_printed.Sumojid := oj;

        var godSm : double ;

        godSm := CalcCurrentSumBDSGod (periodNum);
        update current f641_printed set f641_printed.SumBDSGod := godSm;

        if (( f641_printed.Sumojid - f641_printed.SumBDSGod) < 0 ){
          // обработаем отрицательную разницу
          if (f641_printed.prior  = 0 ){
            update current f641_printed set
            f641_printed.SumKorr[12] := f641_printed.Sumojid - f641_printed.SumBDSGod;
          }
        } else {
          // положительная разница
          if ( periodNum <=10) {
            // таки обрабатываем положительную разницу
            update current f641_printed set
            f641_printed.SumKorr[periodNum+2] := f641_printed.Sumojid - f641_printed.SumBDSGod;
          }
        }

        //собственно, печатаем в ексель.
        var dataRow : word;

        dataRow := 19; // для ROW0

        var sSum : String;
        sSum := '=0';

        xlSetCellStringValue(fpstbud.levelcode, dataRow, 1, dataRow, 1);
        xlSetCellStringValue(fpSpAxtf.name, dataRow, 2, dataRow, 2); //

        for (i := 1; i<=12; inc(i)) {
          if (i < periodNum) {
            sSum += '+RC[' + ((i-1)*3 +1) + ']';

            // факт
            xlSetCellNumberValue(f641_printed.sumvar3[i] , dataRow, 3 + (i-1)*3 + 1 , dataRow, 3 + (i-1)* 3 + 1 );

          } else if (i = periodNum) {
            sSum += '+RC[' + ((i-1)*3 +1) + ']';
            // ожид. факт = факт ???
            xlSetCellNumberValue(f641_printed.sumvar3[i] , dataRow, 3 + (i-1)*3 + 1 , dataRow, 3 + (i-1)* 3 + 1 );
          } else if (i > periodNum) {
            sSum += '+RC[' + ((i-1)*3 +3) + ']';
            // планы, доп. планы и корректировка. ???

            xlSetCellNumberValue(min (f641_printed.sumvar1[i],f641_printed.sumvar3[i]) , dataRow, 3 + (i-1)*3 + 1 , dataRow, 3 + (i-1)* 3 + 1 );

            xlSetCellNumberValue( f641_printed.sumvar2[i] -
                                  min (f641_printed.sumvar1[i],f641_printed.sumvar3[i]) +
                                  f641_printed.SumKorr[i] ,
                                  dataRow, 3 + (i-1)*3 + 2 ,
                                  dataRow, 3 + (i-1)* 3 + 2
                                  );
          }
        }
        xlSetCellNumberValue(f641_printed.Sumojid , dataRow, 41 , dataRow, 41 );

        xlSetCellFormula(sSum,dataRow,3,dataRow,3);

        xlRunMacro('CopyRow(ROW0)');

      }    else{}
    }
    xlSetCellStringValue(Check, 1, 54, 1, 54);

    //      xlSetCellValue( sGetTune('INSNAME'), 23, 19, 23, 19); //Наименование Инспекции
    //      xlSetCellStringValue( MyOrg.Name, 28, 2, 28, 2);

    xlSetActiveSheetByName(reportSheetName);
    xlRunMacro('GalFpUser_AfterReport');
    xlKillExcel;
  end;

