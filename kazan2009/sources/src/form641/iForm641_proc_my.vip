#include iForm641_extClass.vip

  procedure CheckDefaultValues;
  begin
    if (extClName = '') {set extClName := 'Характеристики для форм 7.9.1 и 7.9'};
    if (excCode1 = '') {set excCode1 := 'Разделитель'} ;
    if (excCode2 = '') {set excCode2 := 'Вынос в подвал'}  ;
    if (excCode3 = '') {set excCode3 := 'Итого'}   ;
    if (excCode4 = '') {set excCode4 := 'Аггрегат'}   ;

    if cReg1 = 0 {cReg1 := 150};
    if cReg2 = 0 {cReg2 := 150};
    if cReg3 = 0 {cReg3 := 151};
    if cReg4 = 0 {cReg4 := 151};
  end;

  Procedure StoreDSK();
  begin
    CheckDefaultValues;

    SaveMyDsk(sPath,  '6dsksPath1');
    SaveMyDsk(cTForm, '6dsksPath2');
    SaveMyDsk(cPeriod,'6dsksPath3');
    SaveMyDsk(cPlan1, '6dsksPath4');
    SaveMyDsk(cPlan2, '6dsksPath5');
    SaveMyDsk(cFact,  '6dsksPath6');
    SaveMyDsk(cPlan3, '6dsksPath7');

    SaveMyDsk(sPath,     'iForm641_sPath');

    SaveMyDsk(Check,     'iForm641.Check');


    SaveMyDsk(extClName,   'iForm641_extClName');
    SaveMyDsk(excCode1,    'iForm641_excCode1');
    SaveMyDsk(excCode2,    'iForm641_excCode2');
    SaveMyDsk(excCode3,    'iForm641_excCode3');
    SaveMyDsk(excCode4,    'iForm641_excCode4');

    SaveMyDsk(cReg1,    'iForm641.cReg1');
    SaveMyDsk(cReg2,    'iForm641.cReg2');
    SaveMyDsk(cReg3,    'iForm641.cReg3');
    SaveMyDsk(cReg4,    'iForm641.cReg4');
  end;


  procedure ReadDSK;
  begin
    var dc : boolean;

    dc := true;

    if (not ReadMyDsk(Check,     'iForm641.Check',isError))  Check := '';

    if (not ReadMyDsk(sPath  ,'6dsksPath1',isError))  sPath := '';
    if (not ReadMyDsk(cPlan1 ,'6dsksPath4',isError))  cPlan1:=0;
    if (not ReadMyDsk(cPlan2 ,'6dsksPath5',isError))  cPlan2:=0;
    if (not ReadMyDsk(cPlan3 ,'6dsksPath7',isError))  cPlan3:=0;
    if (not ReadMyDsk(cFact  ,'6dsksPath6',isError))  cFact:=0;
    if (not ReadMyDsk(cTForm ,'6dsksPath2',isError))  cTForm:=0;
    if (not ReadMyDsk(cPeriod,'6dsksPath3',isError))  cPeriod:=0;

    if (not ReadMyDsk(sPath  ,'iForm641_sPath',isError))  sPath := '';
    if (sPath='') set sPath := translatepath('%startpath%Xls\F_FPBUDGET\SZMN_Budjet\tmpl_6_4_1.xls');

    ReadMyDsk (extClName,   'iForm641_extClName', dc);
    ReadMyDsk (excCode1,    'iForm641_excCode1', dc);
    ReadMyDsk (excCode2,    'iForm641_excCode2', dc);
    ReadMyDsk (excCode3,    'iForm641_excCode3', dc);
    ReadMyDsk (excCode4,    'iForm641_excCode4', dc);

    ReadMyDsk (cReg1,    'iForm641.cReg1', dc);
    ReadMyDsk (cReg2,    'iForm641.cReg2', dc);
    ReadMyDsk (cReg3,    'iForm641.cReg3', dc);
    ReadMyDsk (cReg4,    'iForm641.cReg4', dc);

    CheckDefaultValues;
  end;

  function trimFirst0 (st : String):string;
  begin
    if st = '' then {
      result := '';
      exit
    };
    if substr (st,1,1) = '0' then
      result := trimFirst0 (substr (st,2,255))
    else
      result := st;
  end;

  function repGetPrintRow: word;
  begin
    xlRunMacro('getRowToFill(1,1)');
    xlGetCellValue(1, 1, result);
  end;

  procedure printSigners;
  begin
    if not podpisanty.isSelected then exit;

    _loop podpisanty {
      var ar : array [1..2] of string;
      ar[1] := podpisanty.dolj;
      ar[2] := podpisanty.fio;

      xlSetCellStringValue(ar[1] + '____________________________________' + ar[2] , 30 , 1, 30, 1); //
      //xlSetCellStringValue( , 30, 11, 30, 11); //
      xlRunMacro('CopyRow(ROWSIGN)');

    }
  end;

  procedure printExecutor;
  begin
    var sFIO :String ;
    sFIO := Trim (sGetTune ('USER.FIO'));
    var ps1 : byte;
    ps1 := pos (' ',sFIO);
    if (ps1 <> 0 ){
      var sfam : String;
      //sFAM := substr (sFIO,1,ps1-1);
      sFAM := substr (sFIO,1,ps1-1) + ' ' + Substr (trim (substr (sFIO,ps1+1,255)),1,1) + '.';

      sFIO := trim (substr (sFIO,ps1+1,255));
      ps1 := pos (' ',sFIO);

      if (ps1 <> 0) {
        sFAM := sFAM + ' ' + Substr (trim (substr (sFIO,ps1+1,255)),1,1) + '.';
      } else {
      }

      sFIO := sFAM;
    }


    //xlSetCellStringValue('/ '+ sFIO + ' /', 15, 9, 15, 9);

    var tel : string;

    if (getFirst persons where (( sGetTune ('USER.FIO') == persons.FIO (noindex) )) = tsOK) {
      if (getFirst COMMUNICATIONS where ((  persons.nrec == COMMUNICATIONS.person and
                                            comp('000000000000022Bh') == COMMUNICATIONS.comtype
                                            )) = tsOK){
        tel := COMMUNICATIONS.ADDR;
      }
    }
    xlSetCellStringValue(sFIO + ',' + tel , 35, 1, 35, 1);
    xlRunMacro('CopyRow(ROWEX)');

  end;

  procedure DeleteColumns (periodNum : byte);
  begin
    var i : byte;
    for (i := 12; i>=1; dec(i)) {
      if (i < periodNum) {
        // факт
        xlRunMacro('DeleteEntireColumn ( ' + (3 + (i-1)*3 + 3) + ' )');
        xlRunMacro('DeleteEntireColumn ( ' + (3 + (i-1)*3 + 2) + ' )');

        xlSetCellStringValue('Факт' , 8, 3 + (i-1)*3 + 1, 8, 3 + (i-1)*3 + 1);
      } else if (i = periodNum) {
        // ожид. факт = факт ???
        xlRunMacro('DeleteEntireColumn ( ' + (3 + (i-1)*3 + 3) + ' )');
        xlRunMacro('DeleteEntireColumn ( ' + (3 + (i-1)*3 + 2) + ' )');
        //xlSetCellStringValue('Ожид. факт' , 3 + (i-1)*3 + 1, 1, 3 + (i-1)*3 + 1, 1);

        xlSetCellStringValue('Ожид. факт' , 8, 3 + (i-1)*3 + 1, 8, 3 + (i-1)*3 + 1);
      } else if (i > periodNum) {
        // планы, доп. планы и корректировка. ???
        //xlRunMacro('DeleteEntireColumn ( ' + (3 + (i-1)*3 + 1) + ' )');
        //xlRunMacro('DeleteEntireColumn ( ' + (3 + (i-1)*3 + 2) + ' )');
      }
    }
  end;

  procedure MarkColumns (periodNum : byte);
  begin
    var i : byte;
    var colMark : byte;
    colMark := 4;
    for (i := 1; i<=12; inc(i)) {
      if (i < periodNum) {
        // факт
        xlSetCellStringValue('' + colMark ,9, colMark, 9, colMark);
        colMark += 1;
      } else if (i = periodNum) {
        // ожид. факт = факт ???
        xlSetCellStringValue('' + colMark ,9, colMark, 9, colMark);
        colMark += 1;
      } else if (i > periodNum) {
        xlSetCellStringValue('' + colMark ,9, colMark, 9, colMark);
        xlSetCellStringValue('' + (colMark + 1) ,9, colMark + 1, 9, colMark + 1);
        xlSetCellStringValue('' + (colMark + 2) + '=' + colMark + ' + ' + (colMark + 1) ,
                                  9, colMark + 2, 9, colMark + 2);
        colMark += 3;
      }
    }
    xlSetCellStringValue('' + colMark ,9, colMark+1, 9, colMark+1);
    xlSetCellStringValue('' + (colMark + 1) + '=' + (colMark+0) + ' - 3',
                            9, colMark + 2, 9, colMark + 2);

  end;

  procedure ExcelPrint2(CopyBud:comp; FP:word; Nstr:word; Nstol:word; varnt : byte);
  begin
    Set cCopyBud:=CopyBud;
    Set cFP:= FP;

    var sm : double;
    sm := 0;

    //      _LOOP  fpSpAxtf
    _LOOP  fpV {
      if((month(fpP.dbeg)=month(fpP.dEnd)) and (year(fpP.dbeg)=year(fpperiod.dbeg) and (fpvalues.chashan = 0))) { //chek year
        if(Check=0) {
          sm := fpv.summa;
          //xlSetCellNumberValue(     , Nstr, Nstol + month(fpP.dbeg), Nstr, Nstol + month(fpP.dbeg));
        }else{
          sm := fpv.summa/1000;
          //xlSetCellNumberValue(fpv.summa/1000, Nstr, Nstol + month(fpP.dbeg), Nstr, Nstol + month(fpP.dbeg));
        }
        //xlSetCellNumberValue(sm, Nstr, Nstol + month(fpP.dbeg), Nstr, Nstol + month(fpP.dbeg));

        case varnt of
          Plan : update current f641_printed set sumvar1[month(fpP.dbeg)] := sm ;
          DopPlan : update current f641_printed set sumvar2[month(fpP.dbeg)] := sm ;
          Fact : update current f641_printed set sumvar3[month(fpP.dbeg)] := sm ;
          OjidPlan : update current f641_printed set sumvar4[month(fpP.dbeg)] := sm ;
        end


      }
      else{}
    }
  end;

  function CalcCurrentSumBDSGod (pNum : byte) : double;
  begin
    var i : byte;
    result := 0;
    for ( i := 1; i <=12; inc(i)){
      if (i < pnum) {
        // здесь - из факта
        result += f641_printed.sumvar3[i];
      } if (i = pnum) {
        // здесь - из ожидаемого факта
        result += f641_printed.sumvar4[i];
      } if (i = (pnum + 1)) {
        // из доп. потребности
        result += f641_printed.sumvar2[i];
      } else {
        // из доп. потребности
        result += if (f641_printed.sumvar2[i]>0,f641_printed.sumvar2[i], f641_printed.sumvar1[i] );
      }
    }
  end;

  function min (p1,p2 : double) : double;
  begin
    result := if (p1>p2,p2,p1);
  end;

  function d2s(v : double):String;
  begin
    result := DoubleToStr (v,   '\d,666666666667^899999999999');
  end;

  procedure doPrintReport;
  begin

    StoreDSK;
    var periodNum : byte;

    delete all f641_printed;

    //    message('Нажали на кнопку');
    pathUserOut := GetDefaultUserPath;
    NameExcel   := pathUserOut;
    wPeriod     := word(trim(NextNumStr(sPeriod)))-1;

    if (getFirst fpPeriod = tsOK){
      periodNum := month (fpPeriod.dBeg);

    } else {
      periodNum := 1;
    }

    xlCreateExcelWithTemplate(sPath,true);

    /*
    xlCreateExcel('',true);
    if (xlIsExcelValid)  {
      //         xlOpenWorkBook(translatepath('%startpath%')+'doc\Transport.xls');
      //         xlSetActiveWorkBookByName(translatepath('%startpath%')+'doc\Transport.xls');
      //         xlSaveAsWorkBookByName(translatepath('%startpath%')+'doc\Transport.xls', NameExcel+'.xls');

      xlOpenWorkBook(trim(sPath));
      xlSetActiveWorkBookByName(trim(sPath));
      xlSaveAsWorkBookByName(trim(sPath), NameExcel+'.xls');

    }
    */

    var dataSheetName : string;
    dataSheetName  := 'datas641';

    var reportSheetName : string;
    reportSheetName  := 'rep641';

    xlRunMacro('setDataSheetName('+dataSheetName+')');
    xlRunMacro('setReportSheetName('+reportSheetName+')');
    xlRunMacro('setRowToFill('+String (10)+')');

    xlSetActiveSheetByName(dataSheetName);
    //xlSetActiveSheet(1); //Титул_1
    if (getfirst fpPeriod = tsOK) {

      xlSetCellStringValue('' + year (fpPeriod.dbeg), 4, 2, 4, 2); //
    }

    if(Check=0) {
      xlSetCellStringValue('руб.', 4, 6, 4, 6); //
    } else {
      xlSetCellStringValue('тыс.руб.', 4, 6, 4, 6); //
    }


    //xlSetCellStringValue(month(fpperiod.dbeg), 1, 1, 1, 1); //
    //xlSetCellStringValue(year(fpperiod.dbeg), 1, 2, 1, 2); //

    var tt:word;
    tt:=0;
    var firstChar : String;
    firstChar := '''';
    //      SetOrder(tibyPrior);
    _LOOP  fpSpAxtf  {
      if(isValid(tnfpstbud)) { //chek year
        inc(tt);


        //xlSetCellStringValue(/*fpSpAxtf.levelCode*/fpSpAxtf.code, 1+tt, 1, 1+tt, 1); //
        /*
        xlSetCellStringValue(fpstbud.Name, 1+tt, 2, 1+tt, 2); //
        xlSetCellStringValue(kated.name, 1+tt, 51, 1+tt, 51);
        */

        insert f641_printed set f641_printed.cRec := fpSpAxtf.nRec ,
                                f641_printed.printedAtRow := repGetPrintRow - 1,
                                f641_printed.cNode  := fpSpAxtf.cNode,
                                f641_printed.code   := firstChar + trimFirst0 (fpstbud.levelcode),
                                f641_printed.name   := fpSpAxtf.name,
                                f641_printed.prior  := fpstbud.prior,
                                //f641_printed.extPar := extCl,
                                f641_printed.isLeaf := fpSpAxtf.isLeaf

                                ;

        ExcelPrint2(cPlan1,cReg1,1+tt,2,Plan);
        ExcelPrint2(cPlan2,cReg2,1+tt,14,DopPlan);
        ExcelPrint2(cFact,cReg3,1+tt,26,Fact);
        ExcelPrint2(cPlan3,cReg4,1+tt,38,OjidPlan);

        //xlSetCellStringValue(fpstbud.prior, 1+tt, 52, 1+tt, 52);
        //xlSetCellStringValue(/*fpSpAxtf.levelCode*/fpSpAxtf.code, 1+tt, 1, 1+tt, 1);
        //xlSetCellStringValue(fpstbud.levelcode, 1+tt, 53, 1+tt, 53);

        var i : byte;
        var oj  : double;

        oj := 0;

        For (i := 1; i<=12; inc(i)) {
          //oj += f641_printed.sumvar4[i];
          oj += f641_printed.sumvar1[i];
          /*
          if ( f641_printed.sumvar2[i] = 0 ) {
            update current f641_printed set f641_printed.sumvar2[i] := f641_printed.sumvar2[i];
          };
          */
        }
        update current f641_printed set f641_printed.Sumojid := oj; // 33 колонка

        var godSm : double ;

        godSm := CalcCurrentSumBDSGod (periodNum);
        update current f641_printed set f641_printed.SumBDSGod := godSm;  // 3 колонка

        if ( periodNum <=10) {
          if (( f641_printed.Sumojid - f641_printed.SumBDSGod) < 0 ){
            // обработаем отрицательную разницу
            if (f641_printed.prior  = 0 ){
              update current f641_printed set
              f641_printed.SumKorr[12]    := f641_printed.Sumojid - f641_printed.SumBDSGod,
              f641_printed.SumKorrStr[12] := '(' +
                                             d2s (f641_printed.Sumojid)+
                                              '-' +
                                             d2s (f641_printed.SumBDSGod) + ')'
                                             ;
            }
          } else {
            // положительная разница
              // таки обрабатываем положительную разницу
              update current f641_printed set
              f641_printed.SumKorr[periodNum+2]    := f641_printed.Sumojid - f641_printed.SumBDSGod,
              f641_printed.SumKorrStr[periodNum+2] := '('
                                                      + d2s (f641_printed.Sumojid)
                                                      + '-'
                                                      + d2s (f641_printed.SumBDSGod) + ')'
              ;
          }
        }

        var extCl : byte;

        extCl := 0;

        if ( fpSpAxtf.coTable = coFPSTBUD ) {
          extCl := GetStBudExtraParameters( coFPSTBUD , fpSpAxtf.CMEAN );
        }

        //собственно, печатаем в ексель.
        var dataRow : word;

        if ( extCl = 1 ) {
          // строка - разделитель
          dataRow := 15; // для ROW1
        } else if ( extCl = 0 ){
          // простая строка
          dataRow := 19; // для ROW0
        } else if ( extCl = 3 ){
          // строка - разделитель
          dataRow := 21; // для ROW3
        } else if ( extCl = 4 ){
          // строка - разделитель
          dataRow := 25; // для ROW4
        } else if ( extCl = 2 ){
          continue;
        }

        var sSum : String;
        sSum := '=0';

        xlSetCellStringValue(firstChar + trimFirst0 (fpstbud.levelcode), dataRow, 1, dataRow, 1);
        xlSetCellStringValue(fpSpAxtf.name, dataRow, 2, dataRow, 2); //

        if ((extCl = 0) or (extCl = 3) or (extCl = 4)) {
          xlSetCellNumberValue('''' + f641_printed.Sumojid , dataRow, 71 , dataRow, 71 );
          xlSetCellNumberValue('''' + f641_printed.SumBDSGod , dataRow, 72 , dataRow, 72 );
          for (i := 1; i<=12; inc(i)) {
            if (i < periodNum) {
              sSum += '+RC[' + ((i-1)*3 +1) + ']';

              // факт
              xlSetCellNumberValue(f641_printed.sumvar3[i] , dataRow, 3 + (i-1)*3 + 1 , dataRow, 3 + (i-1)* 3 + 1 );

            } else if (i = periodNum) {
              sSum += '+RC[' + ((i-1)*3 +1) + ']';
              // ожид. факт
              xlSetCellNumberValue(f641_printed.sumvar4[i] , dataRow, 3 + (i-1)*3 + 1 , dataRow, 3 + (i-1)* 3 + 1 );
            } else if (i > periodNum) {
              sSum += '+RC[' + ((i-1)*3 +3) + ']';
              // планы, доп. планы и корректировка. ???

              //xlSetCellNumberValue(min (f641_printed.sumvar1[i],f641_printed.sumvar2[i]) , dataRow, 3 + (i-1)*3 + 1 , dataRow, 3 + (i-1)* 3 + 1 );
              xlSetCellNumberValue(  f641_printed.sumvar1[i] ,
                                     dataRow,
                                     3 + (i-1)*3 + 1 ,
                                     dataRow,
                                     3 + (i-1)* 3 + 1
                                     );

              /*
              xlSetCellNumberValue( f641_printed.sumvar2[i] -
                                    min (f641_printed.sumvar1[i],f641_printed.sumvar3[i]) +
                                    f641_printed.SumKorr[i] ,
                                    dataRow, 3 + (i-1)*3 + 2 ,
                                    dataRow, 3 + (i-1)* 3 + 2
                                    ); */
              if ( (i = periodNum + 2) OR (i = 12)) {
                 xlSetCellFormula ( '=' + '' +
                                       d2s (if (f641_printed.sumvar2[i]>0,f641_printed.sumvar2[i],f641_printed.sumvar1[i])) +'-' +
                                       //d2s (f641_printed.sumvar2[i]) +'-' +
                                       d2s (f641_printed.sumvar1[i]) + '+' +
                                       if (f641_printed.SumKorr[i]<>0,f641_printed.SumKorrStr [i],'0') ,
                                       dataRow, 3 + (i-1)*3 + 2 ,
                                       dataRow, 3 + (i-1)* 3 + 2
                                       );
              } else if (i = (periodNum +1)) {
                 xlSetCellFormula ( '=' + '' +
                                       d2s (f641_printed.sumvar2[i]) +'-' +
                                       d2s (f641_printed.sumvar1[i]) + '+' +
                                       if (f641_printed.SumKorr[i]<>0,f641_printed.SumKorrStr [i],'0') ,
                                       dataRow, 3 + (i-1)*3 + 2 ,
                                       dataRow, 3 + (i-1)* 3 + 2
                                       );
              } else {
                 xlSetCellFormula ( '=' + '' +
                                       d2s (if (f641_printed.sumvar2[i]>0,f641_printed.sumvar2[i],f641_printed.sumvar1[i])) +'-' +
                                       d2s (f641_printed.sumvar1[i]) ,
                                       dataRow, 3 + (i-1)*3 + 2 ,
                                       dataRow, 3 + (i-1)* 3 + 2
                                       );
              }
            }
          }
          xlSetCellNumberValue(f641_printed.Sumojid , dataRow, 41 , dataRow, 41 );

          xlSetCellFormula(sSum,dataRow,3,dataRow,3);

          if (extCl = 0) {
            xlRunMacro('CopyRow(ROW0)');
          } else if (extCl = 3) {
            xlRunMacro('CopyRow(ROW3)');
          } else if (extCl = 4) {
            xlRunMacro('CopyRow(ROW4)');
          }

        } else if (extCl = 1) {
          xlRunMacro('CopyRow(ROW1)');
        }
      }    else{}
    }
    xlSetCellStringValue(Check, 1, 54, 1, 54);

    //      xlSetCellValue( sGetTune('INSNAME'), 23, 19, 23, 19); //Наименование Инспекции
    //      xlSetCellStringValue( MyOrg.Name, 28, 2, 28, 2);

    printSigners;
    printExecutor;

    xlSetActiveSheetByName(reportSheetName);

    DeleteColumns(periodNum);
    MarkColumns(periodNum);

    xlRunMacro('AfterPrint');

    xlKillExcel;
  end;


