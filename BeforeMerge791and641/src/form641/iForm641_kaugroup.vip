create view forKauGroup
var
  cRec    : comp;
as select *
from
  fpSpAxtf,
  fpSpAxtf fpSpAxtfSub
  where
  ((
  cRec                  == fpSpAxtf.nRec and
  fpSpAxtf.nrec         == fpSpAxtfSub.cNode (noindex)
  ))
;

function isKauGroup (const pRec : comp) : byte;
begin
  set forKauGroup.cRec := pRec;
  set isKauGroup := 0;

  if (forKauGroup.getFirst fpSpAxtf = tsOK ) {
    if (forKauGroup.fpSpAxtf.coTable = 0) {
      if (forKauGroup.getFirst fpSpAxtfSub = tsOK ) {
        set isKauGroup := 1;
      }
    }
  }
end;


create view forHandleGrouping
as
select *
  from  f641_printed prntd_mkgroup,
        f641_printed f641ptdesc (f641_ptd_cnode_desc),
        f641_printed f641ptdescsuper,

        f641_uniquenodes unds641,
        f641_printed     prtd641 (f641_ptd_node_prrow)

 where ((
 0                      == prntd_mkgroup.coTable and
 1                      == prntd_mkgroup.isKAUGroup and

 f641ptdesc.cnode        == f641ptdescsuper.cRec and

 unds641.crec            == prtd641.cNode

 ))
      ;

procedure updateIsMakeGroup();
begin
  forHandleGrouping._loop prntd_mkgroup {
    update f641_printed where (( forHandleGrouping.prntd_mkgroup.cnode == f641_printed.crec))
           set f641_printed.isMakeGroup := 1;
  }

end;
procedure calculateGroupBorders();
begin
  //

  delete all f641_uniquenodes;
  delete all f641_groupft;

  insert f641_uniquenodes (cRec)
  select cnode from f641_printed
  ignore_errors (tsDuplicateKey) ;

  insert f641_groupft (cRec) select cRec from f641_uniquenodes;

  var cr, fr,to  : comp;
  var fr_row,to_row : word;
  var isEditFr, isEditTo : boolean;

  do{
    if forHandleGrouping.getLast unds641 = tsOK do {
      isEditTo := false;
      isEditFr := false;
      cr       := 0;
      if forHandleGrouping.getLast prtd641 = tsOK then {
       if (getFirst f641_printed where (( forHandleGrouping.unds641.cRec == f641_printed.cRec )) = tsOK  ) then {
         cr := forHandleGrouping.unds641.cRec;
         if (f641_printed.groupTo < forHandleGrouping.prtd641.printedAtRow){
           //update f641_printed where ((forHandleGrouping.unds641.cRec == f641_printed.cRec )) set f641_printed.groupTo := forHandleGrouping.prtd641.cRec;
           //Message (f641_printed.groupTo);
           isEditTo := true;
           set to := forHandleGrouping.prtd641.cRec;
           set to_row := forHandleGrouping.prtd641.printedAtRow;
         }
       }
      }
      ;
      if forHandleGrouping.getFirst prtd641 = tsOK then {
       if (getFirst f641_printed where (( forHandleGrouping.unds641.cRec == f641_printed.cRec )) = tsOK  ) then {
         if (f641_printed.groupFrom > forHandleGrouping.prtd641.printedAtRow) or (f641_printed.groupFrom = 0){
           //update f641_printed where ((forHandleGrouping.unds641.cRec == f641_printed.cRec )) set f641_printed.groupFrom := forHandleGrouping.prtd641.cRec;
           isEditFr := true;
           set fr := forHandleGrouping.prtd641.cRec;
           set fr_row := forHandleGrouping.prtd641.printedAtRow;
         }
       }
      }
      ;
      update f641_printed where ((cr == f641_printed.cRec ))
             set f641_printed.groupFrom := if (isEditFr, fr , f641_printed.groupFrom),
                 f641_printed.groupTo := if (isEditTo, to , f641_printed.groupTo );

      update f641_groupft where ((cr == f641_groupft.cRec ))
               set f641_groupft.groupFromRec := if (isEditFr,fr, f641_groupft.groupFromRec),
                   //f641_groupft.cRec := cr,
                   f641_groupft.groupToRec := if (isEditTo,to,f641_groupft.groupToRec),
                   f641_groupft.groupFrom := if (isEditFr,fr_row,f641_groupft.groupFrom),
                   f641_groupft.groupTo := if (isEditTo,to_row,f641_groupft.groupTo)

      /*
      if (getFirst f641_groupft where (( cr == f641_groupft.crec)) <> tsOK) then {
        insert f641_groupft
               set f641_groupft.groupFromRec := fr,
                   f641_groupft.cRec := cr,
                   f641_groupft.groupToRec := to,
                   f641_groupft.groupFrom := fr_row,
                   f641_groupft.groupTo := to_row
                   ;
      };
      */
    } while (forHandleGrouping.getprev unds641 = tsOK);
  } while (isEditFr or isEditTo);
end;

procedure groupExcelDatas641( crct : integer);
begin
  //update f641_groupft set f641_groupft.Groupfrom := f641_groupft.Groupfrom + crct, f641_groupft.groupTo := f641_groupft.groupTo + crct;

  update f641_groupft where (( f641_groupft.cRec == f641_printed.cRec ))
         set f641_groupft.isMakeGroup := f641_printed.isMakeGroup;

  _loop f641_groupft where ((1 == f641_groupft.isMakeGroup)) {
    xlRunMacro('ActiveSheetGroupData('+String ( f641_groupft.groupFrom)+','+ String ( f641_groupft.groupTo) +')');
  }
end;

