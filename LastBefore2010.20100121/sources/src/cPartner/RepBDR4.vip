VipInterface RepBDR4   Licensed(Free);

#doc
Настройка фильтров для отчета График погашения обязательств
#end
Interface RepBDR4 'Установка фильтров' DoAccept, EscClose, Cyan;
  show at (5,5,90,25);
create view BDR
var
 cC,
 cPlan1,
 cPlan2,
 cPlan3,
 cFact,
 cPeriod, 
 cTForm,     
 cCopyBud,
 cFP :comp;
 sPath :string;
 pathUserOut : string;
 NameExcel   : string;
 wPeriod,mp,i  : word;
 isError: boolean;
 RadioB: byte;
 Check: integer;
As select
  if(cPeriod=0   ,'выберите значение',fpPeriod.Name)  (FieldName = sPeriod) 
, if(cTForm=0    ,'выберите значение',fpTForm.Name)   (FieldName = sTForm)
, if(cPlan1=0    ,'выберите значение',fpBudVar.Name)   (FieldName = sPlan1)   
, if(cPlan2=0    ,'выберите значение',fpBudVar1.Name)  (FieldName = sPlan2)
, if(cFact=0     ,'выберите значение',fpBudVar2.Name)  (FieldName = sFact)
, if(cPlan3=0    ,'выберите значение',fpBudVar3.Name)  (FieldName = sPlan3)    
, fpvalues.summa
From
  fpBudVar
 ,synonym  fpPeriod  fpP
 ,synonym  fpBudVar  fpBudVar1
 ,synonym  fpBudVar  fpBudVar2
 ,synonym  fpBudVar  fpBudVar3

 ,fpAxTF Axis1
 ,fpAxTF Axis2
 ,fpSpAxTF SpAxis1
 ,fpSpAxTF SpAxis2
 ,fpvalues
 ,Synonym fpBudVar fpBV
 ,Synonym fpValues fpV
 where
((
  // иерархия оси1
/*
       Axis1.NRec    == SpAxis1.cMain
  and  cParent1      == SpAxis1.cNode
  and  SpAxis1.cSloj == GrAn.NRec
  and  SpAxis1.KodGrKau  == KatKauAx1.KodGroup

  // иерархия оси2
  and  Axis2.NRec    == SpAxis2.cMain
  and  cParent2      == SpAxis2.cNode
  and  SpAxis2.KodGrKau  == KatKauAx2.KodGroup and
*/

cPeriod   == fpPeriod.nrec  and
cTForm    == fpTForm.nrec    and
cPlan1    == fpBudVar.nrec   and
cPlan2    == fpBudVar1.nrec  and
cFact     == fpBudVar2.nrec  and
cPlan3    == fpBudVar3.nrec
 

and fpBudVar.cBudget   == FpBudget.nrec
and fpTForm.nrec   == fpAxTF.cMain     //может быть несколько
and fpAxTF.NRec    == fpSpAxtf.cMain    
and fpSpAxtf.cMean == fpStBud.nrec    
and cCopyBud       == fpBV.nrec        
and fpBV.nrec      == fpV.cBudVar
and word(cFP)      == fpV.KodReg //план факт1
and fpStBud.nrec   == fpV.cStBud
and fpV.cPeriod    == fpP.nrec
and fpStBud.ced    == kated.nrec
))
//order byPrior by fpstbud.prior

;

//
procedure ExcelPrint(CopyBud:comp; FP:word; Nstr:word; Nstol:word);
begin
      Set cCopyBud:=CopyBud;
      Set cFP:= FP; 
//      _LOOP  fpSpAxtf
      _LOOP  fpV 
      {
        if((month(fpP.dbeg)=month(fpP.dEnd)) and (year(fpP.dbeg)=year(fpperiod.dbeg) and (fpvalues.chashan = 0))) //chek year
        {
	  if(Check=0)
	  {
	    xlSetCellNumberValue(fpv.summa     , Nstr, Nstol + month(fpP.dbeg), Nstr, Nstol + month(fpP.dbeg));
	  }
	  else
	  {
	    xlSetCellNumberValue(fpv.summa/1000, Nstr, Nstol + month(fpP.dbeg), Nstr, Nstol + month(fpP.dbeg));
	  }
        }
        else{}
      }	
end;

//определяет первый день текущего квартала

function FirstKvartalDay(D:date):date;
var Kvartal: byte;
begin 
	case Month(D) of
		1..3  : Kvartal:=1;
		4..6  : Kvartal:=2;
		7..9  : Kvartal:=3;
		10..12: Kvartal:=4;
	end;
	case Kvartal of
		1: FirstKvartalDay:=To_Date(1,1,Year(D));
		2: FirstKvartalDay:=To_Date(4,1,Year(D));
		3: FirstKvartalDay:=To_Date(7,1,Year(D));
		4: FirstKvartalDay:=To_Date(10,1,Year(D));
	end;
end;



Screen scKatH01 'Установка фильтров' (,, sci13Esc);
!  Table KatH;
Fields
  sTForm  ('',,) : Protect,PickButton,
    {Font = {BackColor = if (cTForm=0,    ColorNeed,0)}};
  sPeriod ('',,) : Protect,PickButton,
    {Font = {BackColor = if (cPeriod=0,   ColorNeed,0)}};
  sPlan1  ('',,) : Protect,PickButton,
    {Font = {BackColor = if (cPlan1=0,    ColorNeed,0)}};
  sPlan2  ('',,) : Protect,PickButton,
    {Font = {BackColor = if (cPlan2=0,    ColorNeed,0)}};
  sFact   ('',,) : Protect,PickButton,
    {Font = {BackColor = if (cFact =0,    ColorNeed,0)}};
  sPlan3  ('',,) : Protect,PickButton,
    {Font = {BackColor = if (cPlan3=0,    ColorNeed,0)}};
  sPath ('',,) : Protect,PickButton,
    {Font = {BackColor = if (sPath='',    ColorNeed,0)}};
  Check ('') :NoProtect;
	
buttons
cmApply;
cmCancel;
<<

 Типовая форма бюджета .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Месяц                 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


                           Варианты бюджета

 План                                           .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 План с учетом доп.потребности                  .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Факт                                           .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Вариант плана для заполнения колонки ожидаемое .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@	

 Путь к шаблону        .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

    `Печатать в`
     (.) руб`          
     (.) тыс.руб`                          

          <.Сформировать.>    <.  Отмена  .>
>>
end; // Screen
Handleevent
cmApply:
{
                                                              
//    message('Нажали на кнопку');
    pathUserOut := GetDefaultUserPath;
    NameExcel   := pathUserOut;
    wPeriod:=word(trim(NextNumStr(sPeriod)))-1;

    xlCreateExcel('',true);
      if (xlIsExcelValid)
      {
//         xlOpenWorkBook(translatepath('%startpath%')+'doc\Transport.xls');
//         xlSetActiveWorkBookByName(translatepath('%startpath%')+'doc\Transport.xls');
//         xlSaveAsWorkBookByName(translatepath('%startpath%')+'doc\Transport.xls', NameExcel+'.xls');

         xlOpenWorkBook(trim(sPath));
         xlSetActiveWorkBookByName(trim(sPath));
         xlSaveAsWorkBookByName(trim(sPath), NameExcel+'.xls');

      }

      xlSetActiveSheet(1); //Титул_1

      xlSetCellStringValue(month(fpperiod.dbeg), 1, 1, 1, 1); //
      xlSetCellStringValue(year(fpperiod.dbeg), 1, 2, 1, 2); //	
      var tt:word;
      tt:=0;
//      SetOrder(tibyPrior);
      _LOOP  fpSpAxtf 
      {
        if(isValid(tnfpstbud)) //chek year
        {
          inc(tt);
          xlSetCellStringValue(/*fpSpAxtf.levelCode*/fpSpAxtf.code, 1+tt, 1, 1+tt, 1); //
          xlSetCellStringValue(fpstbud.Name, 1+tt, 2, 1+tt, 2); //
          xlSetCellStringValue(kated.name, 1+tt, 51, 1+tt, 51);
          ExcelPrint(cPlan1,150,1+tt,2);
          ExcelPrint(cPlan2,150,1+tt,14);
          ExcelPrint(cFact,151,1+tt,26);
	  ExcelPrint(cPlan3,150,1+tt,38);
          xlSetCellStringValue(fpstbud.prior, 1+tt, 52, 1+tt, 52);
          xlSetCellStringValue(/*fpSpAxtf.levelCode*/fpSpAxtf.code, 1+tt, 1, 1+tt, 1);
	  xlSetCellStringValue(fpstbud.levelcode, 1+tt, 53, 1+tt, 53);                            
        }
        else{}
      }
	xlSetCellStringValue(Check, 1, 54, 1, 54);

//      xlSetCellValue( sGetTune('INSNAME'), 23, 19, 23, 19); //Наименование Инспекции
//      xlSetCellStringValue( MyOrg.Name, 28, 2, 28, 2);

      xlRunMacro('GalFpUser_AfterReport');
      xlKillExcel;

     SaveMyDsk(sPath,  '6dsksPath1');
     SaveMyDsk(cTForm, '6dsksPath2');
     SaveMyDsk(cPeriod,'6dsksPath3');										
     SaveMyDsk(cPlan1, '6dsksPath4');
     SaveMyDsk(cPlan2, '6dsksPath5');
     SaveMyDsk(cFact,  '6dsksPath6');
     SaveMyDsk(cPlan3, '6dsksPath7');

  PutCommand(cmClose);
}
cmPick:
  case curField of
//    #sPeriod : RunInterface('F_FpCatalog::getPeriod', cgiPick, comp(0), comp(0), cPeriod, cgSetFPTuneDefault) ;      //        if (RunInterface('getPeriod', cgiPick, GetCurFpTper, 0, PickedPer, cgSetFPTuneDefault) <> cmCancel)
//    #sCO     :  RunInterface('F_FpCatalog::GetCO',word(cgiPick),comp(0),comp(0),cCO);

/*    #sBudg,#sCO  : if( RunInterface('F_FpBudget::Budget', word(cgiPick), word(0), word(0), comp(0), cBudg, 0, 0)<> cmCancel)
                   { 
                     if(getfirst FpBudget=tsok){ 
                        SET cco:=FpBudget.CCO;
                     }
                   }
*/
//    #sBudg   :  RunInterface('F_FpCatalog::getvariant',word(cgiPick), comp(0), cBudg);
    #sPlan1    :  RunInterface('F_FpBudget::Budget', word(cgiPick), word(0), word(0), comp(0), cPlan1, 0, 0);
    #sPlan2    :  RunInterface('F_FpBudget::Budget', word(cgiPick), word(0), word(0), comp(0), cPlan2, 0, 0);
    #sPlan3    :  RunInterface('F_FpBudget::Budget', word(cgiPick), word(0), word(0), comp(0), cPlan3, 0, 0);
    #sFact     :  RunInterface('F_FpBudget::Budget', word(cgiPick), word(0), word(0), comp(0), cFact , 0, 0);
    #sTForm    :  RunInterface('F_FpBudget::getTForm', cgiPick, 0, cTForm);
    #sPeriod   :  RunInterface('F_FpCatalog::getPeriod', cgiPick, comp(0), comp(0), cPeriod, cgSetFPTuneDefault);

    #sPath     :
   {
        var sTmp : string;
            sTmp := GetFileName('*.XLS', 'Выберите файл с шаблоном');
        if (trim(sTmp) = '')
         { Exit; }
        Set sPath := sTmp;
    }

  end;  
!-------------------------------------------------------------------------------
cmDelOnProtect:
  case curField of
    #sPeriod   : Set cPeriod:=0;
    #sTForm    : Set cTForm:=0;
    #sPlan1    : Set cPlan1:=0;
    #sPlan2    : Set cPlan2:=0;
    #sPlan3    : Set cPlan3:=0;
    #sFact     : Set cFact:=0;
  end;

cmInit:
{
/* cPlan1:=0;
 cPlan2:=0;
 cFact:=0;
 cTForm:=0;
 cPeriod:=0;     
 sPath:='C:\8.1.XLS';*/
// wPeriod:=2008;

 if (not ReadMyDsk(sPath  ,'6dsksPath1',isError))  sPath := '';
 if (not ReadMyDsk(cPlan1 ,'6dsksPath4',isError))  cPlan1:=0; 
 if (not ReadMyDsk(cPlan2 ,'6dsksPath5',isError))  cPlan2:=0;
 if (not ReadMyDsk(cPlan3 ,'6dsksPath7',isError))  cPlan3:=0; 
 if (not ReadMyDsk(cFact  ,'6dsksPath6',isError))  cFact:=0;  
 if (not ReadMyDsk(cTForm ,'6dsksPath2',isError))  cTForm:=0; 
 if (not ReadMyDsk(cPeriod,'6dsksPath3',isError))  cPeriod:=0;
/*

  if (not ReadMyDsk(wSetFilt1,'dskSetFilt1',isError))  wsetFilt1 := 0;
  if (not ReadMyDsk(wSetFilt2,'dskSetFilt2',isError))  wsetFilt2 := 0;
  if (not ReadMyDsk(d1,'dsk_d1',isError))  d1 := Add_day(Sub_day(Cur_date,day(cur_Date)),1);
  if (not ReadMyDsk(d2,'dsk_d2',isError))  d2 := Add_day(Sub_day(Cur_date,day(cur_Date)),last_day(Cur_date));

*/
}

end;
end.
        