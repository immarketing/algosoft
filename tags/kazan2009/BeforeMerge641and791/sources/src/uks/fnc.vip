/* Определение уровня иерархии объекта строительства */
function get_vol(obj_link: comp): word;
var
  up_rec: comp;
begin
  result := 0;
  if (getfirst prg_tbl where ((obj_link == prg_tbl.nrec)) = tsOk) {
    up_rec := prg_tbl.cstroy;
    while (up_rec > 0) {
      if (getfirst prg_tbl where ((up_rec == prg_tbl.nrec)) <> tsOk) break;
      up_rec := prg_tbl.cstroy;
      result := result + 1;
    }
    if (rep_type = 0) and (prg_tbl.code <> '03') result := 0; // не ТПиР
    if (rep_type = 1) and (prg_tbl.code <> '02') result := 0; // не КР
  }
end;

/* Определение номера колонки */
function get_col(article: word): word;
begin
  if (article = 1) {
    result := 5; // мощность
  }
  else {
    result := article - 1;
    if (result > 3) result := 0; // расшифровка статей не нужна
    if ((rep_mode = 1) and (result = 1)) result := 0; // остаток для факта не нужен
  }
end;

/* Определение кода новой записи в obj_tbl */
function get_code(node_link: comp; volume: word): string;
var
  code_len, level: word;
  up_link: comp;
begin
  result := '01';
  level := volume;
  up_link := node_link;
  do {
    code_len := level * 2;
    if (getlast obj_tbl where ((up_link == obj_tbl.node)) = tsOk) {
      result := substr(obj_tbl.code, 1, code_len - 2)
                + lpadch(word(substr(obj_tbl.code, code_len - 1, 2)) + 1, '0', 2);
      break;
    }
    else {
      if (getfirst obj_tbl where ((up_link == obj_tbl.obj)) = tsOk) {
        result := obj_tbl.code;
        break;
      }
      else {
        if (getfirst plan_tree where ((up_link == plan_tree.nrec)) = tsOk) {
          up_link := plan_tree.cstroy;
          level := level - 1;
        }
      }
    }
  } while (level > 1);
  if (length(result) < volume * 2) do {
    result := result + '01';
  } while (length(result) < volume * 2);
end;

/* Запись данных во временную таблицу */
procedure write_tbl(
                      volume: word;
                      obj_link,
                      node_link: comp;
                      obj_name,
                      obj_abbr,
                      pwr_unit: string;
                      value: double
                      );
var
  col_no, per_no, i: word;
  new_val: double;
begin
  col_no := get_col(planvalue.iArticle);

  //update current myplanValue0 set myplanValue0.col_no_n := col_no;

  if (comp('01310000000199D9h') = planvalue.NRec ) {
    //Message ('! col_no == ' + col_no );
  }


  if (col_no > 0) and (fptper.edizm = 2) {
    per_no := month(fpPeriod.dBeg) - 1;
    if (rep_mode = 1) {
      per_no := 12;
      if (fpPeriod.Nrec = repPeriod.Nrec) per_no := 0;     // тек. месяц
      if (month(repPeriod.dBeg) > month(fpPeriod.dBeg)) {
        per_no := 2;                                       // тек. год
        if (fpPeriod.cNode = repPeriod.cNode) per_no := 1; // тек. квартал
      }
    }
    if (per_no > 11) exit;
    new_val := value;
    if (col_no < 5) new_val := new_val / koef;
    if (getfirst obj_tbl where ((obj_link == obj)) <> tsOk) {
      tmp := get_code(node_link, volume);
      insert obj_tbl set code = tmp, obj = obj_link, node = node_link, vol = volume,
        name = obj_name, abbr = obj_abbr, unit = locase(pwr_unit);
    }
    if (getfirst plan_tbl2 where ((obj_link == obj and col_no == col and per_no == per)) <> tsOk)
      insert plan_tbl2 set obj = obj_link, col = col_no, per = per_no;

    if (planValue.iRegister = word(cgPlan+cgUse))
      update current plan_tbl2 set plan_tbl2.plan_val = plan_tbl2.plan_val + new_val;

    if (planValue.iRegister = word(cgFact+cgUse))
      update current plan_tbl2 set plan_tbl2.fact_val = plan_tbl2.fact_val + new_val;

    if (rep_mode = 1) for (i := per_no + 1; i < 3; i := i + 1) {
      if (getfirst plan_tbl2 where ((obj_link == obj and col_no == col and i == per)) <> tsOk)
        insert plan_tbl2 set obj = obj_link, col = col_no, per = i;
      if (planValue.iRegister = word(cgPlan+cgUse))
        update current plan_tbl2 set plan_tbl2.plan_val = plan_tbl2.plan_val + new_val;
      if (planValue.iRegister = word(cgFact+cgUse))
        update current plan_tbl2 set plan_tbl2.fact_val = plan_tbl2.fact_val + new_val;
    }
  }
end;

/* Запись данных во временную таблицу - 2 (Для утвержденного плана) */
procedure write_tbl2(
                      volume: word;
                      obj_link,
                      node_link: comp;
                      obj_name,
                      obj_abbr,
                      pwr_unit: string;
                      value: double
                      );
var
  col_no, per_no, i: word;
  new_val: double;
begin
  col_no := get_col(planvalue2.iArticle); // номер колонки - не знаю, зачем. Если = 0, то вообще ничего не работает далее

  //update current myplanValue0 set myplanValue0.col_no_n := col_no;

  if (comp('013100000015ECE3h') = planvalue2.NRec ) {
    //Message ('col_no == ' + col_no );
  }


  if (col_no > 0) and
     (fptper2.edizm = 2) { // Если единица измерения месяц

    per_no := month(fpPeriod2.dBeg) - 1;
    if (rep_mode = 1) {
      per_no := 12;
      if (fpPeriod2.Nrec = repPeriod.Nrec) per_no := 0;     // тек. месяц
      if (month(repPeriod.dBeg) > month(fpPeriod2.dBeg)) {
        per_no := 2;                                       // тек. год
        if (fpPeriod2.cNode = repPeriod.cNode) per_no := 1; // тек. квартал
      }
    }

    if (per_no > 11) exit; // Период > 11 - это видимо какая то ошибка

    new_val := value;

    if (col_no < 5) new_val := new_val / koef; // че за хрень это номер колонки

    if (getfirst obj_tbl where ((obj_link == obj)) <> tsOk) { // уже есть такая запись в табличке
      tmp := get_code(node_link, volume);
      insert obj_tbl set  code = tmp,
                          obj = obj_link,
                          node = node_link,
                          vol = volume,
                          name = obj_name,
                          abbr = obj_abbr,
                          unit = locase(pwr_unit);
    }

    if (getfirst plan_tbl2 where ((obj_link == obj and col_no == col and per_no == per)) <> tsOk)
      insert plan_tbl2 set obj = obj_link, col = col_no, per = per_no;

    // Далее - запись значений в циферные поля
    if (planvalue2.iRegister = word(cgPlan+cgUse)) {
      /*
      if (comp('0131000000166C21h') = planvalue2.NRec ) {
        Message ('word(cgPlan+cgUse)');
      }
      */

      update current plan_tbl2 set plan_tbl2.plan_val2 = plan_tbl2.plan_val2 + new_val;
    }

    if (planvalue2.iRegister = word(cgFact+cgUse)) {
      /*
      if (comp('0131000000166C21h') = planvalue2.NRec ) {
        Message ('word(cgFact+cgUse)');
      }
      */

      update current plan_tbl2 set plan_tbl2.fact_val2 = plan_tbl2.fact_val2 + new_val;
    }

    if (rep_mode = 1) for (i := per_no + 1; i < 3; i := i + 1) {

      if (getfirst plan_tbl2 where ((obj_link == obj and col_no == col and i == per)) <> tsOk) {
        insert plan_tbl2 set obj = obj_link, col = col_no, per = i;
      }

      if (planvalue2.iRegister = word(cgPlan+cgUse)) {
        /*
        if (comp('0131000000166C21h') = planvalue2.NRec ) {
          Message ('2 - word(cgPlan+cgUse)');
        }
        */
        update current plan_tbl2 set plan_tbl2.plan_val2 = plan_tbl2.plan_val2 + new_val;
      }

      if (planvalue2.iRegister = word(cgFact+cgUse)) {
        /*
        if (comp('0131000000166C21h') = planvalue2.NRec ) {
          Message ('2 - word(cgFact+cgUse)');
        }
        */

        update current plan_tbl2 set plan_tbl2.fact_val2 = plan_tbl2.fact_val2 + new_val;
      }
    }
  }
end;


/* Просмотр спецификации плана */
procedure calc_plan;
var
  volume: word;
  up_rec: comp;
begin
  delete all plan_tbl2;
  delete all obj_tbl;

  startnewvisual(vtRotateVisual, vfTimer+vfBreak, '', 0);
  setvisualtitle('Обработка спецификации плана');
 _loop spplan { // цикл по спецификации плана
    // algo
    /*
    insert myspplan0 set myspplan0.stage := 1,  myspplan0.cSpPlan := spplan.nrec;
    */
    //algo
    if (not nextvisual) break;
    setvisualheader('Обрабатываю объект ''' + katstroy.code + '''...');
    up_rec := katstroy.cstroy;
    volume := get_vol(katstroy.nrec);         // уровень вложенности объекта строительства
    if (volume > 0) do {
      if (getfirst prg_tbl where ((up_rec == prg_tbl.nrec)) <> tsOk) break;
      volume := volume - 1;
//      if (volume < 4)
     _loop planvalue
        /*
        insert myplanValue0
           set myplanValue0.stage := 1,
               myplanValue0.cSpPlan := planvalue.crec,
               myplanValue0.iPrice := planvalue.iPrice ,
               myplanValue0.iArticle := planvalue.iArticle,
               myplanValue0.val  := planvalue.fValue,
               myplanValue0.plValNRec:= planvalue.nrec
               ;
        */
        if (planvalue.iPrice = price_mode + 1) or
           (planvalue.iArticle = 1) { // Мощность
          write_tbl(volume, prg_tbl.nrec, prg_tbl.cstroy, prg_tbl.name, prg_tbl.abbr, kated.abbr,
                    planvalue.fValue);
        }
      up_rec := prg_tbl.cstroy;
    } while (volume > 1);
  }

  /*
  _loop spplan2 { // цикл по спецификации плана второго плана
    // algo
    insert myspplan0 set myspplan0.stage := 2,  myspplan0.cSpPlan := spplan2.nrec;
    //algo
    if (not nextvisual) break;
    setvisualheader('Обрабатываю объект (стадия 2) ''' + katstroy2.code + '''...');
    up_rec := katstroy2.cstroy;
    volume := get_vol(katstroy2.nrec);         // уровень вложенности объекта строительства

    if (volume > 0) do {
      if (getfirst prg_tbl where ((up_rec == prg_tbl.nrec)) <> tsOk) break;
      volume := volume - 1;
     _loop planvalue2 {

        insert myplanValue0
           set myplanValue0.stage := 2,
               myplanValue0.cSpPlan := planvalue2.crec,
               myplanValue0.iPrice := planvalue2.iPrice ,
               myplanValue0.iArticle := planvalue2.iArticle,
               myplanValue0.val  := planvalue2.fValue,
               myplanValue0.plValNRec:= planvalue2.nrec
               ;

        //if ( comp('0131000000166C21h') = planvalue2.NRec ) {Message ('!!!! ' + planvalue2.fValue )};
        if (planvalue2.iPrice = price_mode + 1) or
           (planvalue2.iArticle = 1) { // Мощность
          write_tbl2(  volume,
                      prg_tbl.nrec,
                      prg_tbl.cstroy,
                      prg_tbl.name,
                      prg_tbl.abbr,
                      kated2.abbr,
                      planvalue2.fValue
                      );
        }
      }
      up_rec := prg_tbl.cstroy;
    } while (volume > 1);
  }
  */
  stopvisual('', 0);
end;

/* Работа с excel  */
function xl_init(template_name: string): boolean;
begin
  result := true;
  do {
    result := xlCreateExcelWithTemplate((template_name), true);
    result := xlIsExcelValid;
    result := xlSetActiveSheet(1);
    if (not result) break;
  } while false;
end;

function xl_done: boolean;
begin
  result := xlKillExcel;
end;

function fill_head: boolean;
begin
  tmp := 'Приложение ' + string(6 + rep_mode * 2) + '.' + string(15 + rep_type) + '.';
  result := xlSetCellStringValue(tmp, 1, 1, 1, 1);
  if (rep_mode = 0) {
    if (rep_type = 0) {
      tmp := 'План техперевооружения и реконструкции (без учета импорта) ОАО "СЗМН" на ';
      result := xlSetCellStringValue('ф. КП(ТПиР)-П(' + plPeriod.code + ')-2', 2, 1, 2, 1);
      result := xlSetCellStringValue('План ТПиР - ИТОГО', 7, 2, 7, 2);
    }
    else {
      tmp := 'План капитального ремонта (без учета импорта) ОАО "СЗМН" на ';
      result := xlSetCellStringValue('ф. КП(КР)-П(' + plPeriod.code + ')-2', 2, 1, 2, 1);
      result := xlSetCellStringValue('План КР - ИТОГО', 7, 2, 7, 2);
    }
    tmp := tmp + plPeriod.name;
  }
  else {
    if (rep_type = 0) {
      tmp := 'Отчет по плану техперевооружения и реконструкции (без учета импорта) ОАО "СЗМН" за ';
      result := xlSetCellStringValue('ф. КП(ТПиР)-П(' + plPeriod.code + ')-2', 2, 1, 2, 1);
      result := xlSetCellStringValue('ТПиР - ИТОГО', 7, 2, 7, 2);
    }
    else {
      tmp := 'Отчет по плану капитального ремонта (без учета импорта) ОАО "СЗМН" за ';
      result := xlSetCellStringValue('ф. КП(КР)-П(' + plPeriod.code + ')-2', 2, 1, 2, 1);
      result := xlSetCellStringValue('КР - ИТОГО', 7, 2, 7, 2);
    }
    tmp := tmp + locase(repPeriod.name);
  }
  result := xlSetCellStringValue(tmp, 3, 7, 3, 7);
  if (scale = 0) {
    unit := 'руб.';
  }
  else unit := 'тыс.руб.';
//  result := xlSetCellStringValue(unit, 7, 3, 7, 3);
end;

/* Заполнение формул в новой строке EXCEL */
procedure fill_formula(row_no: word);
var
  i, x: word;
begin
  if (rep_mode = 0) {
! за год
    xlSetCellFormula('=RC[4]', row_no, 4, row_no, 4);
    xlSetCellFormula('=СУММ(RC[16];RC[32];RC[48];RC[64])', row_no, 5, row_no, 5);
    xlSetCellFormula('=СУММ(RC[16];RC[32];RC[48];RC[64])', row_no, 6, row_no, 6);
    xlSetCellFormula('=RC[60]', row_no, 7, row_no, 7);
! по кварталам
    for (i := 0; i < 4; i := i + 1) {
      x := 16 * i + 11;
      xlSetCellFormula('=RC[-3]+RC[-2]-RC[-1]', row_no, x, row_no, x);
      xlSetCellFormula('=RC[-3]+RC[-2]-RC[-1]', row_no, x + 4, row_no, x + 4);
      xlSetCellFormula('=RC[-3]+RC[-2]-RC[-1]', row_no, x + 8, row_no, x + 8);
      xlSetCellFormula('=RC[-12]', row_no, x + 9, row_no, x + 9);
      xlSetCellFormula('=СУММ(RC[-12];RC[-8];RC[-4])', row_no, x + 10, row_no, x + 10);
      xlSetCellFormula('=СУММ(RC[-12];RC[-8];RC[-4])', row_no, x + 11, row_no, x + 11);
      xlSetCellFormula('=RC[-4]', row_no, x + 12, row_no, x + 12);
    }
  }
  else
    for (i := 1; i < 7; i := i + 1) {
      x := 6 * i;
      xlSetCellFormula('=RC[-1]-RC[-2]', row_no, x, row_no, x);
      xlSetCellFormula('=ЕСЛИ(RC[-3]<>0;RC[-2]/RC[-3];0)', row_no, x + 1, row_no, x + 1);
      x := x - 3;
      if (x > 14) xlSetCellFormula('=RC[1]-RC[-1]', row_no, x, row_no, x);
    }
end;

/* Добавление новой строки в EXCEL */
procedure add_string(row_no, type: word);
var
  i, x: word;
begin
  case type of
    xlObject: {
      tmp := unit;
      if (obj_tbl.vol > 1) {
        xlSetCellStringValue(obj_tbl.abbr, row_no, 1, row_no, 1);
        xlSetCellStringValue(obj_tbl.name, row_no, 2, row_no, 2);
        fill_formula(row_no);
      }
    }
    xlPower: {
      tmp := obj_tbl.unit;
    }
    xlTotal: {
      tmp := unit + '/ ' + tmp;
// Формула расчета удельной мощности
      if (rep_mode = 0)
        for (i := 0; i < 12; i := i + 1) {
          x := i div 3 + i;
          x :=  x * 4 + 9;
          xlSetCellFormula('=ЕСЛИ(R[-1]C > 0;R[-2]C/R[-1]C; 0)', row_no, x, row_no, x);
          xlSetCellFormula('=ЕСЛИ(R[-1]C > 0;R[-2]C/R[-1]C; 0)', row_no, x + 1, row_no, x + 1);
        }
      else
        for (i := 0; i < 6; i := i + 1) {
          x := 4 + 6 * i;
          xlSetCellFormula('=ЕСЛИ(R[-1]C > 0;R[-2]C/R[-1]C; 0)', row_no, x, row_no, x);
          xlSetCellFormula('=ЕСЛИ(R[-1]C > 0;R[-2]C/R[-1]C; 0)', row_no, x + 1, row_no, x + 1);
        }
    }
  end;
  xlSetCellStringValue(tmp, row_no, 3, row_no, 3);
end;

procedure xl_fill;
var
  x, y: longint;
  col_no: word;
  power_string: boolean;
begin
  if (getfirst obj_tbl <> tsOk) {
    message('Нет данных для формирования отчета', mfWarning + OkButton);
    exit;
  }
  if (not xl_init(xlt_file)) {
    xl_done;
    message('Не найден файл шаблона'+chr(13)+'"'+xlt_file+'"', mfWarning + OkButton);
    exit;
  }
  if (not fill_head) {
    message('Ошибка записи в excel-файл', mfWarning + OkButton);
    exit;
  }
  pushbounds(tb_by_obj);
  y := 6 + rep_mode;
  power_string := false;
  do {
    if not nextvisual break;
    if power_string {
      y := y + 1;
      add_string(y, xlTotal);
      power_string := false;
    }
    if (obj_tbl.vol = 2) continue; // Пропускаем папки с годами
    y := y + 1;
    add_string(y, xlObject);
   _loop plan_tbl2 {
      col_no := plan_tbl2.col;
      if (col_no = 5) {
        if (vol > 1) { // Пропускаем мощность для первого уровня
          col_no := 3; // Мощность пишем в ввод
          if not power_string {
            y := y + 1;
            add_string(y, xlPower);
            power_string := true;
          }
        }
        else continue;
      }
      if (rep_mode = 0) {
        x := plan_tbl2.per div 3 + plan_tbl2.per;
        x := x * 4 + col_no + 7;
        xlSetCellNumberValue(plan_tbl2.plan_val, y, x, y, x);
      }
      else {
        x := 4 + (col_no - 2) * 6 + plan_tbl2.per * 12;


        if (x > 14) xlSetCellNumberValue(plan_tbl2.base_val, y, x - 2, y, x - 2);
        xlSetCellNumberValue(plan_tbl2.plan_val, y, x, y, x);
        xlSetCellNumberValue(plan_tbl2.fact_val, y, x + 1, y, x + 1);

        if (x > 14) xlSetCellNumberValue(plan_tbl2.plan_val2 , y, x-2, y, x-2);  // algo
      }
    } // loop plan_tbl2
  } while (getnext obj_tbl = tsOk);
    if power_string {
      y := y + 1;
      add_string(y, xlTotal);
      power_string := false;
    }
  xl_done;
end;
