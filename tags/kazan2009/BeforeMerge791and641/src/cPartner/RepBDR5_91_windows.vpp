

tabbedSheet tabbed
Screen scKatH01 'Установка фильтров' (,, sci13Esc);
!  Table KatH;
Fields
  sTForm  ('',,) : Protect,PickButton,
    {Font = {BackColor = if (cTForm=0,    ColorNeed,0)}};
  sPeriod ('',,) : Protect,PickButton,
    {Font = {BackColor = if (cPeriod=0,   ColorNeed,0)}};
  sPlan   ('',,) : Protect,PickButton,
    {Font = {BackColor = if (cPlan =0,    ColorNeed,0)}};
  sPlanDop('',,) : Protect,PickButton,
    {Font = {BackColor = if (cPlanDop =0,    ColorNeed,0)}};
  sFact   ('',,) : Protect,PickButton,
    {Font = {BackColor = if (cFact =0,    ColorNeed,0)}};

!  sPersons ('Выбор сотрудников для подписи',,) : protect,pickbutton,
!    {Font = {BackColor = if (sPersons='выберите значение',    ColorNeed,0)}};

    sPodpGrp ('Выбор сотрудников для подписи',,) : protect,pickbutton,
      {Font = {BackColor = if ( not podpisanty.iSSelected ,    ColorNeed,0)}};

  sPath ('',,) : Protect,PickButton,
    {Font = {BackColor = if (sPath='',    ColorNeed,0)}};
  Check ('') :NoProtect;

buttons
cmApply;
cmCancel;
<<

 Типовая форма бюджета .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Месяц                 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


                           Варианты бюджета

 План                          .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 План с учетом доп. потр.      .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Факт                          .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Cотрудники для подписи        .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


 Путь к шаблону        .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

    `Печатать в`
     (.) руб`
     (.) тыс.руб`

          <.Сформировать.>    <.  Отмена  .>
>>
end; // Screen
  screen  sCheckdop 'Дополнительно';
  Fields


    extClName  ('',,) : NoProtect,noPickButton,
      {Font = {BackColor = if (extClName='',    ColorNeed,0)}};
    excCode1  ('',,) : NoProtect,noPickButton,
      {Font = {BackColor = if (excCode1='',    ColorNeed,0)}};
    excCode2 ('',,) : NoProtect,noPickButton,
      {Font = {BackColor = if (excCode2='',    ColorNeed,0)}};
    excCode3  ('',,) : NoProtect,noPickButton,
      {Font = {BackColor = if (excCode3='',    ColorNeed,0)}};


    extClNamePZap  ('',,) : NoProtect,noPickButton,
      {Font = {BackColor = if (extClNamePZap='',    ColorNeed,0)}};
    excCode4  ('',,) : NoProtect,noPickButton,
      {Font = {BackColor = if (excCode4='',    ColorNeed,0)}};

    excCode5  ('',,) : NoProtect,noPickButton,
      {Font = {BackColor = if (excCode5='',    ColorNeed,0)}};
    excCode6  ('',,) : NoProtect,noPickButton,
      {Font = {BackColor = if (excCode6='',    ColorNeed,0)}};

    isShowZeros  ('',,) : NoProtect,noPickButton;

    isShowTimeLabels  ('',,) : NoProtect,noPickButton;

    isDebugDatas  ('',,) : NoProtect,noPickButton;

    coTableToSum  ('',,) : NoProtect,noPickButton;
  <<

                 Название классификатора .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
             Код аналитики [РАЗДЕЛИТЕЛЬ] .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                   Код аналитики [ИТОГО] .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                 Код аналитики [Агрегат] .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


Название классификатора (поясн. записка) .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
             Код аналитики [Не печатать] .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

        Код аналитики [Начальное сальдо] .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
         Код аналитики [Конечное сальдо] .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

 [.] Печатать нулевые`   [.] Показывать время исполнения` [.] Тестовый объем данных`

           coTableToSum для суммировки   .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  >>
  end; // Screen sCheckdop 'Дополнительно'
end; // Screen

Window wnInfoWindow 'gg' ('gg', hcNoContext);
  Show at(,,,29);

  tabbedSheet tabbed
    Browse brf91_printed 'f91_printed' ('f91_printed', hcNoContext);
      //Show at(,1,,5);
      Table f91_printed;
    Fields
      f91_printed.nRec '.nRec':[10],protect;
      f91_printed.name '.name':[10],protect;
      f91_printed.crec '.crec':[10],protect;
      f91_printed.sum1[1]  '.sum1':[10],protect;
      f91_printed.sum1[2]  '.sum2':[10],protect;
      f91_printed.sum1[3]  '.sum3':[10],protect;
      f91_printed.sum2[1]  '.sum1':[10],protect;
      f91_printed.sum2[2]  '.sum2':[10],protect;
      f91_printed.sum2[3]  '.sum3':[10],protect;
      f91_printed.cnode '.cnode':[10],protect;
      f91_printed.printedAtRow '.printedAtRow':[10],protect;
      f91_printed.groupFrom '.groupFrom':[10],protect;
      f91_printed.groupTo '.groupTo':[10],protect;
      f91_printed.rowsToGroup '.rowsToGroup':[10],protect;
      //f91_printed.rowsToGroup '.rowsToGroup':[10],protect;
      //f91_printed.extPar '.extPar':[10],protect;
      //f91_printed.extPar1 '.extPar1':[10],protect;
      f91_printed.isKAUGroup '.isKAUGroup':[10],protect;
      f91_printed.isMakeGroup '.isMakeGroup':[10],protect;
    End; // Browse

    Browse brf91_groupft 'f91_groupft' ('f91_groupft', hcNoContext);
      //Show at(,1,,5);
      Table f91_groupft;
    Fields
      f91_groupft.crec '.crec':[10],protect;
      f91_groupft.Groupfrom '.Groupfrom':[10],protect;
      f91_groupft.groupTo '.groupTo':[10],protect;

      f91_groupft.GroupfromRec '.GroupfromRec':[10],protect;
      f91_groupft.groupTorec '.groupTorec':[10],protect;

      f91_groupft.isMakeGroup '.isMakeGroup':[10],protect;

    End; // Browse

    Browse brf91_uniquenodes 'f91_uniquenodes' ('f91_uniquenodes', hcNoContext);
      //Show at(,1,,5);
      Table f91_uniquenodes;
    Fields
      f91_uniquenodes.crec '.crec':[10],protect;
    End; // Browse

    Browse brfpzap_printed 'fpzap_printed' ('fpzap_printed', hcNoContext);
      //Show at(,1,,5);
      Table fpzap_printed;
    Fields
      fpzap_printed.nRec '.nRec':[10],protect;
      fpzap_printed.name '.name':[10],protect;
      fpzap_printed.crec '.crec':[10],protect;
      fpzap_printed.cnode '.cnode':[10],protect;
      fpzap_printed.sum[1]  '.sum1':[10],protect;
      fpzap_printed.sum[2]  '.sum2':[10],protect;
      fpzap_printed.sum[3]  '.sum3':[10],protect;
      fpzap_printed.printedAtRow '.printedAtRow':[10],protect;
      fpzap_printed.groupFrom '.groupFrom':[10],protect;
      fpzap_printed.groupTo '.groupTo':[10],protect;
      fpzap_printed.rowsToGroup '.rowsToGroup':[10],protect;
      //f91_printed.rowsToGroup '.rowsToGroup':[10],protect;
      //f91_printed.extPar '.extPar':[10],protect;
      //f91_printed.extPar1 '.extPar1':[10],protect;
      fpzap_printed.isKAUGroup '.isKAUGroup':[10],protect;
    End; // Browse
  end; // tabbedSheet tabbed

End; // Window
