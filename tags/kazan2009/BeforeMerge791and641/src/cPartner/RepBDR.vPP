VipInterface RepBDR   Licensed(Free);

#doc
Настройка фильтров для отчета График погашения обязательств
#end
Interface RepBDR 'Установка фильтров' DoAccept, EscClose, Cyan;
  show at (5,5,65,25);
create view BDR
var
 cPeriod, 
 cCO,     
 cBudg,   
 cBDR,    
 cNDS_BDR,
 cABDS,   
 cABDSF,  
 cPayBDS,
 cStBud :comp;
 sPath :string;
 pathUserOut : string;
 NameExcel   : string;
 wPeriod,mp,i  : word;
 isError: boolean;
As select
  if(cPeriod=0 ,'выберите значение',fpPeriod.Name)  (FieldName = sPeriod) 
, if(cCO=0     ,'задайте бюджет'   ,fpCO.name    )  (FieldName = sCO)     
, if(cBudg=0   ,'выберите значение',fpBudVar.Name)  (FieldName = sBudg)   
, if(cBDR=0    ,'выберите значение',fpStBud.Name )  (FieldName = sBDR)    
, if(cNDS_BDR=0,'выберите значение',fpStBud1.Name)  (FieldName = sNDS_BDR)
, if(cABDS=0   ,'выберите значение',fpStBud2.Name)  (FieldName = sABDS)   
, if(cABDSF=0  ,'выберите значение',fpStBud3.Name)  (FieldName = sABDSF)  
, if(cPayBDS=0 ,'выберите значение',fpStBud4.Name)  (FieldName = sPayBDS)
, fpvalues.summa
From
  fpCO
 ,fpBudVar
// ,fpPeriod
 ,fpStBud
 ,synonym  fpStBud  fpStBud1
 ,synonym  fpStBud  fpStBud2
 ,synonym  fpStBud  fpStBud3
 ,synonym  fpStBud  fpStBud4
 where
((
//cPeriod == fpPeriod.nrec and
//cCO     == fpCO.nrec     and
cBudg   == fpBudVar.nrec and

cBDR    == fpStBud.nrec  and
cNDS_BDR== fpStBud1.nrec and
cABDS   == fpStBud2.nrec and
cABDSF  == fpStBud3.nrec and
cPayBDS == fpStBud4.nrec 

and fpBudVar.cBudget   == FpBudget.nrec
and FpBudget.cco       == fpCO.nrec

and comp(cBudg)        == fpvalues.cbudvar  // = "вариант бюджета из фильтра" 
and word(150 )         == fpvalues.kodreg   // = 150 
and comp(cStBud)       == fpvalues.cstbud   //= "статья БДР из фильтра (nrec)" cBDR and cNDS_BDR 
and fpperiod.nrec      == fpvalues.cperiod  //=  
and FpBudget.cco       == fpvalues.cco(noindex)  //= "центр ответственности из фильтра" 
               
and comp(4)            == fpperiod.ctper      //= 4 
and date(1,mp,wPeriod) == fpperiod.dBeg
// cTPer + dBeg + dEnd

/*
and comp(cStBud)   == fpSpAxtf.cMean

and fpTForm.nrec   == fpAxTF.cMain     //может быть несколько
and fpAxTF.NRec    == fpSpAxtf.cMain    
and fpSpAxtf.cMean == fpStBud.nrec    
//and cPlanM         == fpBV.nrec


))

bounds Hash    =    nrecHash 
 == Hashan.cSloj
 == Hashan.cBlock
 == hashan.canalit[1](noindex)
            and  hashan.nrec == fpvalues.cHashan
;
/*
Select fpvalues.summa from fpvalues, fpperiod, hashan 
where 
fpvalues.cbudvar = "вариант бюджета из фильтра" and 
fpvalues.kodreg = 150 and 
fpvalues.cstbud = " статья бюджета соответствующая авансовым оплатам по БДС следующего года (nrec)" and 
fpvalues.cperiod = fpperiod .nrec and 
fpperiod .ctper = 4 and 
year(fpperiod.dend) = "год формирования отчета" and 
month(fpperiod.dend) = 1 and 
hashan.nrec = fpvalues.chashan and 
hashan.canalit[1] = "аналитика соотвентствующая месяцу из колонки";
*/

/*
Select fpvalues.summa 
from fpvalues, fpperiod, hashan 
where 
    fpvalues.cbudvar = "вариант бюджета из фильтра" 
and fpvalues.kodreg = 150 
and fpvalues.cstbud = статья бюджета соответствующая оплатам по факту БДС (nrec)" 
and fpvalues.cperiod = fpperiod .nrec 
and fpperiod .ctper = 4 
and year(fpperiod.dend) = "год формирования отчета" 
and month(fpperiod.dend) = 1 
and hashan.nrec = fpvalues.chashan 
and hashan.canalit[1] = 00CD0000000004D9h;


Для строк январь - февраль:
Select fpvalues.summa from fpvalues, fpperiod, hashan where fpvalues.cbudvar = "вариант бюджета из фильтра" and fpvalues.kodreg = 150 and fpvalues.cstbud = статья бюджета соответствующая оплатам по факту БДС (nrec)"       and fpvalues.cperiod = fpperiod .nrec and fpperiod .ctper = 4 and year(fpperiod.dend) = "год формирования отчета" and month(fpperiod.dend) = 1 and hashan.nrec = fpvalues.chashan and hashan.canalit[1] = "аналитика соотвентствующая месяцу из строки";
Для строк март - декабрь:
Select fpvalues.summa from fpvalues, fpperiod, hashan where fpvalues.cbudvar = "вариант бюджета из фильтра" and fpvalues.kodreg = 150 and fpvalues.cstbud = " статья бюджета соответствующая авансовым оплатам по БДС (nrec)" and fpvalues.cperiod = fpperiod .nrec and fpperiod .ctper = 4 and year(fpperiod.dend) = "год формирования отчета" and month(fpperiod.dend) = 1 and hashan.nrec = fpvalues.chashan and hashan.canalit[1] = "аналитика соотвентствующая 

*/
))
function ValFP(cB:comp;m:word;ch:comp;):double;
Begin
  ValFP:=0;
  Set cStBud:=cB;
  Set mp:=m;
  if(getfirst fpvalues=tsOk)
  {
   ValFP:=fpvalues.summa;
  }
end;



Screen scKatH01 'Установка фильтров' (,, sci13Esc);
!  Table KatH;
Fields
  wPeriod ('') : noProtect, // SpinButton [1, 2000, 3000],
    {Font = {BackColor = if (cPeriod=0, ColorNeed,0)}};
  sBudg ('',,) : Protect,PickButton,
    {Font = {BackColor = if (cBudg=0, ColorNeed,0)}};
  sCO ('',,) : Protect,
    {Font = {BackColor = if (cCO=0, ColorNeed,0)}};
  sBDR ('',,) : Protect,PickButton,
    {Font = {BackColor = if (cBDR=0, ColorNeed,0)}};
  sNDS_BDR ('',,) : Protect,PickButton,
    {Font = {BackColor = if (cNDS_BDR=0, ColorNeed,0)}};
  sABDS ('',,) : Protect,PickButton,
    {Font = {BackColor = if (cABDS=0, ColorNeed,0)}};
  sABDSF ('',,) : Protect,PickButton,
    {Font = {BackColor = if (cABDSF=0, ColorNeed,0)}};
  sPayBDS ('',,) : Protect,PickButton,
    {Font = {BackColor = if (cPayBDS=0, ColorNeed,0)}};
  sPath ('',,) : Protect,PickButton,
    {Font = {BackColor = if (sPath='', ColorNeed,0)}};

buttons
cmApply;
cmCancel;
<<

 Год формирования      .@@@@@@
 Вариант бюджета       .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Центр ответственности .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


             Соответствие статьей бюджета
 БДР                  .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 НДС для БДР          .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 авансы БДС           .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 авансы БДС буд. года .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 оплата по факту БДС  .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

 Путь к шаблону       .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

          <.Сформировать.>    <.  Отмена  .>
>>
end; // Screen
Handleevent
cmApply:
{

   message('Нажали на кнопку');
    pathUserOut := GetDefaultUserPath;
    NameExcel   := pathUserOut + 'ГПО_rep';

    xlCreateExcel('',true);
      if (xlIsExcelValid)
      {
//         xlOpenWorkBook(translatepath('%startpath%')+'doc\Transport.xls');
//         xlSetActiveWorkBookByName(translatepath('%startpath%')+'doc\Transport.xls');
//         xlSaveAsWorkBookByName(translatepath('%startpath%')+'doc\Transport.xls', NameExcel+'.xls');

         xlOpenWorkBook(trim(sPath));
         xlSetActiveWorkBookByName(trim(sPath));
         xlSaveAsWorkBookByName(trim(sPath), NameExcel+'.xls');

      }

/*

НДС

Select fpvalues.summa 
from fpvalues, fpperiod 
where 
    fpvalues.cbudvar = "вариант бюджета из фильтра" 
and fpvalues.kodreg = 150 
and fpvalues.cco = "центр ответственности из фильтра" 
and fpvalues.cstbud = "статья соответствующая НДС для БДР (nrec)" 
and fpvalues.cperiod = fpperiod .nrec 
and fpperiod .ctper = 4 
and year(fpperiod.dend) = "год формирования отчета" 
and month(fpperiod.dend) = "номер месяца соответствующий периоду в строке";

*/ 

      xlSetActiveSheet(1); //Титул_1

      xlSetCellStringValue( string(wPeriod)+'г.', 4, 12, 4, 12); //
      for( i:=1;i<13;i:=i+1)
      {
        xlSetCellNumberValue( ValFP(cBDR    ,i), 12+i, 4, 12+i, 4); //
        xlSetCellNumberValue( ValFP(cNDS_BDR,i), 12+i, 5, 12+i, 5); //
      }
//      xlSetCellValue( sGetTune('INSNAME'), 23, 19, 23, 19); //Наименование Инспекции
//      xlSetCellStringValue( MyOrg.Name, 28, 2, 28, 2);

//      xlRunMacro('PageNum'); //..пронумеруем страницы
      xlKillExcel;

     SaveMyDsk(sPath,'dsksPath');
/*
   SaveMyDsk(sPath,'dsksPath');
   SaveMyDsk(wSetFilt2,'dskSetFilt2');
   SaveMyDsk(d1,'dsk_d1') ;
   SaveMyDsk(d2,'dsk_d2') ;
 */
  PutCommand(cmClose);
}
cmPick:
  case curField of
//    #sPeriod : RunInterface('F_FpCatalog::getPeriod', cgiPick, comp(0), comp(0), cPeriod, cgSetFPTuneDefault) ;      //        if (RunInterface('getPeriod', cgiPick, GetCurFpTper, 0, PickedPer, cgSetFPTuneDefault) <> cmCancel)
//    #sCO     :  RunInterface('F_FpCatalog::GetCO',word(cgiPick),comp(0),comp(0),cCO);

    #sBudg,#sCO  : if( RunInterface('F_FpBudget::Budget', word(cgiPick), word(0), word(0), comp(0), cBudg, 0, 0)<> cmCancel)
                   { 
                     if(getfirst FpBudget=tsok){ 
                        SET cco:=FpBudget.CCO;
                     }
                   }
//    #sBudg   :  RunInterface('F_FpCatalog::getvariant',word(cgiPick), comp(0), cBudg);
    #sBDR    :  RunInterface('F_FpCatalog::getStBud', cgiPick,0, cBDR    ) ;
    #sNDS_BDR:  RunInterface('F_FpCatalog::getStBud', cgiPick,0, cNDS_BDR) ;
    #sABDS   :  RunInterface('F_FpCatalog::getStBud', cgiPick,0, cABDS   ) ;
    #sABDSF  :  RunInterface('F_FpCatalog::getStBud', cgiPick,0, cABDSF  ) ;
    #sPayBDS :  RunInterface('F_FpCatalog::getStBud', cgiPick,0, cPayBDS ) ;
    #sPath   :
   {
        var sTmp : string;
            sTmp := GetFileName('*.XLS', 'Выберите файл с шаблоном');
        if (trim(sTmp) = '')
         { Exit; }
        Set sPath := sTmp;
    }

  end;  
!-------------------------------------------------------------------------------
cmDelOnProtect:
  case curField of
//    #sPeriod  : Set cPeriod:=0;
//    #sCO      : Set cCO:=0;
    #sBudg,#sCO   : {Set cBudg:=0; Set cCO:=0;}
    #sBDR     : Set cBDR:=0;
    #sNDS_BDR : Set cNDS_BDR:=0;
    #sABDS    : Set cABDS:=0;
    #sABDSF   : Set cABDSF:=0;
    #sPayBDS  : Set cPayBDS:=0;
    #sPath    : Set sPath:='';
  end;

cmInit:
{
 cPeriod:=0; 
 cCO:=0;     
 cBudg:=0;   
 cBDR:=0;    
 cNDS_BDR:=0;
 cABDS:=0;   
 cABDSF:=0;  
 cPayBDS:=0; 
 sPath:='C:\ГПО.XLS';
 wPeriod:=2008;

 if (not ReadMyDsk(sPath,'dsksPath',isError))  sPath := '';
/*

  if (not ReadMyDsk(wSetFilt1,'dskSetFilt1',isError))  wsetFilt1 := 0;
  if (not ReadMyDsk(wSetFilt2,'dskSetFilt2',isError))  wsetFilt2 := 0;
  if (not ReadMyDsk(d1,'dsk_d1',isError))  d1 := Add_day(Sub_day(Cur_date,day(cur_Date)),1);
  if (not ReadMyDsk(d2,'dsk_d2',isError))  d2 := Add_day(Sub_day(Cur_date,day(cur_Date)),last_day(Cur_date));

*/
}

end;
end.

