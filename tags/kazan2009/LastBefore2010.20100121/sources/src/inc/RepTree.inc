//------------------------------------------------------------------------------
//                                                      (c) Корпорация ГАЛАКТИКА
//------------------------------------------------------------------------------
// Галактика - Ядро
// Константы построителя иерархических отчетов
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// !!! Внимание !!!, это файл подключается в Паскале и Випе.
// Не используйте здесь макрокомпилятор (Define и т.п.)
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Контстанты из TrConst.vpp
  TablesInGrouping = 10;  // Максимальное количество уровней группировки
  SumsOnLevel      = 60;  // Максимальное количество сумм на уровне

  // [R]eport[S]tyle
  rsNodeReport     = 1;   // Если этот флаг установлен то все уровни являются
                          // подсиненными некому общему уровню, ИТОГО ПО ОТЧЕТУ
  rsShowStat       = 2;   // После формирования отчета сформировать статистику
                          // в файле TreeRep.log
  rsNoSortTempIer  = 4;   // Не производить сортировку TempIer при формировании
                          // отчета. Если установлен, надо будет самостоятельно
                          // вызвать MakeSortsInTempIer

  // Свойства уровней группировки
  tsKauLevel       = 1;   // Указывает на то что, уровень является аналитикой в
                          // проводке (только для бухгалтерии)
  tsNoExpand       = 2;   // Если установлен принуждает НЕ раскрывать иерархию
                          // по иерархическому справочнику, а вести себя так
                          // как будто справочник неиерархический
  tsNoPrefix       = 4;   // Если установлен, то НЕ добавляет префикс к
                          // наименованию группы
  tsSwitchTable    = 8;   // Таблица по которой происходит группировка является
                          // переключаемой (может меняться в зависимости от
                          // содержания записи) - таблица не открывается и не
                          // закрывается в объекте TTreeRep и TRepTree
  tsMayBeSkip      = 16;  // Уровень должен быть пропущен при некоторых условиях
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Константы в основном для Интерактивного отчета по данным проводок и сальдо

  cgRepNumGroups = 20; // число различных групп для бухгалтерского отчета

  cgGrpSch       =  1; // Счет
  cgGrpSub       =  2; // Субсчет
  cgGrpKau1      =  3; // Аналитика 1
  cgGrpKau2      =  4; // Аналитика 2
  cgGrpKau3      =  5; // Аналитика 3
  cgGrpPodr      =  6; // Подразделение
  cgGrpSchKor    =  7; // Счет корреспондирующий
  cgGrpSubKor    =  8; // Субсчет корреспондирующий
  cgGrpFilial    =  9; // Филиал                                   Не рабочий ?!
  cgGrpKlVal     = 10; // Валюта
  cgGrpKau4      = 11; // Аналитика 4
  cgGrpKau5      = 12; // Аналитика 5
  cgGrpKau6      = 13; // Аналитика 6
  cgGrpKauK1     = 14; // Аналитика корр. счета 1
  cgGrpKauK2     = 15; //                   -*- 2
  cgGrpKauK3     = 16; //                   -*- 3
  cgGrpKauK4     = 17; //                   -*- 4
  cgGrpKauK5     = 18; //                   -*- 5
  cgGrpKauK6     = 19; //                   -*- 6
  cgGrpPodrK     = 20; // Подразделение корр. счета

  // типы группировок для интерактивного аналитического отчета
  cgTreeGroupNoGroup =  0;  // несгруппированные данные
  cgTreeGroupSchetO  =  1;  // счет основной
  cgTreeGroupSubSchO =  2;  // субсчет основной
  cgTreeGroupKau1O   =  3;  // аналитика 1 основного счета
  cgTreeGroupKau2O   =  4;  // аналитика 2 основного счета
  cgTreeGroupKau3O   =  5;  // аналитика 3 основного счета
  cgTreeGroupKau4O   =  6;  // аналитика 4 основного счета
  cgTreeGroupKau5O   =  7;  // аналитика 5 основного счета
  cgTreeGroupKau6O   =  8;  // аналитика 6 основного счета
  cgTreeGroupPodrO   =  9;  // подразделение основного счета
  cgTreeGroupSchetK  = 10;  // счет корреспондирующий
  cgTreeGroupSubSchK = 11;  // субсчет корреспондирующий
  cgTreeGroupKau1K   = 12;  // аналитика 1 корреспондирующего счета
  cgTreeGroupKau2K   = 13;  // аналитика 2 корреспондирующего счета
  cgTreeGroupKau3K   = 14;  // аналитика 3 корреспондирующего счета
  cgTreeGroupKau4K   = 15;  // аналитика 4 корреспондирующего счета
  cgTreeGroupKau5K   = 16;  // аналитика 5 корреспондирующего счета
  cgTreeGroupKau6K   = 17;  // аналитика 6 корреспондирующего счета
  cgTreeGroupPodrK   = 18;  // подразделение корреспондирующего счета
  cgTreeGroupValut   = 19;  // валюта
  cgTreeGroupDescr   = 20;  // дескриптор пользователя
  cgTreeGroupDoc     = 21;  // документ
//cgTreeGroupYear    = 22;  // период - год
//cgTreeGroupQuarter = 23;  // период - квартал
//cgTreeGroupMonth   = 24;  // период - месяц
//cgTreeGroupDay     = 25;  // период - день
  cgTreeGroupPeriod  = 26;  // период (с настраиваемой детализацией)
  cgTreeGroupObType  = 27;  // тип проводки (ручная/автоматическая)
  cgTreeGroupFilial  = 28;  // филиал
  cgTreeGroupTiDk    = 29;  // тип документа

  cgTreeGroupTotal   = 65000; // Итого по отчету (не должно пересекаться с кодами аналитик)

  // суммы для TempDescr.Sum[]
  cgSumNdeDebet  =  1; // дебет
  cgSumDocDebet  =  2; // дебет в баз.валюте
  cgSumRepDebet  =  3; // дебет в вал.отчетов

  cgSumNdeCredt  =  4; // кредит
  cgSumDocCredt  =  5; // кредит в баз.валюте
  cgSumRepCredt  =  6; // кредит в вал.отчетов

  cgSumSVhNdeDb  =  7; // сальдо входящее дебет
  cgSumSVhDocDb  =  8; //
  cgSumSVhRepDb  =  9; //

  cgSumSVhNdeKr  = 10; // сальдо входящее кредит
  cgSumSVhDocKr  = 11; //
  cgSumSVhRepKr  = 12; //

  cgSumSIshNdeDb = 13; // сальдо исходящее дебет
  cgSumSIshDocDb = 14; //
  cgSumSIshRepDb = 15; //

  cgSumSIshNdeKr = 16; // сальдо исходящее кредит
  cgSumSIshDocKr = 17; //
  cgSumSIshRepKr = 18; //

                       // количество:
  cgSumSVhKolDb  = 19; //   сальдо входящее дебет
  cgSumSVhKolKr  = 20; //   сальдо входящее кредит
  cgSumKolDebet  = 21; //   обороты дебет
  cgSumKolCredt  = 22; //   обороты кредит
  cgSumSIshKolDb = 23; //   сальдо исходящее дебет
  cgSumSIshKolKr = 24; //   сальдо исходящее кредит

  // TempDescr.Param - битовая маска
                        // старое наименование
  cgNodeUsual     = 0;  // cgParUsualKau      обычный узел
  cgNodeLastApKau = 1;  // cgParLastApKau     последнее КАУ по А-П счету
  cgNodeNotLastAp = 2;  // cgParOpndKau       не последнее КАУ по А-П счету (развернутое КАУ)
  cgNodeRolled    = 4;  // cgParNotDef        свернутое сальдо (обычно на последнем уровне КАУ по А-П счету)
  cgNodeSpecial   = 8;  //                    уровень построен по описательной иерархии
                        //                      (напр. coKatOrgDescr) - особенная свертка

  coBuhSchetSub  =  61502; // Используется в CheckIer.vpp, RepTree.pas, TreeRep.pass

  // сохранение отчета при выходе (поле fNeedSaveRep в treerep.pas)
  cgRepSave_Yes  =  1; // да
  cgRepSave_No   =  2; // нет
  cgRepSave_Req  =  3; // по запросу

  // сообщения
  cgRepMes_Save   = 'Сохранить отчет для последующего просмотра ?';
  cgRepMes_NoData = 'Нет данных для отображения!';
//------------------------------------------------------------------------------
