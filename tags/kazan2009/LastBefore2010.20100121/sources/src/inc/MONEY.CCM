cmAdd                =     12101;
cmAllIns             =     12102;
cmAllNar             =     12103;
cmAllSum             =     12104;
cmAllUnIns           =     12105;
cmALTF9              =     12106;
cmAttach             =     12107;
cmBrNar              =     12108;
cmByKassir           =     12109;
cmByList             =     12110;
cmChWin              =     12111;
cmConnect            =     12112;
cmConnection         =     12113;
cmCtrlT              =     12114;
cmDELKEY             =     12115;
cmDetach             =     12116;
cmDisconnect         =     12117;
cmDoBound            =     12118;
cmDoKlndr            =     12119;
cmDotable            =     12120;
cmDoTable1           =     12121;
cmDoTable2           =     12122;
cmEditForm           =     12123;
cmF2KEY              =     12124;
cmF3keY              =     12125;
cmF4KEY              =     12126;
cmF6KEY              =     12127;
cmF7KEY              =     12128;
cmF9KEY              =     12129;
cmFillAndPrint       =     12130;
cmINar               =     12131;
cmINSKEY             =     12132;
cmINSKEY2            =     12133;
cmLoadPickMy         =     12134;
cmL_tabn             =     12135;
cmMessage            =     12136;
cmOptions            =     12137;
cmOt                 =     12138;
cmPrintBaseGround    =     12139;
cmPrint              =     12140;
cmPrintBase          =     12141;
cmCtrlP              =     12142;
cmCtrlF2             =     12143;
cmCtrlF3             =     12144;
cmPrintKlndr         =     12145;
cmRas                =     12146;
cmSetDefaultPrinter  =     12147;
cmShiftf1            =     12148;
cmShiftf5            =     12149;
cmSHIFTF6            =     12150;
cmSHIFTF7            =     12151;
cmSHIFTF9            =     12152;
cmTuneUp             =     12153;
cmAltB               =     12154;
cmSavePick           =     12155;
cmSavePickMy         =     12156;
cmLoadPick           =     12157;
cmCtrlC              =     12158;
// cmMarkRec            =     12159;
cmBrigadeDutyImportExport= 12160;
cmBrigadeDutyDistribution= 12161;
scEufam2             =     12162;
scEufam3             =     12163;

cmBrigadeDutyImport  =     12164;
cmControlForm        =     12165;
cmFinalForm          =     12166;
cmBrigadeDutyCalc    =     12167;

cmRoutingControlForm =     12168;
cmRoutingCalc        =     12169;
cmRoutingFinalForm   =     12170;

cmFormAdvance        =     12171;

cmDutyAddPayments    =     12172;
cmWorkAddPayments    =     12173;
cmDutyInformation    =     12174;
cmPrintNalFOT        =     12175;
cmPrintVidOpl        =     12176;
cmKillDistributed    =     12177;
cmGroupingCard       =     12178;

cmShowNodesWithData  =     12179;
cmViewFixedAdditionalPayments = 12180;

cmPrintWorkingTable  =     12181;

cmViewAdvance         =    12182;

cmAlt1              =    12183;
cmAlt2              =    12184;
cmAlt3              =    12185;
cmAlt4              =    12186;
cmAlt5              =    12187;
cmAlt6              =    12188;
cmAlt7              =    12189;
cmAlt8              =    12190;
cmAlt9              =    12191;

cmTableChanged      =    12192;
cmFixedRetentions   =    12193;
cmProcessAddPayments=    12194;

cmAlt0              =    12195;

cmvalue21           =    12201;
cmvalue22           =    12202;
cmvalue23           =    12203;
cmvalue24           =    12204;
cmvalue25           =    12205;
cmvalue26           =    12206;
cmvalue27           =    12207;
cmvalue28           =    12208;
cmvalue29           =    12209;
cmvalue30           =    12210;
cmvalue31           =    12211;
cmvalue32           =    12212;
cmvalue33           =    12213;
cmvalue34           =    12214;
cmCurrentDepartmentChanged = 12215;
cmCurrentAccountsChanged   = 12216;
cmDuplicate         =    12217;
cmvalue35           =    12218;
cmvalue36           =    12219;
cmvalue37           =    12220;
cmSet_Hide =             12221;
cmRefresh           =    12222;

cmEnteringSalaryModule = 12223;
cmReceptionIsOpen   =    12225;
cmFormarksChanged   =    12226;
cmvalue38           =    12224;

cmvalue39           =    12227;
cmvalue40           =    12228;
cmvalue41           =    12229;
cmvalue42           =    12230;
cmvalue43           =    12231;
cmvalue44           =    12232;
cmvalue45           =    12233;
cmvalue46           =    12234;
cmvalue47           =    12235;
cmvalue48           =    12236;
cmvalue49           =    12237;
cmvalue50           =    12238;
cmvalue51           =    12239;
cmvalue52           =    12240;
cmvalue53           =    12241;
cmvalue54           =    12242;
cmvalue55           =    12243;
cmvalue56           =    12244;
cmvalue57           =    12245;
cmvalue58           =    12246;
cmvalue59           =    12247;
cmvalue60           =    12248;
cmvalue61           =    12249;
cmLoadWorkingTableTunes = 12250;
cmEnteringStaffModule   = 12251;
cmEnteringZarpModule	= 12252;

_cLSchet             =     0;
cBoln                =     1;
_cOtpusk             =    2;
cVOtpusk             =     3;
cBrig                =     4;
cKlOtpusk            =     5;
cAddPayments         =     557;
cPrVidOpl            =     900;
cPrVidOpl1           =     901;
cPrVidOpl2           =     902;
cPrVidOpl3           =     903;
cReestr              =     904;
cBasket              =     905;
cRKO                 =     1000;
cViplat              =     1001;
cSysMBF              =     1003;
cPlatMeg             =     1004;
cBrigadeMember       =     1005;
cSysUder             =     1006;
cSysDog              =     1007;
cEmployeeOnDuty      =     1008;
cEmployeeToMove      =     1009;
cByWorker            =     1010;
cRates               =     1011;
cDogViplat           =     1012;
cLSchet1             =     1100;
cOtpArx              =     2002;
cDepartment          =     2003;
cOtpFuture           =     2004;
cMegFuture           =     2005;
cArchiveSickLists    =     2006;
cWorkingTable        =     2007;
cFixedAddPayment     =     2008;
cFixedRetention      =     2009;
cPerexodTable        =     2010;
cAccountChange       =     2011;
cAllCexNmb           =     2012;
cAllTabnNmb          =     2013;
cPlanOtpusk          =     2014;
cFactOtpusk          =     2015;
cDetPlanOtpusk       =     2016;
cKadrySickLists      =     3001;
cKadryDisNotes       =     3002;
// Константа идентифицирующая переменную, хранящую количество лицевых счетов в FORMARKS
cNumberOfSelectedLschetCache = 3003;


// бригадный наряд
cBrigadeJobSheet          =     2017;
// индивидуальный наряд
cIndividualJobSheet       =     2018;
// индивидуальный наряд с учетом КТУ
cIndividualJobSheetVsMPF  =     2019;
// дневная зарплата с учетом КТУ
cDailyWagesVsMPF          =     2020;

//------------------------------------------------------------------------------
// [j]ob [s]heet types
// типы нарядов (SYS_NAR.CHOICE)
//------------------------------------------------------------------------------
// бригадный наряд
jsBrigade                       = 1;
// индивидуальный наряд
jsIndividual                    = 2;
// индивидуальный наряд с учетом КТУ
jsIndividualVsMPF               = 3;
// дневная зарплата с учетом КТУ
jsDailyWages                    = 4;
// расчет сделки по объектам
jsAggregative                   = 5;

jsFuturePeriodDelta             = 100;
// бригадный наряд (будущий период)
jsFuturePeriodBrigade           = 101;
// индивидуальный наряд (будущий период)
jsFuturePeriodIndividual        = 102;
// индивидуальный наряд с учетом КТУ (будущий период)
jsFuturePeriodIndividualVsMPF   = 103;
// расчет сделки по объектам (будущий период)
jsFuturePeriodAggregative       = 105;

jsArchivePeriodDelta            = 200;
// бригадный наряд (архивный период)
jsArchivePeriodBrigade          = 201;
// индивидуальный наряд (архивный период)
jsArchivePeriodIndividual       = 202;
// индивидуальный наряд с учетом КТУ (архивный период)
jsArchivePeriodIndividualVsMPF  = 203;
// расчет сделки по объектам (архивный период)
jsArchivePeriodAggregative      = 205;

cPostPer             =     1;
cParamTXO            =     2;
cStaffPsn            =     555;
cStaffStr            =     556;
cBrigadeDuty         =     1;

//------------------------------------------------------------------------------
//флаги интерфейсов просмотра и выбора объектов (лицевых счетов, работников
//бригад, нарядов и пр.)
//------------------------------------------------------------------------------
vfDistributed             = 1;
vfCalculated              = 2;
vfBrigadeDuty             = 4;
vfRouting                 = 8;

//возможен вызов интерфейса редактирования объектов
vfCanEditObjects          = 1;
//возможен вызов интерфейса редактирования групп
vfCanEditGroups           = 2;
//пометка возможна только в одной группе
vfSingleGroupSelection    = 8;
//пометить всё и свернуться
vfSilentlySelectAll       = 16;
//выбор дозволен
vfCanSelect               = 32;
//множественный выбор объектов
vfMultipleSelection       = 96;
vfKeepMarks               = 128;
//просматривать объекты в привязке к подразделениям
vfViewByDepartment        = 256;
//просматривать объекты в привязке к бригадам
vfViewByBrigade           = 512;
//просматривать объекты в привязке к группам работников
vfViewByGroup             = 1024;
//просматривать объекты в привязке к чему угодно (среди возможных вариантов)
vfViewByWhatever          = 1792;

//типы доплат (на работу/персональная/на наряд)
//зарезервирован диапазон  0..999
//------------------------------------------------------------------------------
apSMNARYAD  = 0;
apPRNARYAD  = 1;
apSYS_NAR   = 2;
apBRWORK    = 3;

//------------------------------------------------------------------------------
// [u]p [f]actor type
// типы повышающих коэффициентов(на работу/на операцию)
// зарезервирован диапазон 1000..1999
//------------------------------------------------------------------------------
ufFACTOR_WORK  = 1000;
ufFACTOR_OPER  = 1001;

//------------------------------------------------------------------------------
// [s]ubordinate [a]dditional [p]ayments
// Виды доплат по подчиненности
// зарезервирован диапазон 2000..2999
//------------------------------------------------------------------------------
sapKLREJIM = 2000;

TimePrecision         = 3;

dfAccountingFromAccount = 0;
dfAccountingByPaymentKind = 1;
dfSetupAccounting = 2;

dfTakeFace = 31;
dfStandardTimeFromFace = 1;
dfTariffFromFace = 2;
dfQuantityFromFace = 4;
dfActualHoursFromFace = 8;
dfAccountingFromFace = 16;

dfTakeBrigadeShift = 5;
dfTakeBrigade = 3;
dfKTUFromBrigade = 1;
dfPremiumPercentFromBrigade = 2;

dfCostAssignDeptSrcShift = dfTakeBrigadeShift + 4;
dfCostAssignDeptSrc = 3;
dfCostAssignDeptFromDuty = 0;
dfCostAssignDeptFromAccount = 1;
dfSetupCostAssignDept = 2;
dfCostAssignDeptFromBrigade = 3;

// учитывать переходы в межпериод
dfProcessChanges = 4096;
// учитывать лицевую сторону
dfProcessJobList = 8192;

erUnsuccessful    = -1;
erInterrupted     = -2;

//------------------------------------------------------------------------------
// [s]chedule [t]ype
//------------------------------------------------------------------------------
// данные из маски ручной корректировки
stMask = -3;
// нормальный график (для расчета нормы времени при нормализации рабочих
// часов/дней или суммированном учете сверхурочных)
stStandard  = -2;
// балансный график
stBalanced  = -1;
// плановый график
stPlanned   = 0;
// фактический табель
stActual    = 1;

//------------------------------------------------------------------------------
// [h]ours [k]ind
//------------------------------------------------------------------------------
// рабочие часы
hkWorking                 = 1;
// часы работы вечером
hkEvening                 = 2;
// часы работы ночью
hkNight                   = 3;
// часы работы в праздничные дни
hkHoliday                 = 4;
// часы работы в выходные
hkWeekend                 = 5;
// сверхурочные
hkOverwork                = 6;
// остаток сверхурочных
hkOverworkRest            = 7;
// рабочие часы с точки зрения расчета по среднему
hkWorkingForAvgEarnings   = 10;
// часы, за которые можно выплатить аванс
// (рабочие часы в день, считающийся по плану рабочим, плюс часы
// приходящегося на такой день оплачиваемого отклонения)
hkAdvanceable             = 11;
// оплачиваемые часы
// (рабочие часы плюс часы приходящегося на день оплачиваемого отклонения)
hkPaid                    = 12;
// переработка за период
hkOverworkForPeriod       = 14;
// рабочие часы, переходящие на следующие сутки
hkCarry                   = 17;
// средняя продолжительность рабочего дня, часов
hkWorkDayAvgTime          = 20;
// все отработанные часы (без учета настроек "рабочие часы за вычетом...")
hkWholeWorking            = 21;
// часы работы в рабочий по плану праздник
hkWorkingHoliday          = 22;
// часы работы в нерабочий по плану праздник
hkWeekendHoliday          = 23;
// часы отсутствия по уважительной причине
hkAbsenceForValidReason   = 24;
// часы явки
hkAppearance              = 25;
// часы уменьшающих норму неявок
hkDecreasingStandardTime  = 26;
// часы работы во вредных условиях
hkHarmfulConditions       = 27;
// часы работы в праздник сверх плана
hkOverPlannedHoliday      = 28;

//------------------------------------------------------------------------------
// [d]ay [k]ind
//------------------------------------------------------------------------------
dkSpecial               = 1;
// день, считающийся рабочим по закону (зависит от настроек)
dkWorking               = 2;
// праздничный день
dkHoliday               = 3;
// выходной
dkWeekEnd               = 4;
//
dkOverWork              = 5;
dkOverworkRest          = 6;
// дни работы вечером
dkEvening               = 7;
// дни работы ночью
dkNight                 = 8;
dkWorkingForAvgEarnings = 10;
// день, за который можно выплатить аванс
// (рабочий день по плану и либо рабочий день по факту, либо день,
// на который пришлось оплачиваемое отклонение)
dkAdvanceable           = 11;
// оплачиваемый день
// (рабочий день, либо день, на который пришлось оплачиваемое отклонение)
dkPaid                  = 12;
// работа в праздничный день
dkWorkingHoliday        = 13;
// работа в выходной день
dkWorkingWeekend        = 14;
// все отработанные дни (без учета настроек "рабочие часы за вычетом...")
dkWholeWorking          = 15;
// дни явки
dkAppearance            = 16;
// выходной (нерабочий) праздник
dkWeekendHoliday        = 17;
// не отброшенный фильтром день
dkEnabled               = 18;
// дни работы во вредных условиях
dkHarmfulConditions     = 19;
// календарные дни работы
dkCalendarWorking       = 20;

//------------------------------------------------------------------------------
// [c]ontrol [f]lags
//------------------------------------------------------------------------------
// без учета фильтров
cfDisregardFilters      = 128;
// без учета дат приема на работу/увольнения
cfDisregardPeriod       = 64;
cfAllFlags              = 224;

coWorkingHoursMask  = 1;
coEveningHoursMask  = 2;
coNightHoursMask    = 4;
coDiscountHoliday   = 8;
coDiscountWeekEnd   = 16;
// не считать день работой сверхурочно
coDiscountOverwork  = 32;
// маска праздничных часов
coHolidayHoursMask  = 64;
//------------------------------------------------------------------------------
// [a]bsence [t]ype
// типы неявок
//------------------------------------------------------------------------------
// системные
atSystem = 0;
// за месяц
atMonthly = 1;

//------------------------------------------------------------------------------
// [a]bsence [a]ttributes
// атрибуты неявки
//------------------------------------------------------------------------------
// условное обозначение неявки: string
aaMark          = 1;
// дата начала неявки: date;
aaBeginning     = 2;
// дата окончания неявки: date
aaEnding        = 3;
// кол-во дней неявки: byte
aaDays          = 4;
// кол-во часов неявки: double
aaHours         = 5;
// описание неявки: string
aaDescription   = 6;
// код вида оплаты: word
aaPaymentCode   = 7;
// nrec записи-источника: comp
aaSourceRecord  = 8;
// nrec условного обозначения: comp
aaNotation      = 9;
// вид неявки: word (см. akXXXX-константы)
aaKind          = 10;
// карта распределения часов неявки: longint (PContainer); устарело
aaHoursMap      = 11;
// карта распределения дней неявки: longint (PContainer); устарело
aaDayMap        = 12;
// неявка не отнимает, а добавляет часы": boolean
aaAdditive      = 13;
// в классификаторе условных обозначений стоит входимость в расчет рабочего
// времени при выборе ограничения пособия: boolean
aaWorkTime      = 14;
// код для обозначения дней месяца в стандартных формах Т-12, Т-13: string
aaStandardCode  = 15;
// код для вывода информации о неявках в печатных формах табеля: string
aaAbsenceCode   = 16;
// входит в расчет среднесписочной численности: boolean
aaPayrollAvgNum = 17;
// код вида пособия или вида отпуска
aaCode          = 18;
// код группы условного обозначения: longint
aaGroupCode     = 19;
// признак явки: boolean;
aaAppearance    = 20;

//------------------------------------------------------------------------------
MaxVarianceCount = 10;  // устарело
// мифическая константа, максимальное значение количества времени,
// воспринимаемое в качестве отработанного - величИны, превышающие ее, имеют
// особый смысл
MaxWorkingHours  = 100;

//------------------------------------------------------------------------------
// [w]orking [t]able [a]ttribute
//------------------------------------------------------------------------------
wtaChange      = 1;
wtaDepartment  = 2;

ByCurrency   = 906;
UkrCurrency  = 980;
RuCurrency   = 810;

//------------------------------------------------------------------------------
//константы для табеля учета рабочего времени
//------------------------------------------------------------------------------
WeekEndMark               = 'В';
DefaultSickMark           = 'Б';
DefaultVacationMark       = 'О';
SickSpecialValue          = 255;
VacationSpecialValue      = 254;
FiredSpecialValue         = 253;
BusinessTripSpecialValue  = 252;

//250 - внутренний код

//------------------------------------------------------------------------------
// [r]esource [i]dentifiers
// идентификаторы хранящихся в ресурсе настроек и параметров
//------------------------------------------------------------------------------
//способ формирования планового аванса
riAdvanceFormingMethod =      'Avans_Z23';
riAdvancePercent =            'Avans_PrProc';
riAdvanceSum =                'Avans_PrSum';
riReformAdvancePercent =      'Расчет аванса: переформировывать процент';
riAdvanceAlternativeView =    'Аванс: альтернативный вид';
riAdvanceTreeView =           'Advance_TreeView';
riAdvanceDeptFilterOptions =  'Advance_DeptFilterOptions';
riGetPodAlnTreeView =         'GetPodAln_TreeView';
riGetPodalnCurOrder =         'GetPodAln_CurOrder';
riWorkingTableEnhancedTimeFormat = 'Табель: улучшенный формат времени';
riTimeTableEnhancedTimeFormat = 'График: улучшенный формат времени';
riTimeTableTemplateType =     'График: тип шаблона';
riTimeTableDefaultHours =     'График: часы по умолчанию_';
//------------------------------------------------------------------------------
// интерфейс PICK
riPickDepartmentHier = 'PICK: иерархия подразделений';
riDefaultPickCode = 'PICK: код по умолчанию';
riDefaultPickTab = 'PICK: закладка по умолчанию';
riDefaultPickGroup = 'PICK: група объектов по умолчанию';

//------------------------------------------------------------------------------
riLastCurrentDepartment = 'CurLSchet_OldCex';
riCurrentDepartmentList = 'CurrentDepartments';

//------------------------------------------------------------------------------
// управляющие флаги обхода дерева подразделений
// department [i]teration [f]lags
//------------------------------------------------------------------------------
// игнорировать значение настройки "Использовать разграничение прав доступа к
// подразделениям"
ifIgnoreUserRights    = 1;
// построить выгрузку для построения плоского списка подразделений
ifTreatAsPlainList    = 2;
// учитывать права доступа к подразделениям, вне зависомости от значения настройки
// "Использовать разграничение прав доступа к подразделениям"
ifForceUserRights     = 4;
// всегда показывать склады, вне зависимости от значения настройки "Показывать склады"
ifForceShowWarehouses = 8;

//------------------------------------------------------------------------------
// [i]gnore [f]lags
//------------------------------------------------------------------------------
//ifNone    = 0;
//ifFilter  = 1;
//ifChanges = 2;
//ifUseless = 4;

//------------------------------------------------------------------------------
// [c]heck [f]lags
//------------------------------------------------------------------------------
cfNone        = 0;
cfFilter      = 1;
cfChanges     = 2;
cfUselessDays = 4;
cfEverything  = cfFilter + cfChanges + cfUselessDays;

//------------------------------------------------------------------------------
// [a]ttribute [p]refix
//------------------------------------------------------------------------------
apEveningHours      = 'Вечерние';
apNightHours        = 'Ночные';
apHolidayHours      = 'Праздничные';
apWeekendHours      = 'Выходные';
apOverworkHours     = 'Сверхурочные';
apOverworkHoursRest = 'Сверхурочные (остаток)';

//------------------------------------------------------------------------------
// [a]ttribute [s]uffix
//------------------------------------------------------------------------------
asPaymentKind =     'ВидОплаты';
asPercent =         'Процент';
asTotalHours =      'Итого часов за период';

//------------------------------------------------------------------------------
// [v]ariance [k]ind
// вид отклонения
//------------------------------------------------------------------------------
// замена
vkChange        = 0;
// уменьшение
vkDecrease      = 1;
// увеличение
vkIncrease      = 2;
// нарушение режима
vkIrregularity  = 3;
// уточнение (не влияет на количество отработанного времени)
vkRefinement   = 4;

//------------------------------------------------------------------------------
// [a]bsence [k]ind
//------------------------------------------------------------------------------
akNone            = 0;
// командировка
akBusinessTrip    = 32;
// отзыв из отпуска (системная неявка)
akVacationRecall  = 64;
// выполнение гособязанностей
akDuty            = 128;
// больничный (системная неявка)
akSickList        = 256;
// отпуск (системная неявка)
akVacation        = 512;
// выходной день (на самом деле - буква "В" в табеле, даже не настоящий выходной)
akWeekendMark     = 768;
// прочая неявка (получается из отклонений от табеля учета рабочего времени)
akTableAbsence    = 1024;
// нарушение режима
akIrregularity    = 2048;
// уточнение (не влияет на количество отработанного времени)
akRefinement     = 4096;

//------------------------------------------------------------------------------
//                                                                  ВХОДИМОСТИ
//------------------------------------------------------------------------------
// [e]ntering [g]roups (0..255)
// группы входимостей
//------------------------------------------------------------------------------
egCalculations = 0;       // группа "Входимость в расчеты"
egReports = 1;            // группа "Входимость в отчеты"
egbl = 2;                 // группа "Входимость по среднему"

//------------------------------------------------------------------------------
// [p]ayment [e]nterings (1..255)
// входимости оплаты ("коды входимостей")
// полный номер входимости =
//   word(<группа входимостей>) shl 8 + <входимость оплаты>
//------------------------------------------------------------------------------
// расчеты
peOkladAndSumNaRuk      = 1;   // Оплата входит в формирование оклада и суммы на руки
peFormSeparate          = 2;   // Оплата формируется отдельной записью
peLgotGodSumRasESN      = 3;   // Льготируется годовая сумма при расчете ЕСН
// больничные (10..25)
// будут считываться в память при расчете зарплаты 10-50
peAvgCalculationsFirst  = 9;  // фиктивная входимость для обозначения начала диапазона входимостей в расчеты по среднему
peListNet1              = 10; // Месяц берется в расчет при учете годовых премий
peListNet2              = 11; // При расчете больничного доплата пересчитывается по часам
peListNet3              = 12; // Месяц берется в расчет при выборе ограничения
peListNet4              = 13; // Добавляется к плановому времени для пересчета премий в отпусках
peListNet5              = 14; // Добавляется к плановому времени для пересчета премий в больничных
peOtpusk1               = 15; // меняет фактическое время для пересчета премий в отпусках
peListNet6              = 16; // меняет фактическое время для пересчета премий в больничных
peOtpusk2               = 17; // период (количество месяцев), за который выплачена премия
peListNet7              = 18; // влияет на перерасчет разовых выплат
peListNet8              = 19; // нерабочий период
peAvgCalculationsLast   = 26; // фиктивная входимость для обозначения конца диапазона входимостей в расчеты по среднему

//предварительная разноска (29..35)
peZeroKoldn             = 29; // Вставлять оплату с нулевым кол.часов
peUchrab                = 30; // Перерасчет за прошлый месяц
peUchrabb               = 31; //Учитывается при сторнировании больничного
peUchrabo               = 32; //Учитывается при сторнировании отпуска
peUchrabTarif           = 33; //При автомат.пересчете оклад(тариф)
peUchrabz               = 34; //При отнесении суммы не учитывать временные переходы
peUchocr                = 36; //Cводить по округлениям
pematp                  = 37; //Формировать необлагаемую часть матпомощи отдельной записью
pe42_45                 = 45; //Количество дней для алгоритмов 42_45 формировать из входящих оплат
pe46                    = 46; //Входимость в 46-алгоритм
//...
peVxodMonFZ             = 47; //Входит в ФОТ для ФЗ и ФСС с противоположным значением настройки учета месяца
peTimeForN              = 49; // Не проставлять часы из межпериода
peActualTimeForPayment  = 51; // При корректировке выплаты в межпериод брать время по табелю
peShareCosts            = 52; // Разбивать по затратным счетам

peLongServiceHoursForPS = 60; //Входит в расчет часов по выслуге лет для пенсионного стажа

peFixAfterProbation     = 70; //Назначается по истечении испытательного срока

// отчеты
peFormT13       = 1;  // Входит в графы 7-12 формы Т-13
peFormF201Kaz   = 2;  // В форме для казахстана в графе Доходы, не подлежащие налогообложению
peNalReg        = 3;  // Входит в регистр расходов по оплате труда и в ФОТ для расчета налога на прибыль
peFormZUM       = 4;  // Входит в базу для расчета премии для отчета Расчет премии по стимулированию
peFormF60001Kaz = 5;  // В форме 600.01
peFormF60002Kaz = 6;  // В форме 600.02
peFormF60003Kaz = 7;  // В форме 600.03
peFormF10018Kaz = 8;  // В форме 100.18
peFormFSS4      = 9;  // В форме FSS-4
peNalReg1       = 10; // Входит в регистр расходов по оплате труда в котором начислено, за который начислено
peFormFSS4_8    = 11; // В форме FSS-4 таблица 8
peFormFSS4_11   = 12; // В форме FSS-4 таблица 11
peFormFSS4_9    = 13; // В форме FSS-4 таблица 9
peBankSpr       = 14; // В справке для предоставления кредита
peFormESN       = 16;  // Для строк 7хх РАП и Декл. ЕСН
peDoxdivident   = 17;  // Для дивидентов
peMatVigoda     = 18;  // Для матвыгоды на приобретение жилья
//константы 19-22 зарезервированы для отчетов по ЕСН, Таня, не занимай их, пожалуйста
//pe...         = 19;  //Отчеты по ЕСН
//pe...         = 20;  //Отчеты по ЕСН
//pe...         = 21;  //Отчеты по ЕСН
//pe...         = 22;  //Отчеты по ЕСН
peFormN57T_Tarif = 23; //Тарифные для статистической формы N57-T Россия
peFormN57T_Rai   = 24; //Районные для статистической формы N57-T Россия

// для Приложения 7 (РБ) с 26 по 33
peBonusUv = 26;        //Премия уволенным работникам, облагаемая по ставке 20% (для Приложения 7)
peSocV = 27;           //Социальные налоговые вычеты (РБ, Приложение 7)
peImuV = 28;           //Имущественные налоговые вычеты (РБ, Приложение 7)
// = 29;
// = 30;
// = 31;
// = 32;
// = 33;
//
//--------------------------------------------------------------------------------
//                                                            ВЫПЛАТЫ МЕЖПЕРИОДА
//--------------------------------------------------------------------------------
// [p]ayment [c]odes
// текущий период - < 80
// будущий период - >= 80

// выплаты текущего периода и проч.
pcCharge              = 0;  // выплаты текущего периода
pcDeduction           = 1;  // удержания
pcAgreement           = 2;  // договоры подряда
pcPremium             = 4;  // премия с учетом КТУ
pcSalary              = 5;  // зарплата с учетом КТУ
pcWayBill             = 6;  // путевые листы
pcSumPaidOutReturn    = 7;  // возврат подотчетных сумм
pcCurrentVacation     = 8;  // матпомощь к текущему отпуску
pcWelfare             = 9;  // матпомощь в межпериод
pcImported            = 10; // импортированные суммы
pcArchiveVacation     = 11; // матпомощь к архивному отпуску
pcInverceSalary       = 17; // зарплата от обратного
pcCostSharing         = 18; // распределение затрат
pcOverDraft           = 19; // превышение норм командировочных расходов


pcFuturePeriodDelimiter = 80; // разделитель для определения выплат текущего и будущего периодов

// выплаты будущего периода и проч.
pcSys_Dog_Future        = 88; // договора подряда будущего периода
pcSys_Uder_Future       = 89; // удержания будущего периода
pcOveralls              = 90; // спецодежда
pcIncomeTax             = 97; // подоходный налог с прошлого места работы
pcPastYearIncome        = 98; // доход, перенесенный с прошлого года
pcFuturePeriodCharge    = 99; // выплаты будущего периода
pcFutureVacation        = 112;  // матпомощь к будущему отпуску

pcCostsAssignmentCodes  = 200; // коды отнесения затрат
pcAccountingAlternation = 201; // настройки замены ШПЗ
pcCostsSharingTemplates = 202; // шаблоны настроек распределения затрат

RasPlatCol = 61;

//------------------------------------------------------------------------------
// [m]essage [f]lags
//------------------------------------------------------------------------------
mfText = 16;
mfNote = 17;
mfTextWithIndent = 18;

//------------------------------------------------------------------------------
// [a]ccounting [s]ource
//------------------------------------------------------------------------------
asPersonalAccount = 0;
asPayKindClassifier = 1;
//------------------------------------------------------------------------------
// Константы аналогичные паскалевским  : количество удержаний, начислений
//  и т.д. .....
//------------------------------------------------------------------------------
  zKolOplat     =  320; // количество видов оплат
  zKolUd        =  230; // количество видов удержаний

//------------------------------------------------------------------------------
// [p]eriod [f]lags
//------------------------------------------------------------------------------
pfInWhichCalculated   = 0; // в котором начислено
pfForWhichCalculated  = 1; // за который начислено
pfInWhichPaidOut      = 2; // в котором выплачено
//------------------------------------------------------------------------------
// признак источника сведений для предварительной разноски
// [p]redistribution [s]ource
//------------------------------------------------------------------------------
// основной вид оплаты
psBasicPayment                = 1;
// постоянная доплата
psPermanentAdditionalPayment  = 2;
// больничный лист
psSickList                    = 3;
// отпуск
psVacation                    = 4;
// отклонение
psVariance                    = 5;
// часы из табеля (вечерние, ночные и т.д.)
psWorkingTableHours           = 6;
// пособие на детей
psChildAllowance              = 7;

//------------------------------------------------------------------------------
// Константы для работы с объектом ObjAddressFunc AdrFunc.vih
//------------------------------------------------------------------------------

cgAddrFld_Name       = 0;
cgAddrFld_Code       = 1;
cgAddrFld_Full_Code  = 2;

cgAddrElement_Index      = 0; // Индекс
cgAddrElement_Country    = 1; // Страна
cgAddrElement_Region     = 2; // Регион
cgAddrElement_Rayon      = 3; // Район
cgAddrElement_City       = 4; // Город
cgAddrElement_Settlement = 5; // Населенный пункт
cgAddrElement_Street     = 6; // Улица
cgAddrElement_House      = 7; // Дом
cgAddrElement_Corps      = 8; // Корпус
cgAddrElement_Flat       = 9; // Квартира

cgAtdNRec                = 0; // NRec АТД
cgAtdName                = 1; // Название АТД
cgAtdCode                = 2; // Код АТД
cgAtdSocrTypeName        = 3; // Сокращенное название типа элемента АТД
cgAtdFullTypeName        = 4; // Полное название типа элемента АТД
cgAtdGniCode             = 5; // Код ГНИ для АТД

//------------------------------------------------------------------------------
//[h]oliday [t]ype constants
//------------------------------------------------------------------------------
htNone            = 0;
htHoliday         = 1; // праздник
htMovedSaturday   = 2; // перенесенная суббота (для календарных отпусков по 5-дневке)
htWorking         = 3; // рабочий день (воскресенье или суббота) (для календарных отпусков)
htMovedSunday     = 4; // перенесенное воскресенье (для календарных отпусков по 5- и 6-дневке)

//----------------------------------------------------------------------------
//  [c]atalogs [e]lements
//----------------------------------------------------------------------------
ceGeneralServ      = 61; // общий трудовой стаж
ceSpecialityServ   = 63; // стаж работы по специальности
ceNorthernService  = 64; // северный стаж

//----------------------------------------------------------------------------
//  [xr]eference [t]ype
//----------------------------------------------------------------------------
// перекрестные ссылки лицевых счетов
xrtPersonalAccounts = 0;
// связи "пользователь - текущие подразделения"
xrtCurrentDepartments = 1;
// связи для фильтра из перечня приказов "пользователь - выбранные подразделения"
xrtPrikaz_DepartFilter = 3;

//------------------------------------------------------------------------------
// [c]hange [t]ype
// тип перехода в межпериод
//------------------------------------------------------------------------------
ctPermanent         = 0; // постоянный
ctTemporary         = 1; // временный
ctArchivePermanent  = 3; // архивный постоянный
ctArchiveTemporary  = 4; // архивный временный

//----------------------------------------------------------------------------
//  [f]lags [m]odify basket
//----------------------------------------------------------------------------
// константы для флагов модификации рабочей корзины
fmbLschDepartmentMod = 0;
fmbLschTabNmbMod     = 1;
fmbLschcAppointMod   = 2;
fmbLschAppDateMod    = 3;
fmbLschSisOplMod     = 4;
fmbLschCodTarMod     = 5;
fmbLschRazrMod       = 6;
fmbLschRejimMod      = 7;
fmbLschKategMod      = 8;
fmbLschTarifMod      = 9;
fmbLschAppDateMod2   = 10;
fmbLschValMod        = 11;
fmbLschDATUVMod      = 12;
fmbLschKolIjdMod     = 13;
//Persons
fmbLschSovmMod       = 14;
fmbLschDATPOSMod     = 15;
fmbLschPROFSMod      = 16;

fmbLschDATN13Mod     = 17;
fmbLschDATNPSMod     = 18;
fmbLschDATNVISMod    = 19;
fmbSSPayCurrencyMod  = 20;


//------------------------------------------------------------------------------
// коды элементов аминистративно-территориального деления
// [a]dminidtrative and [t]erritorial [d]ivision [e]lements
//------------------------------------------------------------------------------
atdeUnknown    = 0; // неизвестный
atdeCountry    = 1; // страна
atdeOblast     = 2; // область
atdeRayon      = 3; // район
atdeCity       = 4; // город
atdeSettlement = 5; //населенный пункт
atdeDistrict   = 6; // район в городе
atdeStreet     = 7; // улица
atdeRegion     = 20; // регион
//------------------------------------------------------------------------------
// Название внешнего атребута, для таблицы PREREXOD, в котором хранится
// корректирующий коэфициент
//------------------------------------------------------------------------------
ChangeCorrectiveFactorExtAttrName = 'PEREXOD_CorRectiveFactor';
EmailCh = 'EMAIL_CH';

//------------------------------------------------------------------------------
// Типы данных в таблице: спецификация бригад (поле: BRWORK.PRIZ)
// [b]rigade [d]ata [c]hoices
//------------------------------------------------------------------------------
bdcBrigadiersHistory = 0; // Архив бригадиров
//------------------------------------------------------------------------------
// Константы налогов на ФОТ (для ЕСН)
//      [n]ame [t]axes
//------------------------------------------------------------------------------
ntFB = 1; //Федеральный бюджет
ntFSS= 2; //ФСС
ntFFOMS= 3;
ntTFOMS= 4;
//------------------------------------------------------------------------------
// Константы ученых степеней
//      [a]cademic [d]egree
//------------------------------------------------------------------------------
adCandidate = 2;
adDoctor    = 10;
//------------------------------------------------------------------------------
// Константы типа склоняемого слова
//      [y]ears [m]onths [d]ays
//------------------------------------------------------------------------------
ymdYears    = 1;
ymdMonths   = 2;
ymdDays     = 3;
//------------------------------------------------------------------------------
// Порядок группировки реестра
//      [p]ayroll [g]roup
//------------------------------------------------------------------------------
pgbank = 1;
pgorg  = 2;
//------------------------------------------------------------------------------
// Вид реестра
//      [p]ayroll [k]ind
//------------------------------------------------------------------------------
pkSoc = 12;
//------------------------------------------------------------------------------
// Типы паспортов
//      [p]assport [t]ype
//------------------------------------------------------------------------------
ptSIK = 501;
pt_NN = 505;

//------------------------------------------------------------------------------
// Тип листка нетрудоспособности
// [s]ick [l]ist [t]ype
//------------------------------------------------------------------------------
// больничные текущего периода
sltCurrentPeriod  = 0;
// больничные прошлых периодов (архивные)
sltPastPeriod     = 3;
// больнычные будущего периода (не участвующие в расчетах)
sltFuturePeriod   = 5;

// Типы аттестация
attCommon        = 0;
attProfInspect   = 1;

//------------------------------------------------------------------------------
// Дополнительные аттрибуты отпуска
// [v]acation [a]dditional [a]ttributes
//------------------------------------------------------------------------------
// отпуск помечен как удаленный
vaaCancelled  = 1;

//------------------------------------------------------------------------------
// Настройки файла экспорта для реестров
//  [t]unes [f]ormat [f]ile
//------------------------------------------------------------------------------
// настройки для модуля Зарплата
tffMoney  = 7804;

//------------------------------------------------------------------------------
// Нумерация платёжных документов
// [p]ayment [d]ocuments [n]umbering
//------------------------------------------------------------------------------
// традиционный способ (от заданного пользователем, с уникальным префиксом "$" или "$R")
pdnDefault = 0;
// по настройкам Бухконтура
pdnSystem = 1;

//------------------------------------------------------------------------------
// способ расчета сверхурочных часов
// [o]verwork [c]alculation [m]ethod
//------------------------------------------------------------------------------
// подневный учет
ocmDaily = 0;
// суммированный учет (период = месяц)
ocmSummed = 1;

//------------------------------------------------------------------------------
// SalaryDepartmentsSelector:
// options:
//------------------------------------------------------------------------------
// тип входного параметра - longint
// представление: первый байт - по значению три остальные - битовые флаги
// {11111111} [11111111 11111111 11111111]
// емкость: 3*8 = 24 независимые опции (3 байта с битовыми флагами)
//          2^8=  256 режимов
// [s]alary [d]epartments [s]elector [o]ption
//------------------------------------------------------------------------------
// обычный режим пересканирования лицевых счетов
sdsoCommon = 0;
// включение фильтра по цеху отнесения затрат
sdsoOZFilterOn = 1;
// отображение лицевых счетов за прошлый период
sdsoLastPeriod = 2;

//------------------------------------------------------------------------------
// Pafilter:
//------------------------------------------------------------------------------
//----------------------------------------
// [p]ersonal [a]ccount [f]ilter [o]ption настройки всяких фильтров и иже
//----------------------------------------
// обычный инит
pafoCommon = 1;
// пересканирование за прошлый период
pafoLastPeriod = 2;
// с фильтром по цеху отнесения затрат
pafoCexozFilter = 3;

